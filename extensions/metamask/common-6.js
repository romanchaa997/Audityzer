LavaPack.loadBundle(
  [
    [
      2953,
      {
        '../logger.cjs': 2947,
        '../types.cjs': 2948,
        './gas-flow.cjs': 2954,
        './swaps.cjs': 2964,
        '@metamask/controller-utils': 1515,
        '@metamask/utils': 2995,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.gweiDecimalToWeiDecimal = n.gweiDecimalToWeiHex = n.updateGasFees = void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('@metamask/utils'),
                  o = e('./gas-flow.cjs'),
                  i = e('./swaps.cjs'),
                  a = e('../logger.cjs'),
                  c = e('../types.cjs'),
                  u = (0, s.createModuleLogger)(a.projectLogger, 'gas-fees');
                function l(e) {
                  return (0, r.toHex)((0, r.gweiDecToWEIBN)(e));
                }
                (n.updateGasFees = async function (e) {
                  const { txMeta: t } = e,
                    n = { ...t.txParams },
                    a = i.SWAP_TRANSACTION_TYPES.includes(t.type)
                      ? undefined
                      : e.getSavedGasFees(t.chainId),
                    d = await (async function (e) {
                      const {
                          eip1559: t,
                          ethQuery: n,
                          gasFeeFlows: i,
                          getGasFeeEstimates: a,
                          messenger: l,
                          txMeta: d,
                        } = e,
                        { networkClientId: f } = d;
                      if (
                        (!t && d.txParams.gasPrice) ||
                        (t && d.txParams.maxFeePerGas && d.txParams.maxPriorityFeePerGas)
                      )
                        return {};
                      const h = (0, o.getGasFeeFlow)(d, i, l);
                      try {
                        const e = await a({ networkClientId: f }),
                          t = await h.getGasFees({
                            ethQuery: n,
                            gasFeeControllerData: e,
                            messenger: l,
                            transactionMeta: d,
                          }),
                          r = t.estimates?.type;
                        switch (r) {
                          case c.GasFeeEstimateType.FeeMarket:
                            return t.estimates.medium;
                          case c.GasFeeEstimateType.Legacy:
                            return { gasPrice: t.estimates.medium };
                          case c.GasFeeEstimateType.GasPrice:
                            return { gasPrice: t.estimates.gasPrice };
                          default:
                            throw new Error(
                              `Unsupported gas fee estimate type returned from flow: ${r}`
                            );
                        }
                      } catch (e) {
                        u('Failed to get suggested gas fees', e);
                      }
                      const p = await (0, r.query)(n, 'gasPrice');
                      return { gasPrice: p ? (0, s.add0x)(p.toString(16)) : undefined };
                    })(e);
                  u('Suggested gas fees', d);
                  const f = { ...e, initialParams: n, savedGasFees: a, suggestedGasFees: d };
                  (t.txParams.maxFeePerGas = (function (e) {
                    const {
                      savedGasFees: t,
                      eip1559: n,
                      initialParams: r,
                      suggestedGasFees: s,
                    } = e;
                    if (!n) return undefined;
                    if (t) {
                      const e = l(t.maxBaseFee);
                      return u('Using maxFeePerGas from savedGasFees', e), e;
                    }
                    if (r.maxFeePerGas)
                      return u('Using maxFeePerGas from request', r.maxFeePerGas), r.maxFeePerGas;
                    if (r.gasPrice && !r.maxPriorityFeePerGas)
                      return (
                        u('Setting maxFeePerGas to gasPrice from request', r.gasPrice), r.gasPrice
                      );
                    if (s.maxFeePerGas)
                      return u('Using suggested maxFeePerGas', s.maxFeePerGas), s.maxFeePerGas;
                    if (s.gasPrice)
                      return (
                        u('Setting maxFeePerGas to suggested gasPrice', s.gasPrice), s.gasPrice
                      );
                    return u('maxFeePerGas not set'), undefined;
                  })(f)),
                    (t.txParams.maxPriorityFeePerGas = (function (e) {
                      const {
                        eip1559: t,
                        initialParams: n,
                        savedGasFees: r,
                        suggestedGasFees: s,
                        txMeta: o,
                      } = e;
                      if (!t) return undefined;
                      if (r) {
                        const e = l(r.priorityFee);
                        return u('Using maxPriorityFeePerGas from savedGasFees.priorityFee', e), e;
                      }
                      if (n.maxPriorityFeePerGas)
                        return (
                          u('Using maxPriorityFeePerGas from request', n.maxPriorityFeePerGas),
                          n.maxPriorityFeePerGas
                        );
                      if (n.gasPrice && !n.maxFeePerGas)
                        return (
                          u('Setting maxPriorityFeePerGas to gasPrice from request', n.gasPrice),
                          n.gasPrice
                        );
                      if (s.maxPriorityFeePerGas)
                        return (
                          u('Using suggested maxPriorityFeePerGas', s.maxPriorityFeePerGas),
                          s.maxPriorityFeePerGas
                        );
                      if (o.txParams.maxFeePerGas)
                        return (
                          u(
                            'Setting maxPriorityFeePerGas to maxFeePerGas',
                            o.txParams.maxFeePerGas
                          ),
                          o.txParams.maxFeePerGas
                        );
                      return u('maxPriorityFeePerGas not set'), undefined;
                    })(f)),
                    (t.txParams.gasPrice = (function (e) {
                      const { eip1559: t, initialParams: n, suggestedGasFees: r } = e;
                      if (t) return undefined;
                      if (n.gasPrice)
                        return u('Using gasPrice from request', n.gasPrice), n.gasPrice;
                      if (r.maxFeePerGas)
                        return u('Using suggested maxFeePerGas', r.maxFeePerGas), r.maxFeePerGas;
                      if (r.gasPrice) return u('Using suggested gasPrice', r.gasPrice), r.gasPrice;
                      return u('gasPrice not set'), undefined;
                    })(f)),
                    (t.userFeeLevel = (function (e) {
                      const {
                        eip1559: t,
                        initialParams: n,
                        savedGasFees: s,
                        suggestedGasFees: o,
                        txMeta: i,
                      } = e;
                      if (!t) return undefined;
                      if (s) return c.UserFeeLevel.CUSTOM;
                      if (!n.maxFeePerGas && !n.maxPriorityFeePerGas && n.gasPrice)
                        return i.origin === r.ORIGIN_METAMASK
                          ? c.UserFeeLevel.CUSTOM
                          : c.UserFeeLevel.DAPP_SUGGESTED;
                      if (
                        !n.maxFeePerGas &&
                        !n.maxPriorityFeePerGas &&
                        o.maxFeePerGas &&
                        o.maxPriorityFeePerGas
                      )
                        return c.UserFeeLevel.MEDIUM;
                      if (i.origin === r.ORIGIN_METAMASK) return c.UserFeeLevel.MEDIUM;
                      return c.UserFeeLevel.DAPP_SUGGESTED;
                    })(f)),
                    u('Updated gas fee properties', {
                      maxFeePerGas: t.txParams.maxFeePerGas,
                      maxPriorityFeePerGas: t.txParams.maxPriorityFeePerGas,
                      gasPrice: t.txParams.gasPrice,
                    }),
                    (t.txParams.maxFeePerGas || t.txParams.maxPriorityFeePerGas) &&
                      delete t.txParams.gasPrice,
                    t.txParams.gasPrice &&
                      (delete t.txParams.maxFeePerGas, delete t.txParams.maxPriorityFeePerGas),
                    (function (e) {
                      e.defaultGasEstimates || (e.defaultGasEstimates = {});
                      (e.defaultGasEstimates.maxFeePerGas = e.txParams.maxFeePerGas),
                        (e.defaultGasEstimates.maxPriorityFeePerGas =
                          e.txParams.maxPriorityFeePerGas),
                        (e.defaultGasEstimates.gasPrice = e.txParams.gasPrice),
                        (e.defaultGasEstimates.estimateType = e.userFeeLevel);
                    })(t);
                }),
                  (n.gweiDecimalToWeiHex = l),
                  (n.gweiDecimalToWeiDecimal = function (e) {
                    const t = 'string' == typeof e ? e : String(e);
                    return (1e9 * Number(t)).toString();
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/gas-fees.cjs',
      },
    ],
    [
      2954,
      { '../types.cjs': 2948, '@metamask/controller-utils': 1515 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.mergeGasFeeEstimates = n.getGasFeeFlow = void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('../types.cjs');
                function o(e, t) {
                  return (0, r.weiHexToGweiDec)(e[t]);
                }
                (n.getGasFeeFlow = function (e, t, n) {
                  return t.find(t => t.matchesTransaction({ transactionMeta: e, messenger: n }));
                }),
                  (n.mergeGasFeeEstimates = function ({
                    gasFeeControllerEstimates: e,
                    transactionGasFeeEstimates: t,
                  }) {
                    const n = t.type;
                    return n === s.GasFeeEstimateType.FeeMarket
                      ? Object.values(s.GasFeeEstimateLevel).reduce(
                          (n, s) => {
                            return {
                              ...n,
                              [s]:
                                ((o = e?.[s]),
                                (i = t[s]),
                                {
                                  ...o,
                                  suggestedMaxFeePerGas: (0, r.weiHexToGweiDec)(i.maxFeePerGas),
                                  suggestedMaxPriorityFeePerGas: (0, r.weiHexToGweiDec)(
                                    i.maxPriorityFeePerGas
                                  ),
                                }),
                            };
                            var o, i;
                          },
                          { ...e }
                        )
                      : n === s.GasFeeEstimateType.Legacy
                        ? Object.values(s.GasFeeEstimateLevel).reduce(
                            (e, n) => ({ ...e, [n]: o(t, n) }),
                            {}
                          )
                        : n === s.GasFeeEstimateType.GasPrice
                          ? { gasPrice: ((i = t), (0, r.weiHexToGweiDec)(i.gasPrice)) }
                          : e;
                    var i;
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/gas-flow.cjs',
      },
    ],
    [
      2955,
      {
        '../logger.cjs': 2947,
        '../types.cjs': 2948,
        './eip7702.cjs': 2950,
        './feature-flags.cjs': 2952,
        './simulation-api.cjs': 2962,
        '@metamask/controller-utils': 1515,
        '@metamask/utils': 2995,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.addGasBuffer =
                    n.estimateGas =
                    n.updateGas =
                    n.DUMMY_AUTHORIZATION_SIGNATURE =
                    n.INTRINSIC_GAS =
                    n.MAX_GAS_BLOCK_PERCENT =
                    n.DEFAULT_GAS_MULTIPLIER =
                    n.FIXED_GAS =
                    n.log =
                      void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('@metamask/utils'),
                  o = e('./eip7702.cjs'),
                  i = e('./feature-flags.cjs'),
                  a = e('./simulation-api.cjs'),
                  c = e('../logger.cjs'),
                  u = e('../types.cjs');
                async function l({
                  chainId: e,
                  ethQuery: t,
                  isSimulationEnabled: c,
                  messenger: l,
                  txParams: d,
                }) {
                  const f = { ...d },
                    { authorizationList: h, data: p, from: m, value: g, to: y } = f,
                    { gasLimit: b, number: w } = await (async function (e) {
                      return await (0, r.query)(e, 'getBlockByNumber', ['latest', !1]);
                    })(t),
                    v = (0, r.hexToBN)(b),
                    { percentage: _, fixed: E } = (0, i.getGasEstimateFallback)(e, l),
                    S = E ? (0, r.toHex)(E) : (0, r.BNToHex)((0, r.fractionBN)(v, _, 100));
                  (0, n.log)('Estimation fallback values', S),
                    (f.data = p ? (0, s.add0x)(p) : p),
                    (f.value = g || '0x0'),
                    (f.authorizationList = (function (e, t) {
                      return e?.map(e => ({
                        ...e,
                        chainId: e.chainId ?? t,
                        nonce: e.nonce ?? '0x1',
                        r: e.r ?? n.DUMMY_AUTHORIZATION_SIGNATURE,
                        s: e.s ?? n.DUMMY_AUTHORIZATION_SIGNATURE,
                        yParity: e.yParity ?? '0x1',
                      }));
                    })(f.authorizationList, e)),
                    delete f.gasPrice,
                    delete f.maxFeePerGas,
                    delete f.maxPriorityFeePerGas;
                  let x,
                    T = S;
                  const I =
                    d.type === u.TransactionEnvelopeType.setCode &&
                    Boolean(h?.length) &&
                    Boolean(p) &&
                    '0x' !== p &&
                    m?.toLowerCase() === y?.toLowerCase();
                  try {
                    T =
                      c && I
                        ? await (async function (e, t, i) {
                            const c = await (0, r.query)(t, 'estimateGas', [{ ...e, data: '0x' }]);
                            (0, n.log)('Upgrade only gas', c);
                            const u = e.authorizationList?.[0].address,
                              l = await (async function ({
                                chainId: e,
                                delegationAddress: t,
                                transaction: n,
                              }) {
                                const r = await (0, a.simulateTransactions)(e, {
                                    transactions: [
                                      { to: n.to, from: n.from, data: n.data, value: n.value },
                                    ],
                                    overrides: {
                                      [n.from]: {
                                        code: t && o.DELEGATION_PREFIX + (0, s.remove0x)(t),
                                      },
                                    },
                                  }),
                                  i = r?.transactions?.[0].gasUsed;
                                if (!i) throw new Error('No simulated gas returned');
                                return i;
                              })({ chainId: i, delegationAddress: u, transaction: e });
                            (0, n.log)('Execute gas', l);
                            const d = (0, r.BNToHex)(
                              (0, r.hexToBN)(c)
                                .add((0, r.hexToBN)(l))
                                .subn(n.INTRINSIC_GAS)
                            );
                            return (0, n.log)('Total type 4 gas', d), d;
                          })(f, t, e)
                        : await (0, r.query)(t, 'estimateGas', [f]);
                  } catch (e) {
                    (x = {
                      reason: e.message,
                      errorKey: e.errorKey,
                      debug: { blockNumber: w, blockGasLimit: b },
                    }),
                      (0, n.log)('Estimation failed', { ...x, fallback: S });
                  }
                  return {
                    blockGasLimit: b,
                    estimatedGas: T,
                    isUpgradeWithDataToSelf: I,
                    simulationFails: x,
                  };
                }
                function d(e, t, o) {
                  const i = (0, r.hexToBN)(e),
                    a = (0, r.fractionBN)((0, r.hexToBN)(t), n.MAX_GAS_BLOCK_PERCENT, 100),
                    c = (0, r.fractionBN)(i, 100 * o, 100);
                  if (i.gt(a)) {
                    const t = (0, s.add0x)(e);
                    return (0, n.log)('Using estimated value', t), t;
                  }
                  if (c.lt(a)) {
                    const e = (0, s.add0x)((0, r.BNToHex)(c));
                    return (0, n.log)('Using padded estimate', e, o), e;
                  }
                  const u = (0, s.add0x)((0, r.BNToHex)(a));
                  return (0, n.log)('Using 90% of block gas limit', u), u;
                }
                (n.log = (0, s.createModuleLogger)(c.projectLogger, 'gas')),
                  (n.FIXED_GAS = '0x5208'),
                  (n.DEFAULT_GAS_MULTIPLIER = 1.5),
                  (n.MAX_GAS_BLOCK_PERCENT = 90),
                  (n.INTRINSIC_GAS = 21e3),
                  (n.DUMMY_AUTHORIZATION_SIGNATURE =
                    '0x1111111111111111111111111111111111111111111111111111111111111111'),
                  (n.updateGas = async function (e) {
                    const { txMeta: t } = e,
                      s = { ...t.txParams },
                      [o, a, c] = await (async function (e) {
                        const {
                            chainId: t,
                            isCustomNetwork: s,
                            isSimulationEnabled: o,
                            messenger: a,
                            txMeta: c,
                          } = e,
                          { disableGasBuffer: u } = c;
                        if (c.txParams.gas)
                          return (
                            (0, n.log)('Using value from request', c.txParams.gas),
                            [c.txParams.gas, undefined, c.txParams.gas]
                          );
                        if (
                          await (async function ({ ethQuery: e, txMeta: t, isCustomNetwork: n }) {
                            const {
                              txParams: { to: s, data: o },
                            } = t;
                            if (n || !s || o) return !1;
                            const i = await (async function (e, t) {
                              return await (0, r.query)(e, 'getCode', [t]);
                            })(e, s);
                            return !i || '0x' === i;
                          })(e)
                        )
                          return (
                            (0, n.log)('Using fixed value', n.FIXED_GAS),
                            [n.FIXED_GAS, undefined, n.FIXED_GAS]
                          );
                        const {
                          blockGasLimit: f,
                          estimatedGas: h,
                          isUpgradeWithDataToSelf: p,
                          simulationFails: m,
                        } = await l({
                          chainId: e.chainId,
                          ethQuery: e.ethQuery,
                          isSimulationEnabled: o,
                          messenger: a,
                          txParams: c.txParams,
                        });
                        (0, n.log)('Original estimated gas', h),
                          m && (0, n.log)('Using original fallback estimate as simulation failed');
                        u && (0, n.log)('Gas buffer disabled');
                        if (m || u) return [h, m, h];
                        const g = (0, i.getGasEstimateBuffer)({
                          chainId: t,
                          isCustomRPC: s,
                          isUpgradeWithDataToSelf: p,
                          messenger: a,
                        });
                        (0, n.log)('Buffer', g);
                        const y = d(h, f, g);
                        return (0, n.log)('Buffered gas', y), [y, m, h];
                      })(e);
                    (t.txParams.gas = o),
                      (t.simulationFails = a),
                      (t.gasLimitNoBuffer = c),
                      s.gas || (t.originalGasEstimate = t.txParams.gas),
                      t.defaultGasEstimates || (t.defaultGasEstimates = {}),
                      (t.defaultGasEstimates.gas = t.txParams.gas);
                  }),
                  (n.estimateGas = l),
                  (n.addGasBuffer = d);
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/gas.cjs',
      },
    ],
    [
      2956,
      { 'fast-json-patch': 4500, lodash: 4921 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.updateTransactionHistory =
                    n.addInitialHistorySnapshot =
                    n.DISPLAYED_TRANSACTION_HISTORY_PATHS =
                    n.MAX_TRANSACTION_HISTORY_LENGTH =
                      void 0);
                const s = r(e('fast-json-patch')),
                  o = e('lodash');
                function i(e, t, n) {
                  const r = s.default.compare(e, t);
                  return r[0] && (n && (r[0].note = n), (r[0].timestamp = Date.now())), r;
                }
                function a(e) {
                  return (0, o.cloneDeep)(e).reduce(
                    (e, t) => s.default.applyPatch(e, t).newDocument
                  );
                }
                function c(e) {
                  const t = { ...e };
                  return delete t.history, (0, o.cloneDeep)(t);
                }
                (n.MAX_TRANSACTION_HISTORY_LENGTH = 100),
                  (n.DISPLAYED_TRANSACTION_HISTORY_PATHS = [
                    '/status',
                    '/txParams/gasPrice',
                    '/txParams/gas',
                    '/estimatedBaseFee',
                    '/blockTimestamp',
                  ]),
                  (n.addInitialHistorySnapshot = function (e) {
                    const t = c(e);
                    return (0, o.merge)({}, e, { history: [t] });
                  }),
                  (n.updateTransactionHistory = function (e, t) {
                    if (!e.history) return e;
                    const r = c(e),
                      s = i(a(e.history), r, t);
                    if (0 === s.length) return e;
                    let u = [...e.history, s];
                    return (
                      u.length > n.MAX_TRANSACTION_HISTORY_LENGTH &&
                        (u = (function (e) {
                          const t = e[0],
                            r = e.slice(1),
                            s = r.findIndex(
                              e =>
                                !e.some(({ path: e }) =>
                                  n.DISPLAYED_TRANSACTION_HISTORY_PATHS.includes(e)
                                )
                            );
                          if (-1 === s) return e;
                          const o = s === r.length - 1 ? s - 1 : s + 1,
                            c = Math.min(s, o),
                            u = r[c],
                            l = r[c + 1],
                            d = a([t, ...r.slice(0, c)]),
                            f = a([d, u, l]),
                            h = i(d, f, `${String(u[0].note)}, ${String(l[0].note)}`);
                          return r.splice(c, 2, h), [t, ...r];
                        })(u)),
                      (0, o.merge)({}, e, { history: u })
                    );
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/history.cjs',
      },
    ],
    [
      2957,
      { '../logger.cjs': 2947, '@metamask/utils': 2995 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getTransactionLayer1GasFee = n.updateTransactionLayer1GasFee = void 0);
                const r = e('@metamask/utils'),
                  s = e('../logger.cjs'),
                  o = (0, r.createModuleLogger)(s.projectLogger, 'layer-1-gas-fee-flow');
                async function i({
                  layer1GasFeeFlows: e,
                  messenger: t,
                  provider: n,
                  transactionMeta: r,
                }) {
                  const s = (function (e, t, n) {
                    return t.find(t => t.matchesTransaction({ transactionMeta: e, messenger: n }));
                  })(r, e, t);
                  if (!s) return undefined;
                  o('Found layer 1 gas fee flow', s.constructor.name, r.id);
                  try {
                    const { layer1Fee: e } = await s.getLayer1Fee({
                      provider: n,
                      transactionMeta: r,
                    });
                    return e;
                  } catch (e) {
                    return o('Failed to get layer 1 gas fee', r.id, e), undefined;
                  }
                }
                (n.updateTransactionLayer1GasFee = async function (e) {
                  const t = await i(e);
                  if (!t) return;
                  const { transactionMeta: n } = e;
                  (n.layer1GasFee = t), o('Updated layer 1 gas fee', t, n.id);
                }),
                  (n.getTransactionLayer1GasFee = i);
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/layer1-gas-fee-flow.cjs',
      },
    ],
    [
      2958,
      { '../logger.cjs': 2947, '@metamask/controller-utils': 1515 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getAndFormatTransactionsForNonceTracker = n.getNextNonce = void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('../logger.cjs'),
                  o = (0, s.createModuleLogger)(s.projectLogger, 'nonce');
                (n.getNextNonce = async function (e, t) {
                  const {
                    customNonceValue: n,
                    isExternalSign: s,
                    txParams: { from: i, nonce: a },
                  } = e;
                  if (s) return [undefined, undefined];
                  const c = n ? (0, r.toHex)(n) : undefined;
                  if (c) return o('Using custom nonce', c), [c, undefined];
                  if (a) return o('Using existing nonce', a), [a, undefined];
                  const u = await t(i),
                    l = (0, r.toHex)(u.nextNonce),
                    d = u.releaseLock.bind(u);
                  return o('Using nonce from nonce tracker', l, u.nonceDetails), [l, d];
                }),
                  (n.getAndFormatTransactionsForNonceTracker = function (e, t, n, r) {
                    return r
                      .filter(
                        ({
                          chainId: r,
                          isTransfer: s,
                          isUserOperation: o,
                          status: i,
                          txParams: { from: a },
                        }) =>
                          !s &&
                          !o &&
                          r === e &&
                          n.includes(i) &&
                          a.toLowerCase() === t.toLowerCase()
                      )
                      .map(({ status: e, txParams: { from: t, gas: n, value: r, nonce: s } }) => ({
                        status: e,
                        history: [{}],
                        txParams: { from: t ?? '', gas: n ?? '', value: r ?? '', nonce: s ?? '' },
                      }));
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/nonce.cjs',
      },
    ],
    [
      2959,
      { '@ethereumjs/common': 445, '@ethereumjs/tx': 462, '@metamask/utils': 2995 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.serializeTransaction = n.prepareTransaction = n.HARDFORK = void 0);
                const r = e('@ethereumjs/common'),
                  s = e('@ethereumjs/tx'),
                  o = e('@metamask/utils');
                function i(e) {
                  const t = { chainId: parseInt(e, 16), defaultHardfork: n.HARDFORK };
                  return r.Common.custom(t, { eips: [7702] });
                }
                (n.HARDFORK = r.Hardfork.Prague),
                  (n.prepareTransaction = function (e, t) {
                    const n = t;
                    return s.TransactionFactory.fromTxData(n, { freeze: !1, common: i(e) });
                  }),
                  (n.serializeTransaction = function (e) {
                    return (0, o.bytesToHex)(e.serialize());
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/prepare.cjs',
      },
    ],
    [
      2960,
      { '@metamask/controller-utils': 1515, '@metamask/utils': 2995 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getTransactionParamsWithIncreasedGasFee = void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('@metamask/utils');
                function o(e, t) {
                  const n = (0, r.convertHexToDecimal)(e),
                    o = parseInt('' + n * t, 10);
                  return (0, s.add0x)(o.toString(16));
                }
                n.getTransactionParamsWithIncreasedGasFee = function (e, t, n) {
                  const r = (function (e, t, n) {
                      if (n && 'gasPrice' in n) return n.gasPrice;
                      const r = e.gasPrice;
                      if (!r || '0x0' === r) return undefined;
                      return o(r, t);
                    })(e, t, n),
                    s = (function (e, t, n) {
                      if (n && 'maxFeePerGas' in n && 'maxPriorityFeePerGas' in n) return n;
                      const r = e.maxFeePerGas,
                        s = e.maxPriorityFeePerGas;
                      if (!r || !s || '0x0' === r || '0x0' === s) return undefined;
                      const i = o(r, t),
                        a = o(s, t);
                      return { maxFeePerGas: i, maxPriorityFeePerGas: a };
                    })(e, t, n);
                  if (s) {
                    const t = { ...e, ...s };
                    return delete t.gasPrice, t;
                  }
                  if (r) {
                    const t = { ...e, gasPrice: r };
                    return delete t.maxFeePerGas, delete t.maxPriorityFeePerGas, t;
                  }
                  throw new Error(
                    'Cannot increase gas fee as no current values and no new values were provided'
                  );
                };
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/retry.cjs',
      },
    ],
    [
      2961,
      { '@ethersproject/wallet': 600, '@metamask/utils': 2995 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.isValidSignature = void 0);
                const r = e('@ethersproject/wallet'),
                  s = e('@metamask/utils');
                n.isValidSignature = function (e, t, n) {
                  try {
                    const o = (0, s.add0x)(e.map(s.remove0x).join('')),
                      i = (0, s.hexToBytes)(o);
                    return (0, r.verifyMessage)(i, t).toLowerCase() === n.toLowerCase();
                  } catch {
                    return !1;
                  }
                };
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/signature.cjs',
      },
    ],
    [
      2962,
      {
        '../errors.cjs': 2928,
        '../logger.cjs': 2947,
        '@metamask/controller-utils': 1515,
        '@metamask/utils': 2995,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.simulateTransactions = void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('@metamask/utils'),
                  o = e('../errors.cjs'),
                  i = e('../logger.cjs'),
                  a = (0, s.createModuleLogger)(i.projectLogger, 'simulation-api'),
                  c = 'https://tx-sentinel-{0}.api.cx.metamask.io/',
                  u = 'networks';
                let l = 0;
                function d(e) {
                  return c.replace('{0}', e);
                }
                n.simulateTransactions = async function (e, t) {
                  const n = await (async function (e) {
                    const t = await (async function () {
                        const e = `${d('ethereum-mainnet')}${u}`,
                          t = await fetch(e);
                        return t.json();
                      })(),
                      n = (0, r.convertHexToDecimal)(e),
                      s = t[n];
                    if (!s?.confirmations)
                      throw (
                        (a('Chain is not supported', e), new o.SimulationChainNotSupportedError(e))
                      );
                    return d(s.network);
                  })(e);
                  a('Sending request', n, t);
                  const s = l;
                  l += 1;
                  const i = await fetch(n, {
                      method: 'POST',
                      body: JSON.stringify({
                        id: String(s),
                        jsonrpc: '2.0',
                        method: 'infura_simulateTransactions',
                        params: [t],
                      }),
                    }),
                    c = await i.json();
                  if ((a('Received response', c), c.error)) {
                    const { code: e, message: t } = c.error;
                    throw new o.SimulationError(t, e);
                  }
                  return c?.result;
                };
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/simulation-api.cjs',
      },
    ],
    [
      2963,
      {
        '../constants.cjs': 2927,
        '../errors.cjs': 2928,
        '../logger.cjs': 2947,
        '../types.cjs': 2948,
        './simulation-api.cjs': 2962,
        '@ethersproject/abi': 504,
        '@metamask/controller-utils': 1515,
        '@metamask/metamask-eth-abis': 2113,
        '@metamask/utils': 2995,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getEvents = n.getSimulationData = n.SupportedToken = void 0);
                const r = e('@ethersproject/abi'),
                  s = e('@metamask/controller-utils'),
                  o = e('@metamask/metamask-eth-abis'),
                  i = e('@metamask/utils'),
                  a = e('./simulation-api.cjs'),
                  c = e('../constants.cjs'),
                  u = e('../errors.cjs'),
                  l = e('../logger.cjs'),
                  d = e('../types.cjs');
                var f;
                !(function (e) {
                  (e.ERC20 = 'erc20'),
                    (e.ERC721 = 'erc721'),
                    (e.ERC1155 = 'erc1155'),
                    (e.ERC20_WRAPPED = 'erc20Wrapped'),
                    (e.ERC721_LEGACY = 'erc721Legacy');
                })(f || (n.SupportedToken = f = {}));
                const h = (0, i.createModuleLogger)(l.projectLogger, 'simulation'),
                  p = ['Transfer', 'TransferSingle', 'TransferBatch', 'Deposit', 'Withdrawal'],
                  m = {
                    [f.ERC20]: { abi: o.abiERC20, standard: d.SimulationTokenStandard.erc20 },
                    [f.ERC721]: { abi: o.abiERC721, standard: d.SimulationTokenStandard.erc721 },
                    [f.ERC1155]: { abi: o.abiERC1155, standard: d.SimulationTokenStandard.erc1155 },
                    [f.ERC20_WRAPPED]: {
                      abi: c.ABI_SIMULATION_ERC20_WRAPPED,
                      standard: d.SimulationTokenStandard.erc20,
                    },
                    [f.ERC721_LEGACY]: {
                      abi: c.ABI_SIMULATION_ERC721_LEGACY,
                      standard: d.SimulationTokenStandard.erc721,
                    },
                  },
                  g = ['execution reverted', 'insufficient funds for gas'];
                function y(e) {
                  const t = x(e.transactions[0]?.callTrace ?? {});
                  h('Extracted logs', t);
                  const n = (function () {
                    const e = Object.values(f);
                    return new Map(
                      e.map(e => {
                        const { abi: t } = m[e];
                        return [e, new r.Interface(t)];
                      })
                    );
                  })();
                  return t
                    .map(e => {
                      const t = (function (e, t) {
                        const n = Object.values(f);
                        for (const r of n)
                          try {
                            const n = t.get(r),
                              { abi: s, standard: o } = m[r];
                            return { ...n.parseLog(e), abi: s, standard: o };
                          } catch (e) {
                            continue;
                          }
                        return undefined;
                      })(e, n);
                      if (!t) return h('Failed to parse log', e), undefined;
                      const r = t.abi.find(e => e.name === t.name)?.inputs;
                      if (!r) return h('Failed to find inputs for event', t), undefined;
                      if (!p.includes(t.name))
                        return h('Ignoring unsupported event', t.name, t), undefined;
                      h('Normalizing event args', t.name, t);
                      const s = (function (e, t) {
                        return e.reduce((e, n, r) => {
                          const s = t[r].name.replace('_', ''),
                            o = b(n);
                          return (e[s] = o), e;
                        }, {});
                      })(t.args, r);
                      return {
                        contractAddress: e.address,
                        tokenStandard: t.standard,
                        name: t.name,
                        args: s,
                        abi: t.abi,
                      };
                    })
                    .filter(e => e !== undefined);
                }
                function b(e) {
                  if (Array.isArray(e)) return e.map(b);
                  let t = e;
                  return (t = t.toHexString?.() ?? t), (t = t.toLowerCase?.() ?? t), t;
                }
                function w(e) {
                  return (
                    'Transfer' === e.name &&
                    e.tokenStandard === d.SimulationTokenStandard.erc721 &&
                    0 === parseInt(e.args.from, 16)
                  );
                }
                function v(e) {
                  return e.tokenStandard === d.SimulationTokenStandard.erc721
                    ? [e.args.tokenId]
                    : e.tokenStandard === d.SimulationTokenStandard.erc1155 &&
                        'TransferSingle' === e.name
                      ? [e.args.id]
                      : e.tokenStandard === d.SimulationTokenStandard.erc1155 &&
                          'TransferBatch' === e.name
                        ? e.args.ids
                        : [undefined];
                }
                function _(e) {
                  switch (e) {
                    case d.SimulationTokenStandard.erc721:
                      return new r.Interface(o.abiERC721);
                    case d.SimulationTokenStandard.erc1155:
                      return new r.Interface(o.abiERC1155);
                    default:
                      return new r.Interface(o.abiERC20);
                  }
                }
                function E(e, t, n) {
                  const r = _(t.standard);
                  try {
                    if (t.standard === d.SimulationTokenStandard.erc721) {
                      const t = r.decodeFunctionResult('ownerOf', n.return);
                      return t[0].toLowerCase() === e.toLowerCase() ? '0x1' : '0x0';
                    }
                    const o = r.decodeFunctionResult('balanceOf', n.return);
                    return (0, s.toHex)(o[0]);
                  } catch (e) {
                    throw (
                      (h('Failed to decode balance transaction', e, { token: t, response: n }),
                      new u.SimulationError(
                        `Failed to decode balance transaction for token ${t.address}: ${String(e)}`
                      ))
                    );
                  }
                }
                function S(e, t, n) {
                  const r = _(e);
                  switch (e) {
                    case d.SimulationTokenStandard.erc721:
                      return r.encodeFunctionData('ownerOf', [n]);
                    case d.SimulationTokenStandard.erc1155:
                      return r.encodeFunctionData('balanceOf', [t, n]);
                    default:
                      return r.encodeFunctionData('balanceOf', [t]);
                  }
                }
                function x(e) {
                  return [...(e.logs ?? []), ...(e.calls ?? []).map(e => x(e)).flat()];
                }
                function T(e, t) {
                  const n = (0, s.hexToBN)(t).sub((0, s.hexToBN)(e)),
                    r = n.isNeg(),
                    o = (0, s.toHex)(n.abs());
                  return n.isZero()
                    ? (h('Balance change is zero'), undefined)
                    : { previousBalance: e, newBalance: t, difference: o, isDecrease: r };
                }
                (n.getSimulationData = async function (e, t = {}) {
                  const { chainId: n, from: r, to: o, value: i, data: c } = e,
                    { blockTime: l, senderCode: d } = t;
                  h('Getting simulation data', e);
                  try {
                    const f = await (0, a.simulateTransactions)(n, {
                        transactions: [{ data: c, from: r, to: o, value: i }],
                        suggestFees: { withTransfer: !0, withFeeTransfer: !0 },
                        withCallTrace: !0,
                        withLogs: !0,
                        ...(l && { blockOverrides: { time: (0, s.toHex)(l) } }),
                        ...(d && { overrides: { [r]: { code: d } } }),
                      }),
                      p = f.transactions?.[0]?.error;
                    if (p) throw new u.SimulationError(p);
                    const m = (function (e, t) {
                        const n = t.transactions[0];
                        if (!n) return undefined;
                        const { stateDiff: r } = n,
                          s = r?.pre?.[e]?.balance,
                          o = r?.post?.[e]?.balance;
                        if (!s || !o) return undefined;
                        return T(s, o);
                      })(e.from, f),
                      g = y(f);
                    h('Parsed events', g);
                    const b = await (async function (e, t, n) {
                        const { from: r } = e,
                          { blockTime: o, senderCode: i } = n,
                          c = (function (e, t) {
                            const n = new Set(),
                              r = new Map(),
                              s = new Map(),
                              o = t.filter(t => [t.args.from, t.args.to].includes(e.from));
                            h('Filtered user events', o);
                            for (const t of o) {
                              const o = v(t);
                              h('Extracted token IDs', o);
                              for (const i of o) {
                                const o = {
                                    address: t.contractAddress,
                                    standard: t.tokenStandard,
                                    id: i,
                                  },
                                  a = JSON.stringify(o);
                                if (n.has(a)) {
                                  h('Ignoring additional event with same contract and token ID', o);
                                  continue;
                                }
                                n.add(a);
                                const c = S(t.tokenStandard, e.from, i),
                                  u = { from: e.from, to: t.contractAddress, data: c };
                                w(t) || r.set(o, u), s.set(o, u);
                              }
                            }
                            return { before: r, after: s };
                          })(e, t);
                        h('Generated balance transactions', [...c.after.values()]);
                        const l = [...c.before.values(), e, ...c.after.values()];
                        if (1 === l.length) return [];
                        const d = await (0, a.simulateTransactions)(e.chainId, {
                          transactions: l,
                          ...(o && { blockOverrides: { time: (0, s.toHex)(o) } }),
                          ...(i && { overrides: { [r]: { code: i } } }),
                        });
                        if (
                          (h('Balance simulation response', d), d.transactions.length !== l.length)
                        )
                          throw new u.SimulationInvalidResponseError();
                        let f = 0;
                        return [...c.after.keys()]
                          .map((t, n) => {
                            const r = T(
                              !c.before.get(t) ? '0x0' : E(e.from, t, d.transactions[f++]),
                              E(e.from, t, d.transactions[n + c.before.size + 1])
                            );
                            return r ? { ...t, ...r } : undefined;
                          })
                          .filter(e => e !== undefined);
                      })(e, g, t),
                      _ = { nativeBalanceChange: m, tokenBalanceChanges: b };
                    let x = [];
                    try {
                      x = (function (e) {
                        const t = e.transactions?.[0]?.fees?.[0];
                        return (t?.tokenFees ?? []).map(e => ({
                          amount: e.balanceNeededToken,
                          balance: e.currentBalanceToken,
                          decimals: e.token.decimals,
                          gas: t.gas,
                          maxFeePerGas: t.maxFeePerGas,
                          maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                          rateWei: e.rateWei,
                          recipient: e.feeRecipient,
                          symbol: e.token.symbol,
                          tokenAddress: e.token.address,
                        }));
                      })(f);
                    } catch (e) {
                      h('Failed to parse gas fee tokens', e, f);
                    }
                    return { gasFeeTokens: x, simulationData: _ };
                  } catch (t) {
                    h('Failed to get simulation data', t, e);
                    let n = t;
                    g.some(e => n.message?.includes(e)) && (n = new u.SimulationRevertedError());
                    const { code: r, message: s } = n;
                    return {
                      gasFeeTokens: [],
                      simulationData: { tokenBalanceChanges: [], error: { code: r, message: s } },
                    };
                  }
                }),
                  (n.getEvents = y);
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/simulation.cjs',
      },
    ],
    [
      2964,
      {
        '../constants.cjs': 2927,
        '../logger.cjs': 2947,
        '../types.cjs': 2948,
        './utils.cjs': 2966,
        '@metamask/controller-utils': 1515,
        lodash: 4921,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.updatePostTransactionBalance =
                    n.updateSwapsTransaction =
                    n.SWAP_TRANSACTION_TYPES =
                    n.SWAPS_CHAINID_DEFAULT_TOKEN_MAP =
                    n.DEFAULT_TOKEN_ADDRESS =
                    n.UPDATE_POST_TX_BALANCE_ATTEMPTS =
                    n.UPDATE_POST_TX_BALANCE_TIMEOUT =
                      void 0);
                const r = e('@metamask/controller-utils'),
                  s = e('lodash'),
                  o = e('./utils.cjs'),
                  i = e('../constants.cjs'),
                  a = e('../logger.cjs'),
                  c = e('../types.cjs'),
                  u = (0, a.createModuleLogger)(a.projectLogger, 'swaps');
                (n.UPDATE_POST_TX_BALANCE_TIMEOUT = 5e3), (n.UPDATE_POST_TX_BALANCE_ATTEMPTS = 6);
                n.DEFAULT_TOKEN_ADDRESS = '0x0000000000000000000000000000000000000000';
                const l = { name: 'Ether', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  d = { name: 'Binance Coin', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  f = { name: 'Matic', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  h = { name: 'Avalanche', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  p = { name: 'Test Ether', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  m = { name: 'Ether', address: n.DEFAULT_TOKEN_ADDRESS, decimals: 18 },
                  g = { ...l },
                  y = { ...l },
                  b = { ...l };
                function w(e, t) {
                  return !(!e || !t) && e === n.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[t]?.address;
                }
                function v(e) {
                  return new Promise(t => setTimeout(t, e));
                }
                (n.SWAPS_CHAINID_DEFAULT_TOKEN_MAP = {
                  [i.CHAIN_IDS.MAINNET]: l,
                  '0x539': p,
                  [i.CHAIN_IDS.BSC]: d,
                  [i.CHAIN_IDS.POLYGON]: f,
                  [i.CHAIN_IDS.GOERLI]: m,
                  [i.CHAIN_IDS.AVALANCHE]: h,
                  [i.CHAIN_IDS.OPTIMISM]: y,
                  [i.CHAIN_IDS.ARBITRUM]: g,
                  [i.CHAIN_IDS.ZKSYNC_ERA]: b,
                }),
                  (n.SWAP_TRANSACTION_TYPES = [
                    c.TransactionType.swap,
                    c.TransactionType.swapAndSend,
                    c.TransactionType.swapApproval,
                  ]),
                  (n.updateSwapsTransaction = function (
                    e,
                    t,
                    r,
                    { isSwapsDisabled: i, cancelTransaction: a, messenger: u }
                  ) {
                    if (i || !n.SWAP_TRANSACTION_TYPES.includes(t)) return e;
                    if (t === c.TransactionType.swap && !1 === r?.hasApproveTx && e.simulationFails)
                      throw (a(e.id), new Error('Simulation failed'));
                    const l = r?.meta;
                    if (!l) return e;
                    let d = e;
                    return (
                      t === c.TransactionType.swapApproval &&
                        ((d = (function (e, { type: t, sourceTokenSymbol: n }) {
                          (0, o.validateIfTransactionUnapproved)(
                            e,
                            'updateSwapApprovalTransaction'
                          );
                          let r = { type: t, sourceTokenSymbol: n };
                          return (
                            (r = (0, s.pickBy)({ type: t, sourceTokenSymbol: n })),
                            (0, s.merge)({}, e, r)
                          );
                        })(e, l)),
                        u.publish('TransactionController:transactionNewSwapApproval', {
                          transactionMeta: d,
                        })),
                      t === c.TransactionType.swapAndSend &&
                        ((d = (function (
                          e,
                          {
                            approvalTxId: t,
                            destinationTokenAddress: n,
                            destinationTokenAmount: r,
                            destinationTokenDecimals: i,
                            destinationTokenSymbol: a,
                            estimatedBaseFee: c,
                            sourceTokenAddress: u,
                            sourceTokenAmount: l,
                            sourceTokenDecimals: d,
                            sourceTokenSymbol: f,
                            swapAndSendRecipient: h,
                            swapMetaData: p,
                            swapTokenValue: m,
                            type: g,
                          }
                        ) {
                          (0, o.validateIfTransactionUnapproved)(e, 'updateSwapTransaction');
                          let y = {
                            approvalTxId: t,
                            destinationTokenAddress: n,
                            destinationTokenAmount: r,
                            destinationTokenDecimals: i,
                            destinationTokenSymbol: a,
                            estimatedBaseFee: c,
                            sourceTokenAddress: u,
                            sourceTokenAmount: l,
                            sourceTokenDecimals: d,
                            sourceTokenSymbol: f,
                            swapAndSendRecipient: h,
                            swapMetaData: p,
                            swapTokenValue: m,
                            type: g,
                          };
                          return (y = (0, s.pickBy)(y)), (0, s.merge)({}, e, y);
                        })(e, l)),
                        u.publish('TransactionController:transactionNewSwapAndSend', {
                          transactionMeta: d,
                        })),
                      t === c.TransactionType.swap &&
                        ((d = (function (
                          e,
                          {
                            sourceTokenSymbol: t,
                            destinationTokenSymbol: n,
                            type: r,
                            destinationTokenDecimals: i,
                            destinationTokenAddress: a,
                            swapMetaData: c,
                            swapTokenValue: u,
                            estimatedBaseFee: l,
                            approvalTxId: d,
                          }
                        ) {
                          (0, o.validateIfTransactionUnapproved)(e, 'updateSwapTransaction');
                          let f = {
                            sourceTokenSymbol: t,
                            destinationTokenSymbol: n,
                            type: r,
                            destinationTokenDecimals: i,
                            destinationTokenAddress: a,
                            swapMetaData: c,
                            swapTokenValue: u,
                            estimatedBaseFee: l,
                            approvalTxId: d,
                          };
                          return (f = (0, s.pickBy)(f)), (0, s.merge)({}, e, f);
                        })(e, l)),
                        u.publish('TransactionController:transactionNewSwap', {
                          transactionMeta: d,
                        })),
                      d
                    );
                  }),
                  (n.updatePostTransactionBalance = async function (
                    e,
                    { ethQuery: t, getTransaction: s, updateTransaction: o }
                  ) {
                    u('Updating post transaction balance', e.id);
                    const i = e.id;
                    let a, c;
                    for (let o = 0; o < n.UPDATE_POST_TX_BALANCE_ATTEMPTS; o++) {
                      u('Querying balance', { attempt: o });
                      const l = await (0, r.query)(t, 'getBalance', [e.txParams.from]);
                      (a = { ...(s(i) ?? {}) }),
                        (c = a.approvalTxId ? s(a.approvalTxId) : undefined),
                        (a.postTxBalance = l.toString(16));
                      const d = w(e.destinationTokenAddress, e.chainId);
                      if (!d || e.preTxBalance !== a.postTxBalance) {
                        u('Finishing post balance update', {
                          isDefaultTokenAddress: d,
                          preTxBalance: e.preTxBalance,
                          postTxBalance: a.postTxBalance,
                        });
                        break;
                      }
                      u('Waiting for balance to update', {
                        delay: n.UPDATE_POST_TX_BALANCE_TIMEOUT,
                      }),
                        await v(n.UPDATE_POST_TX_BALANCE_TIMEOUT);
                    }
                    return (
                      o(
                        a,
                        'TransactionController#updatePostTransactionBalance - Add post transaction balance'
                      ),
                      u('Completed post balance update', a?.postTxBalance),
                      { updatedTransactionMeta: a, approvalTransactionMeta: c }
                    );
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/swaps.cjs',
      },
    ],
    [
      2965,
      {
        '../types.cjs': 2948,
        '@ethersproject/abi': 504,
        '@metamask/controller-utils': 1515,
        '@metamask/metamask-eth-abis': 2113,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.determineTransactionType = n.ESTIMATE_GAS_ERROR = void 0);
                const r = e('@ethersproject/abi'),
                  s = e('@metamask/controller-utils'),
                  o = e('@metamask/metamask-eth-abis'),
                  i = e('../types.cjs');
                n.ESTIMATE_GAS_ERROR = 'eth_estimateGas rpc method error';
                const a = new r.Interface(o.abiERC20),
                  c = new r.Interface(o.abiERC721),
                  u = new r.Interface(o.abiERC1155),
                  l = new r.Interface(o.abiFiatTokenV2);
                n.determineTransactionType = async function (e, t) {
                  const { data: n, to: r } = e;
                  if (n && !r)
                    return { type: i.TransactionType.deployContract, getCodeResponse: undefined };
                  const { contractCode: o, isContractAddress: d } = await (async function (e, t) {
                    let n;
                    try {
                      n = await (0, s.query)(e, 'getCode', [t]);
                    } catch (e) {
                      n = null;
                    }
                    const r = !!n && '0x' !== n && '0x0' !== n;
                    return { contractCode: n, isContractAddress: r };
                  })(t, r);
                  if (!d) return { type: i.TransactionType.simpleSend, getCodeResponse: o };
                  const f = 0 !== Number(e.value ?? '0'),
                    h = { type: i.TransactionType.contractInteraction, getCodeResponse: o };
                  if (!n || f) return h;
                  const p = (function (e) {
                    if (!e) return undefined;
                    try {
                      return a.parseTransaction({ data: e });
                    } catch {}
                    try {
                      return c.parseTransaction({ data: e });
                    } catch {}
                    try {
                      return u.parseTransaction({ data: e });
                    } catch {}
                    try {
                      return l.parseTransaction({ data: e });
                    } catch {}
                    return undefined;
                  })(n)?.name;
                  if (!p) return h;
                  const m = [
                    i.TransactionType.tokenMethodApprove,
                    i.TransactionType.tokenMethodSetApprovalForAll,
                    i.TransactionType.tokenMethodTransfer,
                    i.TransactionType.tokenMethodTransferFrom,
                    i.TransactionType.tokenMethodSafeTransferFrom,
                    i.TransactionType.tokenMethodIncreaseAllowance,
                  ].find(e => e.toLowerCase() === p.toLowerCase());
                  return m ? { type: m, getCodeResponse: o } : h;
                };
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/transaction-type.cjs',
      },
    ],
    [
      2966,
      { '../types.cjs': 2948, '@metamask/utils': 2995, 'bn.js': 4078 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.setEnvelopeType =
                    n.getPercentageChange =
                    n.padHexToEvenLength =
                    n.normalizeGasFeeValues =
                    n.normalizeTxError =
                    n.validateIfTransactionUnapproved =
                    n.validateGasValues =
                    n.isEIP1559Transaction =
                    n.normalizeTransactionParams =
                    n.ESTIMATE_GAS_ERROR =
                      void 0);
                const s = e('@metamask/utils'),
                  o = r(e('bn.js')),
                  i = e('../types.cjs');
                n.ESTIMATE_GAS_ERROR = 'eth_estimateGas rpc method error';
                const a = {
                  accessList: e => e,
                  authorizationList: e => e,
                  data: e => (0, s.add0x)(u(e)),
                  from: e => (0, s.add0x)(e).toLowerCase(),
                  gas: e => (0, s.add0x)(e),
                  gasLimit: e => (0, s.add0x)(e),
                  gasPrice: e => (0, s.add0x)(e),
                  nonce: e => (0, s.add0x)(e),
                  to: e => (0, s.add0x)(e).toLowerCase(),
                  value: e => (0, s.add0x)(e),
                  maxFeePerGas: e => (0, s.add0x)(e),
                  maxPriorityFeePerGas: e => (0, s.add0x)(e),
                  estimatedBaseFee: e => (0, s.add0x)(e),
                  type: e => (0, s.add0x)(e),
                };
                (n.normalizeTransactionParams = function (e) {
                  const t = { from: '' };
                  for (const n of (0, s.getKnownPropertyNames)(a)) e[n] && (t[n] = a[n](e[n]));
                  return (
                    t.value || (t.value = '0x0'), t.gasLimit && !t.gas && (t.gas = t.gasLimit), t
                  );
                }),
                  (n.isEIP1559Transaction = function (e) {
                    const t = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
                    return t(e, 'maxFeePerGas') && t(e, 'maxPriorityFeePerGas');
                  });
                function c(e) {
                  try {
                    return JSON.parse(JSON.stringify(e)), !0;
                  } catch {
                    return !1;
                  }
                }
                function u(e) {
                  const t = e.toLowerCase().startsWith('0x') ? e.slice(0, 2) : '',
                    n = t ? e.slice(2) : e;
                  return t + (n.length % 2 == 0 ? n : `0${n}`);
                }
                (n.validateGasValues = e => {
                  Object.keys(e).forEach(t => {
                    const n = e[t];
                    if ('string' != typeof n || !(0, s.isStrictHexString)(n))
                      throw new TypeError(`expected hex string for ${t} but received: ${n}`);
                  });
                }),
                  (n.validateIfTransactionUnapproved = function (e, t) {
                    if (e?.status !== i.TransactionStatus.unapproved)
                      throw new Error(
                        `TransactionsController: Can only call ${t} on an unapproved transaction.\n      Current tx status: ${e?.status}`
                      );
                  }),
                  (n.normalizeTxError = function (e) {
                    return {
                      name: e.name,
                      message: e.message,
                      stack: e.stack,
                      code: e.code,
                      rpc: c(e.value) ? e.value : undefined,
                    };
                  }),
                  (n.normalizeGasFeeValues = function (e) {
                    const t = e => ('string' == typeof e ? (0, s.add0x)(e) : e);
                    return 'gasPrice' in e
                      ? { gasPrice: t(e.gasPrice) }
                      : {
                          maxFeePerGas: t(e.maxFeePerGas),
                          maxPriorityFeePerGas: t(e.maxPriorityFeePerGas),
                        };
                  }),
                  (n.padHexToEvenLength = u),
                  (n.getPercentageChange = function (e, t) {
                    const n = new o.default(10).pow(new o.default(18)),
                      r = e.mul(n),
                      s = t.mul(n),
                      i = s.sub(r);
                    return i.isZero()
                      ? 0
                      : r.isZero() && !s.isZero()
                        ? 100
                        : i.muln(100).div(r).abs().toNumber();
                  }),
                  (n.setEnvelopeType = function (e, t) {
                    e.accessList
                      ? (e.type = i.TransactionEnvelopeType.accessList)
                      : e.authorizationList
                        ? (e.type = i.TransactionEnvelopeType.setCode)
                        : (e.type = t
                            ? i.TransactionEnvelopeType.feeMarket
                            : i.TransactionEnvelopeType.legacy);
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/utils.cjs',
      },
    ],
    [
      2967,
      {
        '../types.cjs': 2948,
        './utils.cjs': 2966,
        '@ethersproject/abi': 504,
        '@metamask/controller-utils': 1515,
        '@metamask/metamask-eth-abis': 2113,
        '@metamask/rpc-errors': 2585,
        '@metamask/utils': 2995,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.validateBatchRequest =
                    n.validateParamTo =
                    n.validateTxParams =
                    n.validateTransactionOrigin =
                    n.ErrorCode =
                      void 0);
                const r = e('@ethersproject/abi'),
                  s = e('@metamask/controller-utils'),
                  o = e('@metamask/metamask-eth-abis'),
                  i = e('@metamask/rpc-errors'),
                  a = e('@metamask/utils'),
                  c = e('./utils.cjs'),
                  u = e('../types.cjs');
                var l;
                !(function (e) {
                  (e[(e.DuplicateBundleId = 5720)] = 'DuplicateBundleId'),
                    (e[(e.BundleTooLarge = 5740)] = 'BundleTooLarge');
                })(l || (n.ErrorCode = l = {}));
                const d = [u.TransactionEnvelopeType.feeMarket, u.TransactionEnvelopeType.setCode];
                function f(e, t) {
                  const n = e.type;
                  switch (t) {
                    case 'authorizationList':
                      if (n && n !== u.TransactionEnvelopeType.setCode)
                        throw i.rpcErrors.invalidParams(
                          `Invalid transaction envelope type: specified type "${n}" but including authorizationList requires type: "${u.TransactionEnvelopeType.setCode}"`
                        );
                      break;
                    case 'maxFeePerGas':
                    case 'maxPriorityFeePerGas':
                      if (n && !d.includes(n))
                        throw i.rpcErrors.invalidParams(
                          `Invalid transaction envelope type: specified type "${n}" but including maxFeePerGas and maxPriorityFeePerGas requires type: "${d.join(', ')}"`
                        );
                      break;
                    default:
                      if (n && d.includes(n))
                        throw i.rpcErrors.invalidParams(
                          `Invalid transaction envelope type: specified type "${n}" but included a gasPrice instead of maxFeePerGas and maxPriorityFeePerGas`
                        );
                  }
                }
                function h(e, t, n) {
                  if (void 0 !== e[n])
                    throw i.rpcErrors.invalidParams(
                      `Invalid transaction params: specified ${t} but also included ${n}, these cannot be mixed`
                    );
                }
                function p(e, t) {
                  const n = e[t];
                  if ('string' != typeof n || !(0, a.isStrictHexString)(n))
                    throw i.rpcErrors.invalidParams(
                      `Invalid transaction params: ${String(t)} is not a valid hexadecimal string. got: (${String(n)})`
                    );
                }
                function m(e) {
                  p(e, 'address'),
                    (function (e, t, n) {
                      const r = (0, a.remove0x)(e).length / 2;
                      if (r !== t)
                        throw i.rpcErrors.invalidParams(
                          `Invalid transaction params: ${n} must be ${t} bytes. got: ${r} bytes`
                        );
                    })(e.address, 20, 'address');
                  for (const t of ['chainId', 'nonce', 'r', 's']) e[t] && p(e, t);
                  const { yParity: t } = e;
                  if (t && !['0x', '0x1'].includes(t))
                    throw i.rpcErrors.invalidParams(
                      `Invalid transaction params: yParity must be '0x' or '0x1'. got: ${t}`
                    );
                }
                (n.validateTransactionOrigin = async function ({
                  data: e,
                  from: t,
                  internalAccounts: n,
                  origin: r,
                  permittedAddresses: o,
                  selectedAddress: a,
                  txParams: c,
                  type: l,
                }) {
                  const d = r === s.ORIGIN_METAMASK,
                    f = r && r !== s.ORIGIN_METAMASK,
                    { authorizationList: h, to: p, type: m } = c;
                  if (d && t !== a)
                    throw i.rpcErrors.internal({
                      message: 'Internally initiated transaction is using invalid account.',
                      data: { origin: r, fromAddress: t, selectedAddress: a },
                    });
                  if (f && o && !o.includes(t))
                    throw i.providerErrors.unauthorized({ data: { origin: r } });
                  if (l === u.TransactionType.batch) return;
                  if (f && (h || m === u.TransactionEnvelopeType.setCode))
                    throw i.rpcErrors.invalidParams(
                      'External EIP-7702 transactions are not supported'
                    );
                  const g = Boolean(e && '0x' !== e);
                  if (f && g && n?.some(e => e.toLowerCase() === p?.toLowerCase()))
                    throw i.rpcErrors.invalidParams(
                      'External transactions to internal accounts cannot include data'
                    );
                }),
                  (n.validateTxParams = function (e, t = !0, n) {
                    !(function (e) {
                      if (e && !Object.values(u.TransactionEnvelopeType).includes(e))
                        throw i.rpcErrors.invalidParams(
                          `Invalid transaction envelope type: "${e}". Must be one of: ${Object.values(u.TransactionEnvelopeType).join(', ')}`
                        );
                    })(e.type),
                      (function (e, t) {
                        if ((0, c.isEIP1559Transaction)(e) && !t)
                          throw i.rpcErrors.invalidParams(
                            'Invalid transaction params: params specify an EIP-1559 transaction but the current network does not support EIP-1559'
                          );
                      })(e, t),
                      (function (e) {
                        if (!e || 'string' != typeof e)
                          throw i.rpcErrors.invalidParams(
                            `Invalid "from" address ${e}: not a string.`
                          );
                        if (!(0, s.isValidHexAddress)(e))
                          throw i.rpcErrors.invalidParams('Invalid "from" address.');
                      })(e.from),
                      (function (e) {
                        if ('0x' === e.to || e.to === undefined) {
                          if (!e.data) throw i.rpcErrors.invalidParams('Invalid "to" address.');
                          delete e.to;
                        } else if (e.to !== undefined && !(0, s.isValidHexAddress)(e.to))
                          throw i.rpcErrors.invalidParams('Invalid "to" address.');
                      })(e),
                      (function (e) {
                        if (e !== undefined) {
                          if (e.includes('-'))
                            throw i.rpcErrors.invalidParams(
                              `Invalid transaction value "${e}": not a positive number.`
                            );
                          if (e.includes('.'))
                            throw i.rpcErrors.invalidParams(
                              `Invalid transaction value "${e}": number must be in wei.`
                            );
                          const t = parseInt(e, 10);
                          if (
                            !(
                              Number.isFinite(t) &&
                              !Number.isNaN(t) &&
                              !isNaN(Number(e)) &&
                              Number.isSafeInteger(t)
                            )
                          )
                            throw i.rpcErrors.invalidParams(
                              `Invalid transaction value ${e}: number must be a valid number.`
                            );
                        }
                      })(e.value),
                      (function (e) {
                        if (e) {
                          const t = new r.Interface(o.abiERC20);
                          try {
                            t.parseTransaction({ data: e });
                          } catch (e) {
                            if (e.message.match(/BUFFER_OVERRUN/u))
                              throw i.rpcErrors.invalidParams(
                                'Invalid transaction params: data out-of-bounds, BUFFER_OVERRUN.'
                              );
                          }
                        }
                      })(e.data),
                      (function (e, t) {
                        if (e && t && e.toLowerCase?.() !== t.toLowerCase())
                          throw i.rpcErrors.invalidParams(
                            `Invalid transaction params: chainId must match the network client, got: ${e}, expected: ${t}`
                          );
                      })(e.chainId, n),
                      (function (e) {
                        e.gasPrice &&
                          (f(e, 'gasPrice'),
                          h(e, 'gasPrice', 'maxFeePerGas'),
                          h(e, 'gasPrice', 'maxPriorityFeePerGas'),
                          p(e, 'gasPrice'));
                        e.maxFeePerGas &&
                          (f(e, 'maxFeePerGas'),
                          h(e, 'maxFeePerGas', 'gasPrice'),
                          p(e, 'maxFeePerGas'));
                        e.maxPriorityFeePerGas &&
                          (f(e, 'maxPriorityFeePerGas'),
                          h(e, 'maxPriorityFeePerGas', 'gasPrice'),
                          p(e, 'maxPriorityFeePerGas'));
                        e.gasLimit && p(e, 'gasLimit');
                        e.gas && p(e, 'gas');
                      })(e),
                      (function (e) {
                        const { authorizationList: t } = e;
                        if (!t) return;
                        if ((f(e, 'authorizationList'), !Array.isArray(t)))
                          throw i.rpcErrors.invalidParams(
                            'Invalid transaction params: authorizationList must be an array'
                          );
                        for (const e of t) m(e);
                      })(e);
                  }),
                  (n.validateParamTo = function (e) {
                    if (!e || 'string' != typeof e)
                      throw i.rpcErrors.invalidParams('Invalid "to" address');
                  }),
                  (n.validateBatchRequest = function ({
                    internalAccounts: e,
                    request: t,
                    sizeLimit: n,
                  }) {
                    const { origin: r } = t,
                      o = r && r !== s.ORIGIN_METAMASK,
                      a = e.map(e => e.toLowerCase());
                    if (
                      o &&
                      t.transactions.some(e => {
                        const t = e.params.to?.toLowerCase(),
                          n = e.params.data,
                          r = a.includes(t),
                          s = Boolean(n && '0x' !== n);
                        return r && s;
                      })
                    )
                      throw i.rpcErrors.invalidParams(
                        'External calls to internal accounts cannot include data'
                      );
                    if (o && t.transactions.length > n)
                      throw new i.JsonRpcError(
                        l.BundleTooLarge,
                        `Batch size cannot exceed ${n}. got: ${t.transactions.length}`
                      );
                  });
              };
            };
      },
      {
        package: '@metamask/transaction-controller',
        file: 'node_modules/@metamask/transaction-controller/dist/utils/validation.cjs',
      },
    ],
    [
      2985,
      { './errors.cjs': 2993, '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.assertExhaustive = n.assertStruct = n.assert = n.AssertionError = void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./errors.cjs');
                function o(e, t) {
                  return (
                    (n = e),
                    Boolean('string' == typeof n?.prototype?.constructor?.name)
                      ? new e({ message: t })
                      : e({ message: t })
                  );
                  var n;
                }
                class i extends Error {
                  constructor(e) {
                    super(e.message), (this.code = 'ERR_ASSERTION');
                  }
                }
                (n.AssertionError = i),
                  (n.assert = function (e, t = 'Assertion failed.', n = i) {
                    if (!e) {
                      if (t instanceof Error) throw t;
                      throw o(n, t);
                    }
                  }),
                  (n.assertStruct = function (e, t, n = 'Assertion failed', a = i) {
                    try {
                      (0, r.assert)(e, t);
                    } catch (e) {
                      throw o(
                        a,
                        `${n}: ${(function (e) {
                          return (0, s.getErrorMessage)(e).replace(/\.$/u, '');
                        })(e)}.`
                      );
                    }
                  }),
                  (n.assertExhaustive = function (e) {
                    throw new Error(
                      'Invalid branch reached. Should be detected during compilation.'
                    );
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/assert.cjs' },
    ],
    [
      2986,
      { './assert.cjs': 2985, '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.base64 = void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./assert.cjs');
                n.base64 = (e, t = {}) => {
                  const n = t.paddingRequired ?? !1,
                    o = t.characterSet ?? 'base64';
                  let i, a;
                  return (
                    'base64' === o
                      ? (i = String.raw`[A-Za-z0-9+\/]`)
                      : ((0, s.assert)('base64url' === o), (i = String.raw`[-_A-Za-z0-9]`)),
                    (a = n
                      ? new RegExp(`^(?:${i}{4})*(?:${i}{3}=|${i}{2}==)?$`, 'u')
                      : new RegExp(`^(?:${i}{4})*(?:${i}{2,3}|${i}{3}=|${i}{2}==)?$`, 'u')),
                    (0, r.pattern)(e, a)
                  );
                };
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/base64.cjs' },
    ],
    [
      2987,
      { './assert.cjs': 2985, './hex.cjs': 2994, '@scure/base': 3078, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.createDataView =
                        n.concatBytes =
                        n.valueToBytes =
                        n.base64ToBytes =
                        n.stringToBytes =
                        n.numberToBytes =
                        n.signedBigIntToBytes =
                        n.bigIntToBytes =
                        n.hexToBytes =
                        n.bytesToBase64 =
                        n.bytesToString =
                        n.bytesToNumber =
                        n.bytesToSignedBigInt =
                        n.bytesToBigInt =
                        n.bytesToHex =
                        n.assertIsBytes =
                        n.isBytes =
                          void 0);
                    const r = e('@scure/base'),
                      s = e('./assert.cjs'),
                      o = e('./hex.cjs'),
                      i = 48,
                      a = 58,
                      c = 87;
                    const u = (function () {
                      const e = [];
                      return () => {
                        if (0 === e.length)
                          for (let t = 0; t < 256; t++) e.push(t.toString(16).padStart(2, '0'));
                        return e;
                      };
                    })();
                    function l(e) {
                      return e instanceof Uint8Array;
                    }
                    function d(e) {
                      (0, s.assert)(l(e), 'Value must be a Uint8Array.');
                    }
                    function f(e) {
                      if ((d(e), 0 === e.length)) return '0x';
                      const t = u(),
                        n = new Array(e.length);
                      for (let r = 0; r < e.length; r++) n[r] = t[e[r]];
                      return (0, o.add0x)(n.join(''));
                    }
                    function h(e) {
                      d(e);
                      const t = f(e);
                      return BigInt(t);
                    }
                    function p(e) {
                      if ('0x' === e?.toLowerCase?.()) return new Uint8Array();
                      (0, o.assertIsHexString)(e);
                      const t = (0, o.remove0x)(e).toLowerCase(),
                        n = t.length % 2 == 0 ? t : `0${t}`,
                        r = new Uint8Array(n.length / 2);
                      for (let e = 0; e < r.length; e++) {
                        const t = n.charCodeAt(2 * e),
                          s = n.charCodeAt(2 * e + 1),
                          o = t - (t < a ? i : c),
                          u = s - (s < a ? i : c);
                        r[e] = 16 * o + u;
                      }
                      return r;
                    }
                    function m(e) {
                      (0, s.assert)('bigint' == typeof e, 'Value must be a bigint.'),
                        (0, s.assert)(e >= BigInt(0), 'Value must be a non-negative bigint.');
                      return p(e.toString(16));
                    }
                    function g(e) {
                      (0, s.assert)('number' == typeof e, 'Value must be a number.'),
                        (0, s.assert)(e >= 0, 'Value must be a non-negative number.'),
                        (0, s.assert)(
                          Number.isSafeInteger(e),
                          'Value is not a safe integer. Use `bigIntToBytes` instead.'
                        );
                      return p(e.toString(16));
                    }
                    function y(e) {
                      return (
                        (0, s.assert)('string' == typeof e, 'Value must be a string.'),
                        new TextEncoder().encode(e)
                      );
                    }
                    function b(e) {
                      if ('bigint' == typeof e) return m(e);
                      if ('number' == typeof e) return g(e);
                      if ('string' == typeof e) return e.startsWith('0x') ? p(e) : y(e);
                      if (l(e)) return e;
                      throw new TypeError(`Unsupported value type: "${typeof e}".`);
                    }
                    (n.isBytes = l),
                      (n.assertIsBytes = d),
                      (n.bytesToHex = f),
                      (n.bytesToBigInt = h),
                      (n.bytesToSignedBigInt = function (e) {
                        d(e);
                        let t = BigInt(0);
                        for (const n of e) t = (t << BigInt(8)) + BigInt(n);
                        return BigInt.asIntN(8 * e.length, t);
                      }),
                      (n.bytesToNumber = function (e) {
                        d(e);
                        const t = h(e);
                        return (
                          (0, s.assert)(
                            t <= BigInt(Number.MAX_SAFE_INTEGER),
                            'Number is not a safe integer. Use `bytesToBigInt` instead.'
                          ),
                          Number(t)
                        );
                      }),
                      (n.bytesToString = function (e) {
                        return d(e), new TextDecoder().decode(e);
                      }),
                      (n.bytesToBase64 = function (e) {
                        return d(e), r.base64.encode(e);
                      }),
                      (n.hexToBytes = p),
                      (n.bigIntToBytes = m),
                      (n.signedBigIntToBytes = function (e, t) {
                        (0, s.assert)('bigint' == typeof e, 'Value must be a bigint.'),
                          (0, s.assert)('number' == typeof t, 'Byte length must be a number.'),
                          (0, s.assert)(t > 0, 'Byte length must be greater than 0.'),
                          (0, s.assert)(
                            (function (e, t) {
                              (0, s.assert)(t > 0);
                              const n = e >> BigInt(31);
                              return !(((~e & n) + (e & ~n)) >> BigInt(8 * t - 1));
                            })(e, t),
                            'Byte length is too small to represent the given value.'
                          );
                        let n = e;
                        const r = new Uint8Array(t);
                        for (let e = 0; e < r.length; e++)
                          (r[e] = Number(BigInt.asUintN(8, n))), (n >>= BigInt(8));
                        return r.reverse();
                      }),
                      (n.numberToBytes = g),
                      (n.stringToBytes = y),
                      (n.base64ToBytes = function (e) {
                        return (
                          (0, s.assert)('string' == typeof e, 'Value must be a string.'),
                          r.base64.decode(e)
                        );
                      }),
                      (n.valueToBytes = b),
                      (n.concatBytes = function (e) {
                        const t = new Array(e.length);
                        let n = 0;
                        for (let r = 0; r < e.length; r++) {
                          const s = b(e[r]);
                          (t[r] = s), (n += s.length);
                        }
                        const r = new Uint8Array(n);
                        for (let e = 0, n = 0; e < t.length; e++)
                          r.set(t[e], n), (n += t[e].length);
                        return r;
                      }),
                      (n.createDataView = function (e) {
                        if (void 0 !== t && e instanceof t) {
                          const t = e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
                          return new DataView(t);
                        }
                        return new DataView(e.buffer, e.byteOffset, e.byteLength);
                      });
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/bytes.cjs' },
    ],
    [
      2988,
      { './superstruct.cjs': 3003, '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.toCaipAssetId =
                    n.toCaipAssetType =
                    n.toCaipAccountId =
                    n.toCaipChainId =
                    n.parseCaipAssetId =
                    n.parseCaipAssetType =
                    n.parseCaipAccountId =
                    n.parseCaipChainId =
                    n.isCaipAssetId =
                    n.isCaipAssetType =
                    n.isCaipTokenId =
                    n.isCaipAssetReference =
                    n.isCaipAssetNamespace =
                    n.isCaipAccountAddress =
                    n.isCaipAccountId =
                    n.isCaipReference =
                    n.isCaipNamespace =
                    n.isCaipChainId =
                    n.KnownCaipNamespace =
                    n.CaipAssetTypeOrIdStruct =
                    n.CaipAssetIdStruct =
                    n.CaipAssetTypeStruct =
                    n.CaipTokenIdStruct =
                    n.CaipAssetReferenceStruct =
                    n.CaipAssetNamespaceStruct =
                    n.CaipAccountAddressStruct =
                    n.CaipAccountIdStruct =
                    n.CaipReferenceStruct =
                    n.CaipNamespaceStruct =
                    n.CaipChainIdStruct =
                    n.CAIP_ASSET_ID_REGEX =
                    n.CAIP_ASSET_TYPE_REGEX =
                    n.CAIP_TOKEN_ID_REGEX =
                    n.CAIP_ASSET_REFERENCE_REGEX =
                    n.CAIP_ASSET_NAMESPACE_REGEX =
                    n.CAIP_ACCOUNT_ADDRESS_REGEX =
                    n.CAIP_ACCOUNT_ID_REGEX =
                    n.CAIP_REFERENCE_REGEX =
                    n.CAIP_NAMESPACE_REGEX =
                    n.CAIP_CHAIN_ID_REGEX =
                      void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./superstruct.cjs');
                (n.CAIP_CHAIN_ID_REGEX =
                  /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u),
                  (n.CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u),
                  (n.CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u),
                  (n.CAIP_ACCOUNT_ID_REGEX =
                    /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u),
                  (n.CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u),
                  (n.CAIP_ASSET_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u),
                  (n.CAIP_ASSET_REFERENCE_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u),
                  (n.CAIP_TOKEN_ID_REGEX = /^[-.%a-zA-Z0-9]{1,78}$/u),
                  (n.CAIP_ASSET_TYPE_REGEX =
                    /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u),
                  (n.CAIP_ASSET_ID_REGEX =
                    /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u);
                function o(e) {
                  return (0, r.is)(e, n.CaipNamespaceStruct);
                }
                function i(e) {
                  return (0, r.is)(e, n.CaipReferenceStruct);
                }
                function a(e) {
                  return (0, r.is)(e, n.CaipAccountAddressStruct);
                }
                function c(e) {
                  return (0, r.is)(e, n.CaipAssetNamespaceStruct);
                }
                function u(e) {
                  return (0, r.is)(e, n.CaipAssetReferenceStruct);
                }
                function l(e) {
                  return (0, r.is)(e, n.CaipTokenIdStruct);
                }
                (n.CaipChainIdStruct = (0, s.definePattern)('CaipChainId', n.CAIP_CHAIN_ID_REGEX)),
                  (n.CaipNamespaceStruct = (0, s.definePattern)(
                    'CaipNamespace',
                    n.CAIP_NAMESPACE_REGEX
                  )),
                  (n.CaipReferenceStruct = (0, s.definePattern)(
                    'CaipReference',
                    n.CAIP_REFERENCE_REGEX
                  )),
                  (n.CaipAccountIdStruct = (0, s.definePattern)(
                    'CaipAccountId',
                    n.CAIP_ACCOUNT_ID_REGEX
                  )),
                  (n.CaipAccountAddressStruct = (0, s.definePattern)(
                    'CaipAccountAddress',
                    n.CAIP_ACCOUNT_ADDRESS_REGEX
                  )),
                  (n.CaipAssetNamespaceStruct = (0, s.definePattern)(
                    'CaipAssetNamespace',
                    n.CAIP_ASSET_NAMESPACE_REGEX
                  )),
                  (n.CaipAssetReferenceStruct = (0, s.definePattern)(
                    'CaipAssetReference',
                    n.CAIP_ASSET_REFERENCE_REGEX
                  )),
                  (n.CaipTokenIdStruct = (0, s.definePattern)(
                    'CaipTokenId',
                    n.CAIP_TOKEN_ID_REGEX
                  )),
                  (n.CaipAssetTypeStruct = (0, s.definePattern)(
                    'CaipAssetType',
                    n.CAIP_ASSET_TYPE_REGEX
                  )),
                  (n.CaipAssetIdStruct = (0, s.definePattern)(
                    'CaipAssetId',
                    n.CAIP_ASSET_ID_REGEX
                  )),
                  (n.CaipAssetTypeOrIdStruct = (0, s.definePattern)(
                    'CaipAssetTypeOrId',
                    /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})(\/(?<tokenId>[-.%a-zA-Z0-9]{1,78}))?$/u
                  )),
                  (function (e) {
                    (e.Bip122 = 'bip122'),
                      (e.Solana = 'solana'),
                      (e.Eip155 = 'eip155'),
                      (e.Wallet = 'wallet');
                  })(n.KnownCaipNamespace || (n.KnownCaipNamespace = {})),
                  (n.isCaipChainId = function (e) {
                    return (0, r.is)(e, n.CaipChainIdStruct);
                  }),
                  (n.isCaipNamespace = o),
                  (n.isCaipReference = i),
                  (n.isCaipAccountId = function (e) {
                    return (0, r.is)(e, n.CaipAccountIdStruct);
                  }),
                  (n.isCaipAccountAddress = a),
                  (n.isCaipAssetNamespace = c),
                  (n.isCaipAssetReference = u),
                  (n.isCaipTokenId = l),
                  (n.isCaipAssetType = function (e) {
                    return (0, r.is)(e, n.CaipAssetTypeStruct);
                  }),
                  (n.isCaipAssetId = function (e) {
                    return (0, r.is)(e, n.CaipAssetIdStruct);
                  }),
                  (n.parseCaipChainId = function (e) {
                    const t = n.CAIP_CHAIN_ID_REGEX.exec(e);
                    if (!t?.groups) throw new Error('Invalid CAIP chain ID.');
                    return { namespace: t.groups.namespace, reference: t.groups.reference };
                  }),
                  (n.parseCaipAccountId = function (e) {
                    const t = n.CAIP_ACCOUNT_ID_REGEX.exec(e);
                    if (!t?.groups) throw new Error('Invalid CAIP account ID.');
                    return {
                      address: t.groups.accountAddress,
                      chainId: t.groups.chainId,
                      chain: { namespace: t.groups.namespace, reference: t.groups.reference },
                    };
                  }),
                  (n.parseCaipAssetType = function (e) {
                    const t = n.CAIP_ASSET_TYPE_REGEX.exec(e);
                    if (!t?.groups) throw new Error('Invalid CAIP asset type.');
                    return {
                      assetNamespace: t.groups.assetNamespace,
                      assetReference: t.groups.assetReference,
                      chainId: t.groups.chainId,
                      chain: { namespace: t.groups.namespace, reference: t.groups.reference },
                    };
                  }),
                  (n.parseCaipAssetId = function (e) {
                    const t = n.CAIP_ASSET_ID_REGEX.exec(e);
                    if (!t?.groups) throw new Error('Invalid CAIP asset ID.');
                    return {
                      assetNamespace: t.groups.assetNamespace,
                      assetReference: t.groups.assetReference,
                      tokenId: t.groups.tokenId,
                      chainId: t.groups.chainId,
                      chain: { namespace: t.groups.namespace, reference: t.groups.reference },
                    };
                  }),
                  (n.toCaipChainId = function (e, t) {
                    if (!o(e))
                      throw new Error(
                        `Invalid "namespace", must match: ${n.CAIP_NAMESPACE_REGEX.toString()}`
                      );
                    if (!i(t))
                      throw new Error(
                        `Invalid "reference", must match: ${n.CAIP_REFERENCE_REGEX.toString()}`
                      );
                    return `${e}:${t}`;
                  }),
                  (n.toCaipAccountId = function (e, t, r) {
                    if (!o(e))
                      throw new Error(
                        `Invalid "namespace", must match: ${n.CAIP_NAMESPACE_REGEX.toString()}`
                      );
                    if (!i(t))
                      throw new Error(
                        `Invalid "reference", must match: ${n.CAIP_REFERENCE_REGEX.toString()}`
                      );
                    if (!a(r))
                      throw new Error(
                        `Invalid "accountAddress", must match: ${n.CAIP_ACCOUNT_ADDRESS_REGEX.toString()}`
                      );
                    return `${e}:${t}:${r}`;
                  }),
                  (n.toCaipAssetType = function (e, t, r, s) {
                    if (!o(e))
                      throw new Error(
                        `Invalid "namespace", must match: ${n.CAIP_NAMESPACE_REGEX.toString()}`
                      );
                    if (!i(t))
                      throw new Error(
                        `Invalid "reference", must match: ${n.CAIP_REFERENCE_REGEX.toString()}`
                      );
                    if (!c(r))
                      throw new Error(
                        `Invalid "assetNamespace", must match: ${n.CAIP_ASSET_NAMESPACE_REGEX.toString()}`
                      );
                    if (!u(s))
                      throw new Error(
                        `Invalid "assetReference", must match: ${n.CAIP_ASSET_REFERENCE_REGEX.toString()}`
                      );
                    return `${e}:${t}/${r}:${s}`;
                  }),
                  (n.toCaipAssetId = function (e, t, r, s, a) {
                    if (!o(e))
                      throw new Error(
                        `Invalid "namespace", must match: ${n.CAIP_NAMESPACE_REGEX.toString()}`
                      );
                    if (!i(t))
                      throw new Error(
                        `Invalid "reference", must match: ${n.CAIP_REFERENCE_REGEX.toString()}`
                      );
                    if (!c(r))
                      throw new Error(
                        `Invalid "assetNamespace", must match: ${n.CAIP_ASSET_NAMESPACE_REGEX.toString()}`
                      );
                    if (!u(s))
                      throw new Error(
                        `Invalid "assetReference", must match: ${n.CAIP_ASSET_REFERENCE_REGEX.toString()}`
                      );
                    if (!l(a))
                      throw new Error(
                        `Invalid "tokenId", must match: ${n.CAIP_TOKEN_ID_REGEX.toString()}`
                      );
                    return `${e}:${t}/${r}:${s}/${a}`;
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/caip-types.cjs' },
    ],
    [
      2989,
      { './base64.cjs': 2986, '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.ChecksumStruct = void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./base64.cjs');
                n.ChecksumStruct = (0, r.size)(
                  (0, s.base64)((0, r.string)(), { paddingRequired: !0 }),
                  44,
                  44
                );
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/checksum.cjs' },
    ],
    [
      2990,
      {
        './assert.cjs': 2985,
        './bytes.cjs': 2987,
        './hex.cjs': 2994,
        '@metamask/superstruct': 2913,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.createHex = n.createBytes = n.createBigInt = n.createNumber = void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./assert.cjs'),
                  o = e('./bytes.cjs'),
                  i = e('./hex.cjs'),
                  a = (0, r.union)([
                    (0, r.number)(),
                    (0, r.bigint)(),
                    (0, r.string)(),
                    i.StrictHexStruct,
                  ]),
                  c = (0, r.coerce)((0, r.number)(), a, Number),
                  u = (0, r.coerce)((0, r.bigint)(), a, BigInt),
                  l =
                    ((0, r.union)([i.StrictHexStruct, (0, r.instance)(Uint8Array)]),
                    (0, r.coerce)(
                      (0, r.instance)(Uint8Array),
                      (0, r.union)([i.StrictHexStruct]),
                      o.hexToBytes
                    )),
                  d = (0, r.coerce)(i.StrictHexStruct, (0, r.instance)(Uint8Array), o.bytesToHex);
                (n.createNumber = function (e) {
                  try {
                    const t = (0, r.create)(e, c);
                    return (
                      (0, s.assert)(
                        Number.isFinite(t),
                        `Expected a number-like value, got "${e}".`
                      ),
                      t
                    );
                  } catch (t) {
                    if (t instanceof r.StructError)
                      throw new Error(`Expected a number-like value, got "${e}".`);
                    throw t;
                  }
                }),
                  (n.createBigInt = function (e) {
                    try {
                      return (0, r.create)(e, u);
                    } catch (e) {
                      if (e instanceof r.StructError)
                        throw new Error(`Expected a number-like value, got "${String(e.value)}".`);
                      throw e;
                    }
                  }),
                  (n.createBytes = function (e) {
                    if ('string' == typeof e && '0x' === e.toLowerCase()) return new Uint8Array();
                    try {
                      return (0, r.create)(e, l);
                    } catch (e) {
                      if (e instanceof r.StructError)
                        throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);
                      throw e;
                    }
                  }),
                  (n.createHex = function (e) {
                    if (
                      (e instanceof Uint8Array && 0 === e.length) ||
                      ('string' == typeof e && '0x' === e.toLowerCase())
                    )
                      return '0x';
                    try {
                      return (0, r.create)(e, d);
                    } catch (e) {
                      if (e instanceof r.StructError)
                        throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);
                      throw e;
                    }
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/coercers.cjs' },
    ],
    [
      2991,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r,
                  s,
                  o =
                    (this && this.__classPrivateFieldGet) ||
                    function (e, t, n, r) {
                      if ('a' === n && !r)
                        throw new TypeError('Private accessor was defined without a getter');
                      if ('function' == typeof t ? e !== t || !r : !t.has(e))
                        throw new TypeError(
                          'Cannot read private member from an object whose class did not declare it'
                        );
                      return 'm' === n ? r : 'a' === n ? r.call(e) : r ? r.value : t.get(e);
                    },
                  i =
                    (this && this.__classPrivateFieldSet) ||
                    function (e, t, n, r, s) {
                      if ('m' === r) throw new TypeError('Private method is not writable');
                      if ('a' === r && !s)
                        throw new TypeError('Private accessor was defined without a setter');
                      if ('function' == typeof t ? e !== t || !s : !t.has(e))
                        throw new TypeError(
                          'Cannot write private member to an object whose class did not declare it'
                        );
                      return 'a' === r ? s.call(e, n) : s ? (s.value = n) : t.set(e, n), n;
                    };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.FrozenSet = n.FrozenMap = void 0);
                class a {
                  get size() {
                    return o(this, r, 'f').size;
                  }
                  [((r = new WeakMap()), Symbol.iterator)]() {
                    return o(this, r, 'f')[Symbol.iterator]();
                  }
                  constructor(e) {
                    r.set(this, void 0), i(this, r, new Map(e), 'f'), Object.freeze(this);
                  }
                  entries() {
                    return o(this, r, 'f').entries();
                  }
                  forEach(e, t) {
                    return o(this, r, 'f').forEach((n, r, s) => e.call(t, n, r, this));
                  }
                  get(e) {
                    return o(this, r, 'f').get(e);
                  }
                  has(e) {
                    return o(this, r, 'f').has(e);
                  }
                  keys() {
                    return o(this, r, 'f').keys();
                  }
                  values() {
                    return o(this, r, 'f').values();
                  }
                  toString() {
                    return `FrozenMap(${this.size}) {${this.size > 0 ? ` ${[...this.entries()].map(([e, t]) => `${String(e)} => ${String(t)}`).join(', ')} ` : ''}}`;
                  }
                }
                n.FrozenMap = a;
                class c {
                  get size() {
                    return o(this, s, 'f').size;
                  }
                  [((s = new WeakMap()), Symbol.iterator)]() {
                    return o(this, s, 'f')[Symbol.iterator]();
                  }
                  constructor(e) {
                    s.set(this, void 0), i(this, s, new Set(e), 'f'), Object.freeze(this);
                  }
                  entries() {
                    return o(this, s, 'f').entries();
                  }
                  forEach(e, t) {
                    return o(this, s, 'f').forEach((n, r, s) => e.call(t, n, r, this));
                  }
                  has(e) {
                    return o(this, s, 'f').has(e);
                  }
                  keys() {
                    return o(this, s, 'f').keys();
                  }
                  values() {
                    return o(this, s, 'f').values();
                  }
                  toString() {
                    return `FrozenSet(${this.size}) {${this.size > 0 ? ` ${[...this.values()].map(e => String(e)).join(', ')} ` : ''}}`;
                  }
                }
                (n.FrozenSet = c),
                  Object.freeze(a),
                  Object.freeze(a.prototype),
                  Object.freeze(c),
                  Object.freeze(c.prototype);
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/collections.cjs' },
    ],
    [
      2992,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
              };
            };
      },
      {
        package: '@metamask/utils',
        file: 'node_modules/@metamask/utils/dist/encryption-types.cjs',
      },
    ],
    [
      2993,
      { './misc.cjs': 2999, 'pony-cause': 5071 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.wrapError =
                    n.getErrorMessage =
                    n.isErrorWithStack =
                    n.isErrorWithMessage =
                    n.isErrorWithCode =
                      void 0);
                const r = e('pony-cause'),
                  s = e('./misc.cjs');
                function o(e) {
                  return 'object' == typeof e && null !== e && 'code' in e;
                }
                function i(e) {
                  return 'object' == typeof e && null !== e && 'message' in e;
                }
                (n.isErrorWithCode = o),
                  (n.isErrorWithMessage = i),
                  (n.isErrorWithStack = function (e) {
                    return 'object' == typeof e && null !== e && 'stack' in e;
                  }),
                  (n.getErrorMessage = function (e) {
                    return i(e) && 'string' == typeof e.message
                      ? e.message
                      : (0, s.isNullOrUndefined)(e)
                        ? ''
                        : String(e);
                  }),
                  (n.wrapError = function (e, t) {
                    if (
                      (n = e) instanceof Error ||
                      ((0, s.isObject)(n) && 'Error' === n.constructor.name)
                    ) {
                      let n;
                      return (
                        (n =
                          2 === Error.length
                            ? new Error(t, { cause: e })
                            : new r.ErrorWithCause(t, { cause: e })),
                        o(e) && (n.code = e.code),
                        n
                      );
                    }
                    var n;
                    return t.length > 0 ? new Error(`${String(e)}: ${t}`) : new Error(String(e));
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/errors.cjs' },
    ],
    [
      2994,
      {
        './assert.cjs': 2985,
        './bytes.cjs': 2987,
        '@metamask/superstruct': 2913,
        '@noble/hashes/sha3': 3055,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.remove0x =
                    n.add0x =
                    n.isValidChecksumAddress =
                    n.getChecksumAddress =
                    n.isValidHexAddress =
                    n.assertIsStrictHexString =
                    n.assertIsHexString =
                    n.isStrictHexString =
                    n.isHexString =
                    n.HexChecksumAddressStruct =
                    n.HexAddressStruct =
                    n.StrictHexStruct =
                    n.HexStruct =
                      void 0);
                const r = e('@metamask/superstruct'),
                  s = e('@noble/hashes/sha3'),
                  o = e('./assert.cjs'),
                  i = e('./bytes.cjs');
                function a(e) {
                  return (0, r.is)(e, n.HexStruct);
                }
                function c(e) {
                  return (0, r.is)(e, n.StrictHexStruct);
                }
                function u(e) {
                  (0, o.assert)((0, r.is)(e, n.HexChecksumAddressStruct), 'Invalid hex address.');
                  const t = d(e.toLowerCase()),
                    a = d((0, i.bytesToHex)((0, s.keccak_256)(t)));
                  return `0x${t
                    .split('')
                    .map((e, t) => {
                      const n = a[t];
                      return (
                        (0, o.assert)((0, r.is)(n, (0, r.string)()), 'Hash shorter than address.'),
                        parseInt(n, 16) > 7 ? e.toUpperCase() : e
                      );
                    })
                    .join('')}`;
                }
                function l(e) {
                  return !!(0, r.is)(e, n.HexChecksumAddressStruct) && u(e) === e;
                }
                function d(e) {
                  return e.startsWith('0x') || e.startsWith('0X') ? e.substring(2) : e;
                }
                (n.HexStruct = (0, r.pattern)((0, r.string)(), /^(?:0x)?[0-9a-f]+$/iu)),
                  (n.StrictHexStruct = (0, r.pattern)((0, r.string)(), /^0x[0-9a-f]+$/iu)),
                  (n.HexAddressStruct = (0, r.pattern)((0, r.string)(), /^0x[0-9a-f]{40}$/u)),
                  (n.HexChecksumAddressStruct = (0, r.pattern)(
                    (0, r.string)(),
                    /^0x[0-9a-fA-F]{40}$/u
                  )),
                  (n.isHexString = a),
                  (n.isStrictHexString = c),
                  (n.assertIsHexString = function (e) {
                    (0, o.assert)(a(e), 'Value must be a hexadecimal string.');
                  }),
                  (n.assertIsStrictHexString = function (e) {
                    (0, o.assert)(c(e), 'Value must be a hexadecimal string, starting with "0x".');
                  }),
                  (n.isValidHexAddress = function (e) {
                    return (0, r.is)(e, n.HexAddressStruct) || l(e);
                  }),
                  (n.getChecksumAddress = u),
                  (n.isValidChecksumAddress = l),
                  (n.add0x = function (e) {
                    return e.startsWith('0x')
                      ? e
                      : e.startsWith('0X')
                        ? `0x${e.substring(2)}`
                        : `0x${e}`;
                  }),
                  (n.remove0x = d);
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/hex.cjs' },
    ],
    [
      2995,
      {
        './assert.cjs': 2985,
        './base64.cjs': 2986,
        './bytes.cjs': 2987,
        './caip-types.cjs': 2988,
        './checksum.cjs': 2989,
        './coercers.cjs': 2990,
        './collections.cjs': 2991,
        './encryption-types.cjs': 2992,
        './errors.cjs': 2993,
        './hex.cjs': 2994,
        './json.cjs': 2996,
        './keyring.cjs': 2997,
        './logging.cjs': 2998,
        './misc.cjs': 2999,
        './number.cjs': 3e3,
        './opaque.cjs': 3001,
        './promise.cjs': 3002,
        './superstruct.cjs': 3003,
        './time.cjs': 3004,
        './transaction-types.cjs': 3005,
        './versions.cjs': 3006,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                    (this && this.__createBinding) ||
                    (Object.create
                      ? function (e, t, n, r) {
                          r === undefined && (r = n);
                          var s = Object.getOwnPropertyDescriptor(t, n);
                          (s && !('get' in s ? !t.__esModule : s.writable || s.configurable)) ||
                            (s = {
                              enumerable: !0,
                              get: function () {
                                return t[n];
                              },
                            }),
                            Object.defineProperty(e, r, s);
                        }
                      : function (e, t, n, r) {
                          r === undefined && (r = n), (e[r] = t[n]);
                        }),
                  s =
                    (this && this.__exportStar) ||
                    function (e, t) {
                      for (var n in e)
                        'default' === n || Object.prototype.hasOwnProperty.call(t, n) || r(t, e, n);
                    };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  s(e('./assert.cjs'), n),
                  s(e('./base64.cjs'), n),
                  s(e('./bytes.cjs'), n),
                  s(e('./caip-types.cjs'), n),
                  s(e('./checksum.cjs'), n),
                  s(e('./coercers.cjs'), n),
                  s(e('./collections.cjs'), n),
                  s(e('./encryption-types.cjs'), n),
                  s(e('./errors.cjs'), n),
                  s(e('./hex.cjs'), n),
                  s(e('./json.cjs'), n),
                  s(e('./keyring.cjs'), n),
                  s(e('./logging.cjs'), n),
                  s(e('./misc.cjs'), n),
                  s(e('./number.cjs'), n),
                  s(e('./opaque.cjs'), n),
                  s(e('./promise.cjs'), n),
                  s(e('./superstruct.cjs'), n),
                  s(e('./time.cjs'), n),
                  s(e('./transaction-types.cjs'), n),
                  s(e('./versions.cjs'), n);
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/index.cjs' },
    ],
    [
      2996,
      { './assert.cjs': 2985, './misc.cjs': 2999, '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getJsonRpcIdValidator =
                    n.assertIsJsonRpcError =
                    n.isJsonRpcError =
                    n.assertIsJsonRpcFailure =
                    n.isJsonRpcFailure =
                    n.assertIsJsonRpcSuccess =
                    n.isJsonRpcSuccess =
                    n.assertIsJsonRpcResponse =
                    n.isJsonRpcResponse =
                    n.assertIsPendingJsonRpcResponse =
                    n.isPendingJsonRpcResponse =
                    n.JsonRpcResponseStruct =
                    n.JsonRpcFailureStruct =
                    n.JsonRpcSuccessStruct =
                    n.PendingJsonRpcResponseStruct =
                    n.assertIsJsonRpcRequest =
                    n.isJsonRpcRequest =
                    n.assertIsJsonRpcNotification =
                    n.isJsonRpcNotification =
                    n.JsonRpcNotificationStruct =
                    n.JsonRpcRequestStruct =
                    n.JsonRpcParamsStruct =
                    n.JsonRpcErrorStruct =
                    n.JsonRpcIdStruct =
                    n.JsonRpcVersionStruct =
                    n.jsonrpc2 =
                    n.getJsonSize =
                    n.getSafeJson =
                    n.isValidJson =
                    n.JsonStruct =
                    n.UnsafeJsonStruct =
                    n.exactOptional =
                    n.object =
                      void 0);
                const r = e('@metamask/superstruct'),
                  s = e('./assert.cjs'),
                  o = e('./misc.cjs');
                function i({ path: e, branch: t }) {
                  const n = e[e.length - 1];
                  return (0, o.hasProperty)(t[t.length - 2], n);
                }
                function a(e) {
                  return new r.Struct({
                    ...e,
                    type: `optional ${e.type}`,
                    validator: (t, n) => !i(n) || e.validator(t, n),
                    refiner: (t, n) => !i(n) || e.refiner(t, n),
                  });
                }
                function c(e) {
                  if (null === e || 'boolean' == typeof e || 'string' == typeof e) return !0;
                  if ('number' == typeof e && Number.isFinite(e)) return !0;
                  if ('object' == typeof e) {
                    let t = !0;
                    if (Array.isArray(e)) {
                      for (let n = 0; n < e.length; n++)
                        if (!c(e[n])) {
                          t = !1;
                          break;
                        }
                      return t;
                    }
                    const n = Object.entries(e);
                    for (let e = 0; e < n.length; e++)
                      if ('string' != typeof n[e][0] || !c(n[e][1])) {
                        t = !1;
                        break;
                      }
                    return t;
                  }
                  return !1;
                }
                function u(e) {
                  return (0, r.create)(e, n.JsonStruct);
                }
                (n.object = e => (0, r.object)(e)),
                  (n.exactOptional = a),
                  (n.UnsafeJsonStruct = (0, r.define)('JSON', e => c(e))),
                  (n.JsonStruct = (0, r.coerce)(
                    n.UnsafeJsonStruct,
                    (0, r.refine)((0, r.any)(), 'JSON', e => (0, r.is)(e, n.UnsafeJsonStruct)),
                    e =>
                      JSON.parse(
                        JSON.stringify(e, (e, t) =>
                          '__proto__' === e || 'constructor' === e ? undefined : t
                        )
                      )
                  )),
                  (n.isValidJson = function (e) {
                    try {
                      return u(e), !0;
                    } catch {
                      return !1;
                    }
                  }),
                  (n.getSafeJson = u),
                  (n.getJsonSize = function (e) {
                    (0, s.assertStruct)(e, n.JsonStruct, 'Invalid JSON value');
                    const t = JSON.stringify(e);
                    return new TextEncoder().encode(t).byteLength;
                  }),
                  (n.jsonrpc2 = '2.0'),
                  (n.JsonRpcVersionStruct = (0, r.literal)(n.jsonrpc2)),
                  (n.JsonRpcIdStruct = (0, r.nullable)(
                    (0, r.union)([(0, r.number)(), (0, r.string)()])
                  )),
                  (n.JsonRpcErrorStruct = (0, n.object)({
                    code: (0, r.integer)(),
                    message: (0, r.string)(),
                    data: a(n.JsonStruct),
                    stack: a((0, r.string)()),
                  })),
                  (n.JsonRpcParamsStruct = (0, r.union)([
                    (0, r.record)((0, r.string)(), n.JsonStruct),
                    (0, r.array)(n.JsonStruct),
                  ])),
                  (n.JsonRpcRequestStruct = (0, n.object)({
                    id: n.JsonRpcIdStruct,
                    jsonrpc: n.JsonRpcVersionStruct,
                    method: (0, r.string)(),
                    params: a(n.JsonRpcParamsStruct),
                  })),
                  (n.JsonRpcNotificationStruct = (0, n.object)({
                    jsonrpc: n.JsonRpcVersionStruct,
                    method: (0, r.string)(),
                    params: a(n.JsonRpcParamsStruct),
                  })),
                  (n.isJsonRpcNotification = function (e) {
                    return (0, r.is)(e, n.JsonRpcNotificationStruct);
                  }),
                  (n.assertIsJsonRpcNotification = function (e, t) {
                    (0, s.assertStruct)(
                      e,
                      n.JsonRpcNotificationStruct,
                      'Invalid JSON-RPC notification',
                      t
                    );
                  }),
                  (n.isJsonRpcRequest = function (e) {
                    return (0, r.is)(e, n.JsonRpcRequestStruct);
                  }),
                  (n.assertIsJsonRpcRequest = function (e, t) {
                    (0, s.assertStruct)(e, n.JsonRpcRequestStruct, 'Invalid JSON-RPC request', t);
                  }),
                  (n.PendingJsonRpcResponseStruct = (0, r.object)({
                    id: n.JsonRpcIdStruct,
                    jsonrpc: n.JsonRpcVersionStruct,
                    result: (0, r.optional)((0, r.unknown)()),
                    error: (0, r.optional)(n.JsonRpcErrorStruct),
                  })),
                  (n.JsonRpcSuccessStruct = (0, n.object)({
                    id: n.JsonRpcIdStruct,
                    jsonrpc: n.JsonRpcVersionStruct,
                    result: n.JsonStruct,
                  })),
                  (n.JsonRpcFailureStruct = (0, n.object)({
                    id: n.JsonRpcIdStruct,
                    jsonrpc: n.JsonRpcVersionStruct,
                    error: n.JsonRpcErrorStruct,
                  })),
                  (n.JsonRpcResponseStruct = (0, r.union)([
                    n.JsonRpcSuccessStruct,
                    n.JsonRpcFailureStruct,
                  ])),
                  (n.isPendingJsonRpcResponse = function (e) {
                    return (0, r.is)(e, n.PendingJsonRpcResponseStruct);
                  }),
                  (n.assertIsPendingJsonRpcResponse = function (e, t) {
                    (0, s.assertStruct)(
                      e,
                      n.PendingJsonRpcResponseStruct,
                      'Invalid pending JSON-RPC response',
                      t
                    );
                  }),
                  (n.isJsonRpcResponse = function (e) {
                    return (0, r.is)(e, n.JsonRpcResponseStruct);
                  }),
                  (n.assertIsJsonRpcResponse = function (e, t) {
                    (0, s.assertStruct)(e, n.JsonRpcResponseStruct, 'Invalid JSON-RPC response', t);
                  }),
                  (n.isJsonRpcSuccess = function (e) {
                    return (0, r.is)(e, n.JsonRpcSuccessStruct);
                  }),
                  (n.assertIsJsonRpcSuccess = function (e, t) {
                    (0, s.assertStruct)(
                      e,
                      n.JsonRpcSuccessStruct,
                      'Invalid JSON-RPC success response',
                      t
                    );
                  }),
                  (n.isJsonRpcFailure = function (e) {
                    return (0, r.is)(e, n.JsonRpcFailureStruct);
                  }),
                  (n.assertIsJsonRpcFailure = function (e, t) {
                    (0, s.assertStruct)(
                      e,
                      n.JsonRpcFailureStruct,
                      'Invalid JSON-RPC failure response',
                      t
                    );
                  }),
                  (n.isJsonRpcError = function (e) {
                    return (0, r.is)(e, n.JsonRpcErrorStruct);
                  }),
                  (n.assertIsJsonRpcError = function (e, t) {
                    (0, s.assertStruct)(e, n.JsonRpcErrorStruct, 'Invalid JSON-RPC error', t);
                  }),
                  (n.getJsonRpcIdValidator = function (e) {
                    const {
                      permitEmptyString: t,
                      permitFractions: n,
                      permitNull: r,
                    } = { permitEmptyString: !0, permitFractions: !1, permitNull: !0, ...e };
                    return e =>
                      Boolean(
                        ('number' == typeof e && (n || Number.isInteger(e))) ||
                          ('string' == typeof e && (t || e.length > 0)) ||
                          (r && null === e)
                      );
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/json.cjs' },
    ],
    [
      2997,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/keyring.cjs' },
    ],
    [
      2998,
      { debug: 4292 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.createModuleLogger = n.createProjectLogger = void 0);
                const s = (0, r(e('debug')).default)('metamask');
                (n.createProjectLogger = function (e) {
                  return s.extend(e);
                }),
                  (n.createModuleLogger = function (e, t) {
                    return e.extend(t);
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/logging.cjs' },
    ],
    [
      2999,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.calculateNumberSize =
                    n.calculateStringSize =
                    n.isASCII =
                    n.isPlainObject =
                    n.ESCAPE_CHARACTERS_REGEXP =
                    n.JsonSize =
                    n.getKnownPropertyNames =
                    n.hasProperty =
                    n.isObject =
                    n.isNullOrUndefined =
                    n.isNonEmptyArray =
                      void 0),
                  (n.isNonEmptyArray = function (e) {
                    return Array.isArray(e) && e.length > 0;
                  }),
                  (n.isNullOrUndefined = function (e) {
                    return null === e || e === undefined;
                  }),
                  (n.isObject = function (e) {
                    return Boolean(e) && 'object' == typeof e && !Array.isArray(e);
                  });
                function r(e) {
                  return e.charCodeAt(0) <= 127;
                }
                (n.hasProperty = (e, t) => Object.hasOwnProperty.call(e, t)),
                  (n.getKnownPropertyNames = function (e) {
                    return Object.getOwnPropertyNames(e);
                  }),
                  (function (e) {
                    (e[(e.Null = 4)] = 'Null'),
                      (e[(e.Comma = 1)] = 'Comma'),
                      (e[(e.Wrapper = 1)] = 'Wrapper'),
                      (e[(e.True = 4)] = 'True'),
                      (e[(e.False = 5)] = 'False'),
                      (e[(e.Quote = 1)] = 'Quote'),
                      (e[(e.Colon = 1)] = 'Colon'),
                      (e[(e.Date = 24)] = 'Date');
                  })(n.JsonSize || (n.JsonSize = {})),
                  (n.ESCAPE_CHARACTERS_REGEXP = /"|\\|\n|\r|\t/gu),
                  (n.isPlainObject = function (e) {
                    if ('object' != typeof e || null === e) return !1;
                    try {
                      let t = e;
                      for (; null !== Object.getPrototypeOf(t); ) t = Object.getPrototypeOf(t);
                      return Object.getPrototypeOf(e) === t;
                    } catch (e) {
                      return !1;
                    }
                  }),
                  (n.isASCII = r),
                  (n.calculateStringSize = function (e) {
                    return (
                      e.split('').reduce((e, t) => (r(t) ? e + 1 : e + 2), 0) +
                      (e.match(n.ESCAPE_CHARACTERS_REGEXP) ?? []).length
                    );
                  }),
                  (n.calculateNumberSize = function (e) {
                    return e.toString().length;
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/misc.cjs' },
    ],
    [
      3,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = {
                  chunks: [
                    {
                      faces: [
                        [0, 1, 2],
                        [2, 3, 0],
                        [4, 5, 2],
                        [6, 3, 2],
                        [2, 5, 6],
                        [7, 8, 9],
                        [10, 3, 6],
                        [10, 50, 7],
                        [7, 3, 10],
                        [7, 9, 3],
                        [49, 0, 9],
                        [3, 9, 0],
                        [2, 1, 4],
                      ],
                      name: 'left ear',
                      gradient: 'left-ear-gradient',
                    },
                    {
                      faces: [
                        [53, 54, 55],
                        [55, 56, 53],
                        [57, 56, 55],
                        [58, 59, 55],
                        [55, 54, 58],
                        [60, 61, 62],
                        [63, 58, 54],
                        [63, 60, 89],
                        [60, 63, 54],
                        [60, 54, 61],
                        [88, 61, 53],
                        [54, 53, 61],
                        [55, 59, 57],
                      ],
                      name: 'right ear',
                      gradient: 'right-ear-gradient',
                    },
                    { color: [22, 22, 22], faces: [[11, 12, 13]], name: 'left eye' },
                    { color: [22, 22, 22], faces: [[64, 65, 66]], name: 'right eye' },
                    {
                      faces: [
                        [14, 15, 11],
                        [11, 16, 14],
                      ],
                      name: 'left inner eye',
                      gradient: 'left-inner-eye-gradient',
                    },
                    {
                      faces: [[17, 12, 18]],
                      name: 'left outer eye',
                      gradient: 'left-outer-eye-gradient',
                    },
                    {
                      faces: [[41, 64, 37]],
                      name: 'right lower inner eye',
                      gradient: 'right-inner-eye-gradient',
                    },
                    {
                      faces: [[67, 68, 66]],
                      name: 'right outer eye',
                      gradient: 'right-outer-eye-gradient',
                    },
                    {
                      color: [223, 117, 84],
                      faces: [
                        [19, 20, 21],
                        [21, 22, 19],
                        [20, 19, 23],
                        [23, 24, 20],
                        [23, 25, 24],
                        [19, 22, 26],
                        [26, 27, 19],
                        [23, 28, 29],
                        [23, 29, 30],
                        [25, 23, 30],
                        [29, 51, 52],
                        [52, 30, 29],
                        [27, 26, 69],
                        [69, 70, 27],
                        [70, 71, 72],
                        [72, 27, 70],
                        [72, 71, 73],
                        [51, 74, 72],
                        [52, 51, 72],
                        [73, 52, 72],
                        [19, 27, 74],
                        [74, 28, 19],
                        [51, 29, 28],
                        [28, 74, 51],
                        [74, 27, 72],
                        [28, 23, 19],
                      ],
                      name: 'lower chin',
                    },
                    {
                      color: [255, 159, 90],
                      faces: [
                        [21, 20, 24],
                        [24, 31, 21],
                      ],
                      name: 'left lower snout',
                    },
                    {
                      color: [255, 159, 90],
                      faces: [
                        [69, 71, 70],
                        [71, 69, 75],
                      ],
                      name: 'right lower snout',
                    },
                    { color: [147, 131, 250], faces: [[31, 24, 18]], name: 'left upper snout' },
                    {
                      faces: [
                        [6, 5, 16],
                        [16, 17, 6],
                      ],
                      name: 'left forehead',
                      gradient: 'left-forehead-gradient',
                    },
                    {
                      faces: [
                        [24, 32, 33],
                        [33, 34, 24],
                      ],
                      name: 'left lower cheek',
                      gradient: 'left-lower-cheek-gradient',
                    },
                    {
                      faces: [[5, 4, 35]],
                      name: 'left top ear',
                      gradient: 'left-top-ear-gradient',
                    },
                    { color: [147, 131, 250], faces: [[75, 68, 71]], name: 'right upper snout' },
                    {
                      faces: [
                        [58, 67, 40],
                        [40, 59, 58],
                      ],
                      name: 'right forhead',
                      gradient: 'right-forehead-gradient',
                    },
                    {
                      faces: [
                        [71, 76, 77],
                        [77, 78, 71],
                      ],
                      name: 'right lower cheek',
                      gradient: 'right-lower-cheek-gradient',
                    },
                    {
                      faces: [[24, 34, 18]],
                      name: 'left middle cheek',
                      gradient: 'left-middle-cheek-gradient',
                    },
                    {
                      color: [156, 90, 221],
                      faces: [
                        [16, 13, 12],
                        [12, 17, 16],
                        [13, 16, 11],
                      ],
                      name: 'left above eye',
                    },
                    {
                      faces: [[71, 68, 76]],
                      name: 'right middle cheek',
                      gradient: 'right-middle-cheek-gradient',
                    },
                    {
                      color: [156, 90, 221],
                      faces: [
                        [40, 67, 66],
                        [66, 65, 40],
                        [65, 64, 40],
                      ],
                      name: 'right above eye',
                    },
                    {
                      color: [22, 22, 22],
                      faces: [
                        [36, 15, 37],
                        [37, 38, 36],
                        [31, 39, 22],
                        [22, 21, 31],
                        [31, 15, 36],
                        [36, 39, 31],
                        [75, 69, 26],
                        [26, 80, 75],
                        [75, 80, 38],
                        [38, 37, 75],
                        [38, 80, 39],
                        [39, 36, 38],
                        [39, 80, 26],
                        [26, 22, 39],
                      ],
                      name: 'nose',
                    },
                    {
                      faces: [
                        [17, 33, 10],
                        [17, 18, 34],
                        [34, 33, 17],
                        [10, 6, 17],
                      ],
                      name: 'left upper cheek',
                      gradient: 'left-upper-cheek-gradient',
                    },
                    {
                      faces: [
                        [11, 15, 31],
                        [31, 18, 11],
                        [18, 12, 11],
                      ],
                      name: 'left below eye',
                      gradient: 'left-below-eye-gradient',
                    },
                    {
                      faces: [
                        [14, 16, 40],
                        [40, 41, 14],
                        [59, 5, 35],
                        [35, 79, 59],
                        [14, 41, 37],
                        [37, 15, 14],
                        [5, 59, 40],
                        [40, 16, 5],
                      ],
                      name: 'forehead',
                      gradient: 'forehead-gradient',
                    },
                    {
                      faces: [
                        [67, 63, 77],
                        [67, 77, 76],
                        [76, 68, 67],
                        [63, 67, 58],
                      ],
                      name: 'right upper cheek',
                      gradient: 'right-upper-cheek-gradient',
                    },
                    {
                      faces: [
                        [64, 68, 75],
                        [75, 37, 64],
                        [68, 64, 66],
                      ],
                      name: 'right below eye',
                      gradient: 'right-below-eye-gradient',
                    },
                    {
                      faces: [
                        [35, 4, 42],
                        [4, 1, 42],
                        [42, 43, 44],
                        [44, 35, 42],
                        [45, 43, 42],
                        [42, 10, 45],
                        [30, 32, 24],
                        [24, 25, 30],
                        [30, 33, 32],
                        [33, 30, 10],
                        [44, 43, 46],
                        [43, 45, 47],
                        [47, 46, 43],
                        [48, 47, 45],
                        [45, 30, 48],
                        [30, 45, 10],
                        [49, 42, 0],
                        [8, 7, 42],
                        [50, 42, 7],
                        [50, 10, 42],
                        [1, 0, 42],
                        [42, 9, 8],
                        [42, 49, 9],
                        [79, 81, 57],
                        [57, 81, 56],
                        [82, 79, 35],
                        [35, 44, 82],
                        [81, 79, 82],
                        [82, 83, 81],
                        [84, 63, 81],
                        [81, 83, 84],
                        [44, 46, 85],
                        [85, 82, 44],
                        [52, 73, 71],
                        [71, 78, 52],
                        [52, 78, 77],
                        [77, 63, 52],
                        [82, 85, 83],
                        [83, 85, 86],
                        [86, 84, 83],
                        [87, 52, 84],
                        [84, 86, 87],
                        [52, 63, 84],
                        [88, 53, 81],
                        [62, 81, 60],
                        [89, 60, 81],
                        [89, 81, 63],
                        [56, 81, 53],
                        [81, 62, 61],
                        [81, 61, 88],
                        [48, 87, 86],
                        [86, 47, 48],
                        [47, 86, 85],
                        [85, 46, 47],
                        [48, 30, 52],
                        [52, 87, 48],
                      ],
                      name: 'back',
                      gradient: 'back-gradient',
                    },
                    {
                      faces: [[57, 59, 79]],
                      name: 'right top ear',
                      gradient: 'right-top-ear-gradient',
                    },
                    {
                      faces: [[64, 41, 40]],
                      name: 'right inner upper eye',
                      gradient: 'right-inner-eye-gradient',
                    },
                  ],
                  gradients: {
                    'left-inner-eye-gradient': {
                      type: 'linear',
                      x1: '41.97721822541966%',
                      y1: '67.79239690721649%',
                      x2: '44.56654676258992%',
                      y2: '67.79239690721649%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BA86F3' },
                        { offset: '0.5281', 'stop-color': '#B786F4' },
                        { offset: '0.8987', 'stop-color': '#AE86F5' },
                        { offset: '1', 'stop-color': '#AA86F6' },
                      ],
                    },
                    'right-inner-eye-gradient': {
                      type: 'linear',
                      x1: '56.72805755395684%',
                      y1: '81.08904639175258%',
                      x2: '56.72805755395684%',
                      y2: '54.49574742268041%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BA86F3' },
                        { offset: '0.5281', 'stop-color': '#B786F4' },
                        { offset: '0.8987', 'stop-color': '#AE86F5' },
                        { offset: '1', 'stop-color': '#AA86F6' },
                      ],
                    },
                    'left-middle-cheek-gradient': {
                      type: 'linear',
                      x1: '25.107913669064747%',
                      y1: '72.68865979381442%',
                      x2: '25.107913669064747%',
                      y2: '89.44690721649484%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#6848BA' },
                        { offset: '0.3363', 'stop-color': '#6356D5' },
                      ],
                    },
                    'right-middle-cheek-gradient': {
                      type: 'linear',
                      x1: '74.89208633093526%',
                      y1: '51.32938144329896%',
                      x2: '74.89208633093526%',
                      y2: '94.76301546391753%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#6848BA' },
                        { offset: '0.3363', 'stop-color': '#6356D5' },
                      ],
                    },
                    'right-forehead-gradient': {
                      type: 'linear',
                      x1: '67.00671462829736%',
                      y1: '30.13930412371134%',
                      x2: '67.00671462829736%',
                      y2: '54.49561855670103%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#DC69E6' },
                        { offset: '1', 'stop-color': '#C289F3' },
                      ],
                    },
                    'left-forehead-gradient': {
                      type: 'linear',
                      x1: '32.99340527577938%',
                      y1: '30.13930412371134%',
                      x2: '32.99340527577938%',
                      y2: '54.49561855670103%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#DC69E6' },
                        { offset: '1', 'stop-color': '#C289F3' },
                      ],
                    },
                    'right-top-ear-gradient': {
                      type: 'linear',
                      x1: '95.056858513189448%',
                      y1: '15.06958762886598%',
                      x2: '57.31654676258992%',
                      y2: '15.06958762886598%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BB65ED' },
                        { offset: '1', 'stop-color': '#E560E3' },
                      ],
                    },
                    'left-top-ear-gradient': {
                      type: 'linear',
                      x1: '4.943141486810552%',
                      y1: '15.06958762886598%',
                      x2: '42.68345323741008%',
                      y2: '15.06958762886598%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BB65ED' },
                        { offset: '1', 'stop-color': '#E560E3' },
                      ],
                    },
                    'left-lower-cheek-gradient': {
                      type: 'linear',
                      x1: '15.103956834532372%',
                      y1: '72.6889175257732%',
                      x2: '15.103956834532372%',
                      y2: '96.03221649484537%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#906EF7' },
                        { offset: '1', 'stop-color': '#575ADE' },
                      ],
                    },
                    'right-lower-cheek-gradient': {
                      type: 'linear',
                      x1: '84.91570743405276%',
                      y1: '72.6889175257732%',
                      x2: '84.91570743405276%',
                      y2: '96.03221649484537%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#906EF7' },
                        { offset: '1', 'stop-color': '#575ADE' },
                      ],
                    },
                    'right-outer-eye-gradient': {
                      type: 'linear',
                      x1: '68.7720623501199%',
                      y1: '63.14909793814433%',
                      x2: '78.03057553956835%',
                      y2: '63.14909793814433%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BA86F3' },
                        { offset: '0.5281', 'stop-color': '#B786F4' },
                        { offset: '0.8987', 'stop-color': '#AE86F5' },
                        { offset: '1', 'stop-color': '#AA86F6' },
                      ],
                    },
                    'left-outer-eye-gradient': {
                      type: 'linear',
                      x1: '21.969424460431654%',
                      y1: '63.14909793814433%',
                      x2: '31.227937649880094%',
                      y2: '63.14909793814433%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#BA86F3' },
                        { offset: '0.5281', 'stop-color': '#B786F4' },
                        { offset: '0.8987', 'stop-color': '#AE86F5' },
                        { offset: '1', 'stop-color': '#AA86F6' },
                      ],
                    },
                    'left-ear-gradient': {
                      type: 'linear',
                      x1: '50%',
                      y1: '30%',
                      x2: '4%',
                      y2: '4%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#541758' },
                        { offset: '0.4286', 'stop-color': '#4F206C' },
                        { offset: '0.62', 'stop-color': '#4D2577' },
                        { offset: '1', 'stop-color': '#8B45B6' },
                      ],
                    },
                    'right-ear-gradient': {
                      type: 'linear',
                      x1: '50%',
                      y1: '30%',
                      x2: '96%',
                      y2: '4%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#541758' },
                        { offset: '0.4286', 'stop-color': '#4F206C' },
                        { offset: '0.62', 'stop-color': '#4D2577' },
                        { offset: '1', 'stop-color': '#8B45B6' },
                      ],
                    },
                    'left-below-eye-gradient': {
                      type: 'linear',
                      x1: '30.914028776978412%',
                      y1: '72.83646907216496%',
                      x2: '44.56654676258992%',
                      y2: '72.83646907216496%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#C8A8F7' },
                        { offset: '1', 'stop-color': '#BAAAFB' },
                      ],
                    },
                    'right-below-eye-gradient': {
                      type: 'linear',
                      x1: '55.43345323741007%',
                      y1: '72.83646907216496%',
                      x2: '69.12517985611511%',
                      y2: '72.83646907216496%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#C8A8F7' },
                        { offset: '1', 'stop-color': '#BAAAFB' },
                      ],
                    },
                    'left-upper-cheek-gradient': {
                      type: 'linear',
                      x1: '16.02589928057554%',
                      y1: '43.35154639175258%',
                      x2: '16.02589928057554%',
                      y2: '72.85773195876288%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#B65FE5' },
                        { offset: '1', 'stop-color': '#ADA2FC' },
                      ],
                    },
                    'right-upper-cheek-gradient': {
                      type: 'linear',
                      x1: '83.99364508393285%',
                      y1: '43.35154639175258%',
                      x2: '83.99364508393285%',
                      y2: '72.85773195876288%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#B65FE5' },
                        { offset: '1', 'stop-color': '#ADA2FC' },
                      ],
                    },
                    'forehead-gradient': {
                      type: 'linear',
                      x1: '50%',
                      y1: '12.790180412371136%',
                      x2: '50%',
                      y2: '81.08904639175258%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#FB7FE4' },
                        { offset: '1', 'stop-color': '#BCABFB' },
                      ],
                    },
                    'back-gradient': {
                      type: 'linear',
                      x1: '50%',
                      y1: '12.790180412371136%',
                      x2: '50%',
                      y2: '81.08904639175258%',
                      gradientUnits: 'userSpaceOnUse',
                      stops: [
                        { 'stop-color': '#FB7FE4' },
                        { offset: '1', 'stop-color': '#5C5CE0' },
                      ],
                    },
                  },
                  positions: [
                    [111.024597, 52.604599, 46.225899],
                    [114.025002, 87.673302, 58.9818],
                    [66.192001, 80.898003, 55.394299],
                    [72.113297, 35.491798, 30.871401],
                    [97.804497, 116.560997, 73.978798],
                    [16.7623, 58.010899, 58.078201],
                    [52.608898, 30.3641, 42.556099],
                    [106.881401, 31.945499, 46.9133],
                    [113.484596, 38.6049, 49.121498],
                    [108.6633, 43.2332, 46.315399],
                    [101.216599, 15.9822, 46.308201],
                    [16.6605, -16.2883, 93.618698],
                    [40.775002, -10.2288, 85.276398],
                    [23.926901, -2.5103, 86.736504],
                    [11.1691, -7.0037, 99.377602],
                    [9.5692, -34.393902, 141.671997],
                    [12.596, 7.1655, 88.740997],
                    [61.180901, 8.8142, 76.996803],
                    [39.719501, -28.927099, 88.963799],
                    [13.7962, -68.575699, 132.057007],
                    [15.2674, -62.32, 129.688004],
                    [14.8446, -52.6096, 140.113007],
                    [12.8917, -49.771599, 144.740997],
                    [35.604198, -71.758003, 81.063904],
                    [47.462502, -68.606102, 63.369701],
                    [38.2486, -64.730202, 38.909901],
                    [-12.8917, -49.771599, 144.740997],
                    [-13.7962, -68.575699, 132.057007],
                    [17.802099, -71.758003, 81.063904],
                    [19.1243, -69.0168, 49.420101],
                    [38.2486, -66.275597, 17.776199],
                    [12.8928, -36.703499, 141.671997],
                    [109.283997, -93.589897, 27.824301],
                    [122.117996, -36.8894, 35.025002],
                    [67.7668, -30.197001, 78.417801],
                    [33.180698, 101.851997, 25.3186],
                    [9.4063, -35.589802, 150.722],
                    [-9.5692, -34.393902, 141.671997],
                    [-9.4063, -35.589802, 150.722],
                    [11.4565, -37.899399, 150.722],
                    [-12.596, 7.1655, 88.740997],
                    [-11.1691, -7.0037, 99.377602],
                    [70.236504, 62.836201, -3.9475],
                    [47.263401, 54.293999, -27.414801],
                    [28.7302, 91.731102, -24.972601],
                    [69.167603, 6.5862, -12.7757],
                    [28.7302, 49.1003, -48.3596],
                    [31.903, 5.692, -47.821999],
                    [35.075802, -34.432899, -16.280899],
                    [115.284103, 48.681499, 48.684101],
                    [110.842796, 28.4821, 49.176201],
                    [-19.1243, -69.0168, 49.420101],
                    [-38.2486, -66.275597, 17.776199],
                    [-111.024597, 52.604599, 46.225899],
                    [-72.113297, 35.491798, 30.871401],
                    [-66.192001, 80.898003, 55.394299],
                    [-114.025002, 87.673302, 58.9818],
                    [-97.804497, 116.560997, 73.978798],
                    [-52.608898, 30.3641, 42.556099],
                    [-16.7623, 58.010899, 58.078201],
                    [-106.881401, 31.945499, 46.9133],
                    [-108.6633, 43.2332, 46.315399],
                    [-113.484596, 38.6049, 49.121498],
                    [-101.216599, 15.9822, 46.308201],
                    [-16.6605, -16.2883, 93.618698],
                    [-23.926901, -2.5103, 86.736504],
                    [-40.775002, -10.2288, 85.276398],
                    [-61.180901, 8.8142, 76.996803],
                    [-39.719501, -28.927099, 88.963799],
                    [-14.8446, -52.6096, 140.113007],
                    [-15.2674, -62.32, 129.688004],
                    [-47.462502, -68.606102, 63.369701],
                    [-35.604198, -71.758003, 81.063904],
                    [-38.2486, -64.730202, 38.909901],
                    [-17.802099, -71.758003, 81.063904],
                    [-12.8928, -36.703499, 141.671997],
                    [-67.7668, -30.197001, 78.417801],
                    [-122.117996, -36.8894, 35.025002],
                    [-109.283997, -93.589897, 27.824301],
                    [-33.180698, 101.851997, 25.3186],
                    [-11.4565, -37.899399, 150.722],
                    [-70.236504, 62.836201, -3.9475],
                    [-28.7302, 91.731102, -24.972601],
                    [-47.263401, 54.293999, -27.414801],
                    [-69.167603, 6.5862, -12.7757],
                    [-28.7302, 49.1003, -48.3596],
                    [-31.903, 5.692, -47.821999],
                    [-35.075802, -34.432899, -16.280899],
                    [-115.284103, 48.681499, 48.684101],
                    [-110.842796, 28.4821, 49.176201],
                  ],
                };
              };
            };
      },
      { package: '$root$', file: 'app/build-types/flask/images/flask-mascot.json' },
    ],
    [
      3e3,
      { './assert.cjs': 2985, './hex.cjs': 2994 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.hexToBigInt = n.hexToNumber = n.bigIntToHex = n.numberToHex = void 0);
                const r = e('./assert.cjs'),
                  s = e('./hex.cjs');
                n.numberToHex = e => (
                  (0, r.assert)('number' == typeof e, 'Value must be a number.'),
                  (0, r.assert)(e >= 0, 'Value must be a non-negative number.'),
                  (0, r.assert)(
                    Number.isSafeInteger(e),
                    'Value is not a safe integer. Use `bigIntToHex` instead.'
                  ),
                  (0, s.add0x)(e.toString(16))
                );
                n.bigIntToHex = e => (
                  (0, r.assert)('bigint' == typeof e, 'Value must be a bigint.'),
                  (0, r.assert)(e >= 0, 'Value must be a non-negative bigint.'),
                  (0, s.add0x)(e.toString(16))
                );
                n.hexToNumber = e => {
                  (0, s.assertIsHexString)(e);
                  const t = parseInt(e, 16);
                  return (
                    (0, r.assert)(
                      Number.isSafeInteger(t),
                      'Value is not a safe integer. Use `hexToBigInt` instead.'
                    ),
                    t
                  );
                };
                n.hexToBigInt = e => ((0, s.assertIsHexString)(e), BigInt((0, s.add0x)(e)));
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/number.cjs' },
    ],
    [
      3001,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/opaque.cjs' },
    ],
    [
      3002,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.createDeferredPromise = void 0),
                  (n.createDeferredPromise = function ({
                    suppressUnhandledRejection: e = !1,
                  } = {}) {
                    let t, n;
                    const r = new Promise((e, r) => {
                      (t = e), (n = r);
                    });
                    return e && r.catch(e => {}), { promise: r, resolve: t, reject: n };
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/promise.cjs' },
    ],
    [
      3003,
      { '@metamask/superstruct': 2913 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.definePattern = void 0);
                const r = e('@metamask/superstruct');
                n.definePattern = function (e, t) {
                  return (0, r.define)(e, e => 'string' == typeof e && t.test(e));
                };
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/superstruct.cjs' },
    ],
    [
      3004,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.timeSince = n.inMilliseconds = n.Duration = void 0),
                  (function (e) {
                    (e[(e.Millisecond = 1)] = 'Millisecond'),
                      (e[(e.Second = 1e3)] = 'Second'),
                      (e[(e.Minute = 6e4)] = 'Minute'),
                      (e[(e.Hour = 36e5)] = 'Hour'),
                      (e[(e.Day = 864e5)] = 'Day'),
                      (e[(e.Week = 6048e5)] = 'Week'),
                      (e[(e.Year = 31536e6)] = 'Year');
                  })(n.Duration || (n.Duration = {}));
                const r = (e, t) => {
                  if (!(e => Number.isInteger(e) && e >= 0)(e))
                    throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`);
                };
                (n.inMilliseconds = function (e, t) {
                  return r(e, 'count'), e * t;
                }),
                  (n.timeSince = function (e) {
                    return r(e, 'timestamp'), Date.now() - e;
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/time.cjs' },
    ],
    [
      3005,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
              };
            };
      },
      {
        package: '@metamask/utils',
        file: 'node_modules/@metamask/utils/dist/transaction-types.cjs',
      },
    ],
    [
      3006,
      { './assert.cjs': 2985, '@metamask/superstruct': 2913, semver: 5617 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.satisfiesVersionRange =
                    n.gtRange =
                    n.gtVersion =
                    n.assertIsSemVerRange =
                    n.assertIsSemVerVersion =
                    n.isValidSemVerRange =
                    n.isValidSemVerVersion =
                    n.VersionRangeStruct =
                    n.VersionStruct =
                      void 0);
                const r = e('@metamask/superstruct'),
                  s = e('semver'),
                  o = e('./assert.cjs');
                (n.VersionStruct = (0, r.refine)(
                  (0, r.string)(),
                  'Version',
                  e => null !== (0, s.valid)(e) || `Expected SemVer version, got "${e}"`
                )),
                  (n.VersionRangeStruct = (0, r.refine)(
                    (0, r.string)(),
                    'Version range',
                    e => null !== (0, s.validRange)(e) || `Expected SemVer range, got "${e}"`
                  )),
                  (n.isValidSemVerVersion = function (e) {
                    return (0, r.is)(e, n.VersionStruct);
                  }),
                  (n.isValidSemVerRange = function (e) {
                    return (0, r.is)(e, n.VersionRangeStruct);
                  }),
                  (n.assertIsSemVerVersion = function (e) {
                    (0, o.assertStruct)(e, n.VersionStruct);
                  }),
                  (n.assertIsSemVerRange = function (e) {
                    (0, o.assertStruct)(e, n.VersionRangeStruct);
                  }),
                  (n.gtVersion = function (e, t) {
                    return (0, s.gt)(e, t);
                  }),
                  (n.gtRange = function (e, t) {
                    return (0, s.gtr)(e, t);
                  }),
                  (n.satisfiesVersionRange = function (e, t) {
                    return (0, s.satisfies)(e, t, { includePrerelease: !0 });
                  });
              };
            };
      },
      { package: '@metamask/utils', file: 'node_modules/@metamask/utils/dist/versions.cjs' },
    ],
    [
      3008,
      { './utils': 3018, assert: 4135, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r =
                      (this && this.__importDefault) ||
                      function (e) {
                        return e && e.__esModule ? e : { default: e };
                      };
                    Object.defineProperty(n, '__esModule', { value: !0 });
                    const s = r(e('assert')),
                      o = e('./utils');
                    let i = [];
                    var a;
                    !(function (e) {
                      (e.STANDARD = 'standard'), (e.URI = 'uri'), (e.MINIMAL = 'minimal');
                    })(a || (a = {}));
                    const c = e =>
                        'ableacidalsoapexaquaarchatomauntawayaxisbackbaldbarnbeltbetabiasbluebodybragbrewbulbbuzzcalmcashcatschefcityclawcodecolacookcostcruxcurlcuspcyandarkdatadaysdelidicedietdoordowndrawdropdrumdulldutyeacheasyechoedgeepicevenexamexiteyesfactfairfernfigsfilmfishfizzflapflewfluxfoxyfreefrogfuelfundgalagamegeargemsgiftgirlglowgoodgraygrimgurugushgyrohalfhanghardhawkheathelphighhillholyhopehornhutsicedideaidleinchinkyintoirisironitemjadejazzjoinjoltjowljudojugsjumpjunkjurykeepkenokeptkeyskickkilnkingkitekiwiknoblamblavalazyleaflegsliarlimplionlistlogoloudloveluaulucklungmainmanymathmazememomenumeowmildmintmissmonknailnavyneednewsnextnoonnotenumbobeyoboeomitonyxopenovalowlspaidpartpeckplaypluspoempoolposepuffpumapurrquadquizraceramprealredorichroadrockroofrubyruinrunsrustsafesagascarsetssilkskewslotsoapsolosongstubsurfswantacotasktaxitenttiedtimetinytoiltombtoystriptunatwinuglyundouniturgeuservastveryvetovialvibeviewvisavoidvowswallwandwarmwaspwavewaxywebswhatwhenwhizwolfworkyankyawnyellyogayurtzapszerozestzinczonezoom'.slice(
                          4 * e,
                          4 * e + 4
                        ),
                      u = e => `${e}${o.getCRCHex(t.from(e, 'hex'))}`,
                      l = (e, n) => {
                        const r = u(e);
                        return t
                          .from(r, 'hex')
                          .reduce((e, t) => [...e, c(t)], [])
                          .join(n);
                      },
                      d = e => {
                        const n = u(e);
                        return t.from(n, 'hex').reduce(
                          (e, t) =>
                            e +
                            (e => {
                              const t = c(e);
                              return `${t[0]}${t[3]}`;
                            })(t),
                          ''
                        );
                      },
                      f = (e, n, r) => {
                        const a = (4 == r ? e.split(n) : o.partition(e, 2))
                          .map(e =>
                            ((e, n) => {
                              s.default(
                                e.length === n,
                                'Invalid Bytewords: word.length does not match wordLength provided'
                              );
                              const r = 26;
                              if (0 === i.length) {
                                i = [...new Array(676)].map(() => -1);
                                for (let e = 0; e < 256; e++) {
                                  const t = c(e);
                                  let n = t[0].charCodeAt(0) - 'a'.charCodeAt(0),
                                    s = t[3].charCodeAt(0) - 'a'.charCodeAt(0);
                                  i[s * r + n] = e;
                                }
                              }
                              let o = e[0].toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0),
                                a =
                                  e[4 == n ? 3 : 1].toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);
                              s.default(
                                0 <= o && o < r && 0 <= a && a < r,
                                'Invalid Bytewords: invalid word'
                              );
                              let u = i[a * r + o];
                              if (
                                (s.default(
                                  -1 !== u,
                                  'Invalid Bytewords: value not in lookup table'
                                ),
                                4 == n)
                              ) {
                                const t = c(u);
                                let n = e[1].toLowerCase(),
                                  r = e[2].toLowerCase();
                                s.default(
                                  n === t[1] && r === t[2],
                                  'Invalid Bytewords: invalid middle letters of word'
                                );
                              }
                              return t.from([u]).toString('hex');
                            })(e, r)
                          )
                          .join('');
                        s.default(
                          a.length >= 5,
                          'Invalid Bytewords: invalid decoded string length'
                        );
                        const [u, l] = o.split(t.from(a, 'hex'), 4),
                          d = o.getCRCHex(u);
                        return (
                          s.default(d === l.toString('hex'), 'Invalid Checksum'), u.toString('hex')
                        );
                      };
                    n.default = {
                      decode: (e, t = a.MINIMAL) => {
                        switch (t) {
                          case a.STANDARD:
                            return f(e, ' ', 4);
                          case a.URI:
                            return f(e, '-', 4);
                          case a.MINIMAL:
                            return f(e, '', 2);
                          default:
                            throw new Error(`Invalid style ${t}`);
                        }
                      },
                      encode: (e, t = a.MINIMAL) => {
                        switch (t) {
                          case a.STANDARD:
                            return l(e, ' ');
                          case a.URI:
                            return l(e, '-');
                          case a.MINIMAL:
                            return d(e);
                          default:
                            throw new Error(`Invalid style ${t}`);
                        }
                      },
                      STYLES: a,
                    };
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/bytewords.js' },
    ],
    [
      3009,
      { buffer: 4139, 'cbor-sync': 4158 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.cborDecode = n.cborEncode = void 0);
                    const r = e('cbor-sync');
                    n.cborEncode = e => r.encode(e);
                    n.cborDecode = e => r.decode(t.isBuffer(e) ? e : t.from(e, 'hex'));
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/cbor.js' },
    ],
    [
      3010,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.InvalidChecksumError =
                    n.InvalidSequenceComponentError =
                    n.InvalidTypeError =
                    n.InvalidPathLengthError =
                    n.InvalidSchemeError =
                      void 0);
                class r extends Error {
                  constructor() {
                    super('Invalid Scheme'), (this.name = 'InvalidSchemeError');
                  }
                }
                n.InvalidSchemeError = r;
                class s extends Error {
                  constructor() {
                    super('Invalid Path'), (this.name = 'InvalidPathLengthError');
                  }
                }
                n.InvalidPathLengthError = s;
                class o extends Error {
                  constructor() {
                    super('Invalid Type'), (this.name = 'InvalidTypeError');
                  }
                }
                n.InvalidTypeError = o;
                class i extends Error {
                  constructor() {
                    super('Invalid Sequence Component'),
                      (this.name = 'InvalidSequenceComponentError');
                  }
                }
                n.InvalidSequenceComponentError = i;
                class a extends Error {
                  constructor() {
                    super('Invalid Checksum'), (this.name = 'InvalidChecksumError');
                  }
                }
                n.InvalidChecksumError = a;
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/errors.js' },
    ],
    [
      3011,
      { './errors': 3010, './fountainUtils': 3013, './utils': 3018, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.FountainDecoderPart = void 0);
                    const r = e('./utils'),
                      s = e('./fountainUtils'),
                      o = e('./errors');
                    class i {
                      constructor(e, t) {
                        (this._indexes = e), (this._fragment = t);
                      }
                      get indexes() {
                        return this._indexes;
                      }
                      get fragment() {
                        return this._fragment;
                      }
                      static fromEncoderPart(e) {
                        const t = s.chooseFragments(e.seqNum, e.seqLength, e.checksum),
                          n = e.fragment;
                        return new i(t, n);
                      }
                      isSimple() {
                        return 1 === this.indexes.length;
                      }
                    }
                    n.FountainDecoderPart = i;
                    class a {
                      constructor() {
                        (this.result = undefined),
                          (this.expectedMessageLength = 0),
                          (this.expectedChecksum = 0),
                          (this.expectedFragmentLength = 0),
                          (this.processedPartsCount = 0),
                          (this.expectedPartIndexes = []),
                          (this.lastPartIndexes = []),
                          (this.queuedParts = []),
                          (this.receivedPartIndexes = []),
                          (this.mixedParts = []),
                          (this.simpleParts = []);
                      }
                      validatePart(e) {
                        if (0 === this.expectedPartIndexes.length)
                          [...new Array(e.seqLength)].forEach((e, t) =>
                            this.expectedPartIndexes.push(t)
                          ),
                            (this.expectedMessageLength = e.messageLength),
                            (this.expectedChecksum = e.checksum),
                            (this.expectedFragmentLength = e.fragment.length);
                        else {
                          if (this.expectedPartIndexes.length !== e.seqLength) return !1;
                          if (this.expectedMessageLength !== e.messageLength) return !1;
                          if (this.expectedChecksum !== e.checksum) return !1;
                          if (this.expectedFragmentLength !== e.fragment.length) return !1;
                        }
                        return !0;
                      }
                      reducePartByPart(e, t) {
                        if (r.arrayContains(e.indexes, t.indexes)) {
                          const n = r.setDifference(e.indexes, t.indexes),
                            s = r.bufferXOR(e.fragment, t.fragment);
                          return new i(n, s);
                        }
                        return e;
                      }
                      reduceMixedBy(e) {
                        const t = [];
                        this.mixedParts
                          .map(({ value: t }) => this.reducePartByPart(t, e))
                          .forEach(e => {
                            e.isSimple()
                              ? this.queuedParts.push(e)
                              : t.push({ key: e.indexes, value: e });
                          }),
                          (this.mixedParts = t);
                      }
                      processSimplePart(e) {
                        const t = e.indexes[0];
                        if (!this.receivedPartIndexes.includes(t))
                          if (
                            (this.simpleParts.push({ key: e.indexes, value: e }),
                            this.receivedPartIndexes.push(t),
                            r.arraysEqual(this.receivedPartIndexes, this.expectedPartIndexes))
                          ) {
                            const e = this.simpleParts
                                .map(({ value: e }) => e)
                                .sort((e, t) => e.indexes[0] - t.indexes[0]),
                              t = a.joinFragments(
                                e.map(e => e.fragment),
                                this.expectedMessageLength
                              );
                            r.getCRC(t) === this.expectedChecksum
                              ? (this.result = t)
                              : (this.error = new o.InvalidChecksumError());
                          } else this.reduceMixedBy(e);
                      }
                      processMixedPart(e) {
                        if (this.mixedParts.some(({ key: t }) => r.arraysEqual(t, e.indexes)))
                          return;
                        let t = this.simpleParts.reduce(
                          (e, { value: t }) => this.reducePartByPart(e, t),
                          e
                        );
                        (t = this.mixedParts.reduce(
                          (e, { value: t }) => this.reducePartByPart(e, t),
                          t
                        )),
                          t.isSimple()
                            ? this.queuedParts.push(t)
                            : (this.reduceMixedBy(t),
                              this.mixedParts.push({ key: t.indexes, value: t }));
                      }
                      processQueuedItem() {
                        if (0 === this.queuedParts.length) return;
                        const e = this.queuedParts.shift();
                        e.isSimple() ? this.processSimplePart(e) : this.processMixedPart(e);
                      }
                      receivePart(e) {
                        if (this.isComplete()) return !1;
                        if (!this.validatePart(e)) return !1;
                        const t = i.fromEncoderPart(e);
                        for (
                          this.lastPartIndexes = t.indexes, this.queuedParts.push(t);
                          !this.isComplete() && this.queuedParts.length > 0;

                        )
                          this.processQueuedItem();
                        return (this.processedPartsCount += 1), !0;
                      }
                      isComplete() {
                        return Boolean(this.result !== undefined && this.result.length > 0);
                      }
                      isSuccess() {
                        return Boolean(this.error === undefined && this.isComplete());
                      }
                      resultMessage() {
                        return this.isSuccess() ? this.result : t.from([]);
                      }
                      isFailure() {
                        return this.error !== undefined;
                      }
                      resultError() {
                        return this.error ? this.error.message : '';
                      }
                      expectedPartCount() {
                        return this.expectedPartIndexes.length;
                      }
                      getExpectedPartIndexes() {
                        return [...this.expectedPartIndexes];
                      }
                      getReceivedPartIndexes() {
                        return [...this.receivedPartIndexes];
                      }
                      getLastPartIndexes() {
                        return [...this.lastPartIndexes];
                      }
                      estimatedPercentComplete() {
                        if (this.isComplete()) return 1;
                        const e = this.expectedPartCount();
                        return 0 === e ? 0 : Math.min(0.99, this.processedPartsCount / (1.75 * e));
                      }
                      getProgress() {
                        if (this.isComplete()) return 1;
                        const e = this.expectedPartCount();
                        return 0 === e ? 0 : this.receivedPartIndexes.length / e;
                      }
                    }
                    (n.default = a), (a.joinFragments = (e, n) => t.concat(e).slice(0, n));
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js' },
    ],
    [
      3012,
      { './cbor': 3009, './fountainUtils': 3013, './utils': 3018, assert: 4135, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r =
                      (this && this.__importDefault) ||
                      function (e) {
                        return e && e.__esModule ? e : { default: e };
                      };
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.FountainEncoderPart = void 0);
                    const s = r(e('assert')),
                      o = e('./utils'),
                      i = e('./fountainUtils'),
                      a = e('./cbor');
                    class c {
                      constructor(e, t, n, r, s) {
                        (this._seqNum = e),
                          (this._seqLength = t),
                          (this._messageLength = n),
                          (this._checksum = r),
                          (this._fragment = s);
                      }
                      get messageLength() {
                        return this._messageLength;
                      }
                      get fragment() {
                        return this._fragment;
                      }
                      get seqNum() {
                        return this._seqNum;
                      }
                      get seqLength() {
                        return this._seqLength;
                      }
                      get checksum() {
                        return this._checksum;
                      }
                      cbor() {
                        const e = a.cborEncode([
                          this._seqNum,
                          this._seqLength,
                          this._messageLength,
                          this._checksum,
                          this._fragment,
                        ]);
                        return t.from(e);
                      }
                      description() {
                        return `seqNum:${this._seqNum}, seqLen:${this._seqLength}, messageLen:${this._messageLength}, checksum:${this._checksum}, data:${this._fragment.toString('hex')}`;
                      }
                      static fromCBOR(e) {
                        const [n, r, o, i, u] = a.cborDecode(e);
                        return (
                          s.default('number' == typeof n),
                          s.default('number' == typeof r),
                          s.default('number' == typeof o),
                          s.default('number' == typeof i),
                          s.default(t.isBuffer(u) && u.length > 0),
                          new c(n, r, o, i, t.from(u))
                        );
                      }
                    }
                    n.FountainEncoderPart = c;
                    class u {
                      constructor(e, t = 100, n = 0, r = 10) {
                        const s = u.findNominalFragmentLength(e.length, r, t);
                        (this._messageLength = e.length),
                          (this._fragments = u.partitionMessage(e, s)),
                          (this.fragmentLength = s),
                          (this.seqNum = o.toUint32(n)),
                          (this.checksum = o.getCRC(e));
                      }
                      get fragmentsLength() {
                        return this._fragments.length;
                      }
                      get fragments() {
                        return this._fragments;
                      }
                      get messageLength() {
                        return this._messageLength;
                      }
                      isComplete() {
                        return this.seqNum >= this._fragments.length;
                      }
                      isSinglePart() {
                        return 1 === this._fragments.length;
                      }
                      seqLength() {
                        return this._fragments.length;
                      }
                      mix(e) {
                        return e.reduce(
                          (e, t) => o.bufferXOR(this._fragments[t], e),
                          t.alloc(this.fragmentLength, 0)
                        );
                      }
                      nextPart() {
                        this.seqNum = o.toUint32(this.seqNum + 1);
                        const e = i.chooseFragments(
                            this.seqNum,
                            this._fragments.length,
                            this.checksum
                          ),
                          t = this.mix(e);
                        return new c(
                          this.seqNum,
                          this._fragments.length,
                          this._messageLength,
                          this.checksum,
                          t
                        );
                      }
                      static findNominalFragmentLength(e, t, n) {
                        s.default(e > 0), s.default(t > 0), s.default(n >= t);
                        const r = Math.ceil(e / t);
                        let o = 0;
                        for (let t = 1; t <= r && ((o = Math.ceil(e / t)), !(o <= n)); t++);
                        return o;
                      }
                      static partitionMessage(e, n) {
                        let r,
                          s = t.from(e),
                          i = [];
                        for (; s.length > 0; )
                          ([r, s] = o.split(s, -n)),
                            (r = t.alloc(n, 0).fill(r, 0, r.length)),
                            i.push(r);
                        return i;
                      }
                    }
                    n.default = u;
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js' },
    ],
    [
      3013,
      { './utils': 3018, './xoshiro': 3019, '@keystonehq/alias-sampling': 633, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r =
                      (this && this.__importDefault) ||
                      function (e) {
                        return e && e.__esModule ? e : { default: e };
                      };
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.chooseFragments = n.shuffle = n.chooseDegree = void 0);
                    const s = e('./utils'),
                      o = r(e('./xoshiro')),
                      i = r(e('@keystonehq/alias-sampling'));
                    n.chooseDegree = (e, t) => {
                      const n = [...new Array(e)].map((e, t) => 1 / (t + 1));
                      return i.default(n, undefined, t.nextDouble).next() + 1;
                    };
                    n.shuffle = (e, t) => {
                      let n = [...e],
                        r = [];
                      for (; n.length > 0; ) {
                        let e = t.nextInt(0, n.length - 1),
                          s = n[e];
                        n.splice(e, 1), r.push(s);
                      }
                      return r;
                    };
                    n.chooseFragments = (e, r, i) => {
                      if (e <= r) return [e - 1];
                      {
                        const a = t.concat([s.intToBytes(e), s.intToBytes(i)]),
                          c = new o.default(a),
                          u = n.chooseDegree(r, c),
                          l = [...new Array(r)].map((e, t) => t);
                        return n.shuffle(l, c).slice(0, u);
                      }
                    };
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/fountainUtils.js' },
    ],
    [
      3014,
      { './ur': 3015, './urDecoder': 3016, './urEncoder': 3017 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.URDecoder = n.UREncoder = n.UR = void 0);
                const s = r(e('./ur'));
                n.UR = s.default;
                const o = r(e('./urEncoder'));
                n.UREncoder = o.default;
                const i = r(e('./urDecoder'));
                n.URDecoder = i.default;
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/index.js' },
    ],
    [
      3015,
      { './cbor': 3009, './errors': 3010, './utils': 3018, buffer: 4139 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    Object.defineProperty(n, '__esModule', { value: !0 });
                    const r = e('./errors'),
                      s = e('./utils'),
                      o = e('./cbor');
                    class i {
                      constructor(e, t = 'bytes') {
                        if (((this._cborPayload = e), (this._type = t), !s.isURType(this._type)))
                          throw new r.InvalidTypeError();
                      }
                      static fromBuffer(e) {
                        return new i(o.cborEncode(e));
                      }
                      static from(e, n) {
                        return i.fromBuffer(t.from(e, n));
                      }
                      decodeCBOR() {
                        return o.cborDecode(this._cborPayload);
                      }
                      get type() {
                        return this._type;
                      }
                      get cbor() {
                        return this._cborPayload;
                      }
                      equals(e) {
                        return this.type === e.type && this.cbor.equals(e.cbor);
                      }
                    }
                    n.default = i;
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/ur.js' },
    ],
    [
      3016,
      {
        './bytewords': 3008,
        './errors': 3010,
        './fountainDecoder': 3011,
        './fountainEncoder': 3012,
        './ur': 3015,
        './utils': 3018,
        assert: 4135,
        buffer: 4139,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r =
                      (this && this.__importDefault) ||
                      function (e) {
                        return e && e.__esModule ? e : { default: e };
                      };
                    Object.defineProperty(n, '__esModule', { value: !0 });
                    const s = r(e('./fountainDecoder')),
                      o = r(e('./bytewords')),
                      i = r(e('assert')),
                      a = e('./utils'),
                      c = e('./errors'),
                      u = r(e('./ur')),
                      l = e('./fountainEncoder');
                    class d {
                      constructor(e = new s.default(), t = 'bytes') {
                        (this.fountainDecoder = e),
                          (this.type = t),
                          i.default(a.isURType(t), 'Invalid UR type'),
                          (this.expected_type = '');
                      }
                      static decodeBody(e, n) {
                        const r = o.default.decode(n, o.default.STYLES.MINIMAL);
                        return new u.default(t.from(r, 'hex'), e);
                      }
                      validatePart(e) {
                        return this.expected_type
                          ? this.expected_type === e
                          : !!a.isURType(e) && ((this.expected_type = e), !0);
                      }
                      static decode(e) {
                        const [t, n] = this.parse(e);
                        if (0 === n.length) throw new c.InvalidPathLengthError();
                        const r = n[0];
                        return d.decodeBody(t, r);
                      }
                      static parse(e) {
                        const t = e.toLowerCase();
                        if ('ur:' !== t.slice(0, 3)) throw new c.InvalidSchemeError();
                        const n = t.slice(3).split('/'),
                          r = n[0];
                        if (n.length < 2) throw new c.InvalidPathLengthError();
                        if (!a.isURType(r)) throw new c.InvalidTypeError();
                        return [r, n.slice(1)];
                      }
                      static parseSequenceComponent(e) {
                        const t = e.split('-');
                        if (2 !== t.length) throw new c.InvalidSequenceComponentError();
                        const n = a.toUint32(Number(t[0])),
                          r = Number(t[1]);
                        if (n < 1 || r < 1) throw new c.InvalidSequenceComponentError();
                        return [n, r];
                      }
                      receivePart(e) {
                        if (this.result !== undefined) return !1;
                        const [t, n] = d.parse(e);
                        if (!this.validatePart(t)) return !1;
                        if (1 === n.length) return (this.result = d.decodeBody(t, n[0])), !0;
                        if (2 !== n.length) throw new c.InvalidPathLengthError();
                        const [r, s] = n,
                          [i, a] = d.parseSequenceComponent(r),
                          f = o.default.decode(s, o.default.STYLES.MINIMAL),
                          h = l.FountainEncoderPart.fromCBOR(f);
                        return (
                          i === h.seqNum &&
                          a === h.seqLength &&
                          !!this.fountainDecoder.receivePart(h) &&
                          (this.fountainDecoder.isSuccess()
                            ? (this.result = new u.default(this.fountainDecoder.resultMessage(), t))
                            : this.fountainDecoder.isFailure() &&
                              (this.error = new c.InvalidSchemeError()),
                          !0)
                        );
                      }
                      resultUR() {
                        return this.result ? this.result : new u.default(t.from([]));
                      }
                      isComplete() {
                        return this.result && this.result.cbor.length > 0;
                      }
                      isSuccess() {
                        return !this.error && this.isComplete();
                      }
                      isError() {
                        return this.error !== undefined;
                      }
                      resultError() {
                        return this.error ? this.error.message : '';
                      }
                      expectedPartCount() {
                        return this.fountainDecoder.expectedPartCount();
                      }
                      expectedPartIndexes() {
                        return this.fountainDecoder.getExpectedPartIndexes();
                      }
                      receivedPartIndexes() {
                        return this.fountainDecoder.getReceivedPartIndexes();
                      }
                      lastPartIndexes() {
                        return this.fountainDecoder.getLastPartIndexes();
                      }
                      estimatedPercentComplete() {
                        return this.fountainDecoder.estimatedPercentComplete();
                      }
                      getProgress() {
                        return this.fountainDecoder.getProgress();
                      }
                    }
                    n.default = d;
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/urDecoder.js' },
    ],
    [
      3017,
      { './bytewords': 3008, './fountainEncoder': 3012 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 });
                const s = r(e('./fountainEncoder')),
                  o = r(e('./bytewords'));
                class i {
                  constructor(e, t, n, r) {
                    (this.ur = e), (this.fountainEncoder = new s.default(e.cbor, t, n, r));
                  }
                  get fragmentsLength() {
                    return this.fountainEncoder.fragmentsLength;
                  }
                  get fragments() {
                    return this.fountainEncoder.fragments;
                  }
                  get messageLength() {
                    return this.fountainEncoder.messageLength;
                  }
                  get cbor() {
                    return this.ur.cbor;
                  }
                  encodeWhole() {
                    return [...new Array(this.fragmentsLength)].map(() => this.nextPart());
                  }
                  nextPart() {
                    const e = this.fountainEncoder.nextPart();
                    return this.fountainEncoder.isSinglePart()
                      ? i.encodeSinglePart(this.ur)
                      : i.encodePart(this.ur.type, e);
                  }
                  static encodeUri(e, t) {
                    return [e, t.join('/')].join(':');
                  }
                  static encodeUR(e) {
                    return i.encodeUri('ur', e);
                  }
                  static encodePart(e, t) {
                    const n = `${t.seqNum}-${t.seqLength}`,
                      r = o.default.encode(t.cbor().toString('hex'), o.default.STYLES.MINIMAL);
                    return i.encodeUR([e, n, r]);
                  }
                  static encodeSinglePart(e) {
                    const t = o.default.encode(e.cbor.toString('hex'), o.default.STYLES.MINIMAL);
                    return i.encodeUR([e.type, t]);
                  }
                }
                n.default = i;
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/urEncoder.js' },
    ],
    [
      3018,
      { buffer: 4139, crc: 4236, 'sha.js': 5639 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r =
                      (this && this.__importDefault) ||
                      function (e) {
                        return e && e.__esModule ? e : { default: e };
                      };
                    Object.defineProperty(n, '__esModule', { value: !0 }),
                      (n.bufferXOR =
                        n.setDifference =
                        n.arrayContains =
                        n.arraysEqual =
                        n.hasPrefix =
                        n.isURType =
                        n.intToBytes =
                        n.toUint32 =
                        n.getCRCHex =
                        n.getCRC =
                        n.split =
                        n.partition =
                        n.sha256Hash =
                          void 0);
                    const s = r(e('sha.js')),
                      o = e('crc');
                    n.sha256Hash = e => s.default('sha256').update(e).digest();
                    n.partition = (e, t) => e.match(new RegExp('.{1,' + t + '}', 'g')) || [e];
                    n.split = (e, t) => [e.slice(0, -t), e.slice(-t)];
                    n.getCRC = e => o.crc32(e);
                    n.getCRCHex = e => o.crc32(e).toString(16).padStart(8, '0');
                    n.toUint32 = e => e >>> 0;
                    n.intToBytes = e => {
                      const n = new ArrayBuffer(4);
                      return new DataView(n).setUint32(0, e, !1), t.from(n);
                    };
                    n.isURType = e =>
                      e.split('').every((t, n) => {
                        let r = e.charCodeAt(n);
                        return (
                          ('a'.charCodeAt(0) <= r && r <= 'z'.charCodeAt(0)) ||
                          ('0'.charCodeAt(0) <= r && r <= '9'.charCodeAt(0)) ||
                          r === '-'.charCodeAt(0)
                        );
                      });
                    n.hasPrefix = (e, t) => 0 === e.indexOf(t);
                    n.arraysEqual = (e, t) => e.length === t.length && e.every(e => t.includes(e));
                    n.arrayContains = (e, t) => t.every(t => e.includes(t));
                    n.setDifference = (e, t) => e.filter(e => t.indexOf(e) < 0);
                    n.bufferXOR = (e, n) => {
                      const r = Math.max(e.length, n.length),
                        s = t.allocUnsafe(r);
                      for (let t = 0; t < r; ++t) s[t] = e[t] ^ n[t];
                      return s;
                    };
                  }).call(this);
                }).call(this, e('buffer').Buffer);
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/utils.js' },
    ],
    [
      3019,
      { './utils': 3018, 'bignumber.js': 3020, jsbi: 4752 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r =
                  (this && this.__importDefault) ||
                  function (e) {
                    return e && e.__esModule ? e : { default: e };
                  };
                Object.defineProperty(n, '__esModule', { value: !0 });
                const s = e('./utils'),
                  o = r(e('bignumber.js')),
                  i = r(e('jsbi')),
                  a = (e, t) =>
                    i.default.bitwiseXor(
                      i.default.asUintN(64, i.default.leftShift(e, i.default.BigInt(t))),
                      i.default.BigInt(
                        i.default.asUintN(
                          64,
                          i.default.signedRightShift(
                            e,
                            i.default.subtract(i.default.BigInt(64), i.default.BigInt(t))
                          )
                        )
                      )
                    );
                n.default = class {
                  constructor(e) {
                    (this.next = () => new o.default(this.roll().toString())),
                      (this.nextDouble = () =>
                        new o.default(this.roll().toString()).div(0x10000000000000000)),
                      (this.nextInt = (e, t) =>
                        Math.floor(this.nextDouble().toNumber() * (t - e + 1) + e)),
                      (this.nextByte = () => this.nextInt(0, 255)),
                      (this.nextData = e => [...new Array(e)].map(() => this.nextByte()));
                    const t = s.sha256Hash(e);
                    (this.s = [
                      i.default.BigInt(0),
                      i.default.BigInt(0),
                      i.default.BigInt(0),
                      i.default.BigInt(0),
                    ]),
                      this.setS(t);
                  }
                  setS(e) {
                    for (let t = 0; t < 4; t++) {
                      let n = 8 * t,
                        r = i.default.BigInt(0);
                      for (let t = 0; t < 8; t++)
                        (r = i.default.asUintN(64, i.default.leftShift(r, i.default.BigInt(8)))),
                          (r = i.default.asUintN(
                            64,
                            i.default.bitwiseOr(r, i.default.BigInt(e[n + t]))
                          ));
                      this.s[t] = i.default.asUintN(64, r);
                    }
                  }
                  roll() {
                    const e = i.default.asUintN(
                        64,
                        i.default.multiply(
                          a(
                            i.default.asUintN(
                              64,
                              i.default.multiply(this.s[1], i.default.BigInt(5))
                            ),
                            7
                          ),
                          i.default.BigInt(9)
                        )
                      ),
                      t = i.default.asUintN(
                        64,
                        i.default.leftShift(this.s[1], i.default.BigInt(17))
                      );
                    return (
                      (this.s[2] = i.default.asUintN(
                        64,
                        i.default.bitwiseXor(this.s[2], i.default.BigInt(this.s[0]))
                      )),
                      (this.s[3] = i.default.asUintN(
                        64,
                        i.default.bitwiseXor(this.s[3], i.default.BigInt(this.s[1]))
                      )),
                      (this.s[1] = i.default.asUintN(
                        64,
                        i.default.bitwiseXor(this.s[1], i.default.BigInt(this.s[2]))
                      )),
                      (this.s[0] = i.default.asUintN(
                        64,
                        i.default.bitwiseXor(this.s[0], i.default.BigInt(this.s[3]))
                      )),
                      (this.s[2] = i.default.asUintN(
                        64,
                        i.default.bitwiseXor(this.s[2], i.default.BigInt(t))
                      )),
                      (this.s[3] = i.default.asUintN(64, a(this.s[3], 45))),
                      e
                    );
                  }
                };
              };
            };
      },
      { package: '@ngraveio/bc-ur', file: 'node_modules/@ngraveio/bc-ur/dist/xoshiro.js' },
    ],
    [
      3020,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                !(function (e) {
                  var n,
                    r = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                    s = Math.ceil,
                    o = Math.floor,
                    i = '[BigNumber Error] ',
                    a = i + 'Number primitive has more than 15 significant digits: ',
                    c = 1e14,
                    u = 14,
                    l = 9007199254740991,
                    d = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
                    f = 1e7,
                    h = 1e9;
                  function p(e) {
                    var t = 0 | e;
                    return e > 0 || e === t ? t : t - 1;
                  }
                  function m(e) {
                    for (var t, n, r = 1, s = e.length, o = e[0] + ''; r < s; ) {
                      for (t = e[r++] + '', n = u - t.length; n--; t = '0' + t);
                      o += t;
                    }
                    for (s = o.length; 48 === o.charCodeAt(--s); );
                    return o.slice(0, s + 1 || 1);
                  }
                  function g(e, t) {
                    var n,
                      r,
                      s = e.c,
                      o = t.c,
                      i = e.s,
                      a = t.s,
                      c = e.e,
                      u = t.e;
                    if (!i || !a) return null;
                    if (((n = s && !s[0]), (r = o && !o[0]), n || r)) return n ? (r ? 0 : -a) : i;
                    if (i != a) return i;
                    if (((n = i < 0), (r = c == u), !s || !o)) return r ? 0 : !s ^ n ? 1 : -1;
                    if (!r) return (c > u) ^ n ? 1 : -1;
                    for (a = (c = s.length) < (u = o.length) ? c : u, i = 0; i < a; i++)
                      if (s[i] != o[i]) return (s[i] > o[i]) ^ n ? 1 : -1;
                    return c == u ? 0 : (c > u) ^ n ? 1 : -1;
                  }
                  function y(e, t, n, r) {
                    if (e < t || e > n || e !== o(e))
                      throw Error(
                        i +
                          (r || 'Argument') +
                          ('number' == typeof e
                            ? e < t || e > n
                              ? ' out of range: '
                              : ' not an integer: '
                            : ' not a primitive number: ') +
                          String(e)
                      );
                  }
                  function b(e) {
                    var t = e.c.length - 1;
                    return p(e.e / u) == t && e.c[t] % 2 != 0;
                  }
                  function w(e, t) {
                    return (
                      (e.length > 1 ? e.charAt(0) + '.' + e.slice(1) : e) + (t < 0 ? 'e' : 'e+') + t
                    );
                  }
                  function v(e, t, n) {
                    var r, s;
                    if (t < 0) {
                      for (s = n + '.'; ++t; s += n);
                      e = s + e;
                    } else if (++t > (r = e.length)) {
                      for (s = n, t -= r; --t; s += n);
                      e += s;
                    } else t < r && (e = e.slice(0, t) + '.' + e.slice(t));
                    return e;
                  }
                  (n = (function e(t) {
                    var n,
                      _,
                      E,
                      S,
                      x,
                      T,
                      I,
                      k,
                      A,
                      C,
                      B = (z.prototype = { constructor: z, toString: null, valueOf: null }),
                      O = new z(1),
                      j = 20,
                      R = 4,
                      P = -7,
                      N = 21,
                      L = -1e7,
                      M = 1e7,
                      D = !1,
                      F = 1,
                      H = 0,
                      U = {
                        prefix: '',
                        groupSize: 3,
                        secondaryGroupSize: 0,
                        groupSeparator: ',',
                        decimalSeparator: '.',
                        fractionGroupSize: 0,
                        fractionGroupSeparator: ' ',
                        suffix: '',
                      },
                      W = '0123456789abcdefghijklmnopqrstuvwxyz',
                      G = !0;
                    function z(e, t) {
                      var n,
                        s,
                        i,
                        c,
                        d,
                        f,
                        h,
                        p,
                        m = this;
                      if (!(m instanceof z)) return new z(e, t);
                      if (null == t) {
                        if (e && !0 === e._isBigNumber)
                          return (
                            (m.s = e.s),
                            void (!e.c || e.e > M
                              ? (m.c = m.e = null)
                              : e.e < L
                                ? (m.c = [(m.e = 0)])
                                : ((m.e = e.e), (m.c = e.c.slice())))
                          );
                        if ((f = 'number' == typeof e) && 0 * e == 0) {
                          if (((m.s = 1 / e < 0 ? ((e = -e), -1) : 1), e === ~~e)) {
                            for (c = 0, d = e; d >= 10; d /= 10, c++);
                            return void (c > M ? (m.c = m.e = null) : ((m.e = c), (m.c = [e])));
                          }
                          p = String(e);
                        } else {
                          if (!r.test((p = String(e)))) return E(m, p, f);
                          m.s = 45 == p.charCodeAt(0) ? ((p = p.slice(1)), -1) : 1;
                        }
                        (c = p.indexOf('.')) > -1 && (p = p.replace('.', '')),
                          (d = p.search(/e/i)) > 0
                            ? (c < 0 && (c = d), (c += +p.slice(d + 1)), (p = p.substring(0, d)))
                            : c < 0 && (c = p.length);
                      } else {
                        if ((y(t, 2, W.length, 'Base'), 10 == t && G))
                          return K((m = new z(e)), j + m.e + 1, R);
                        if (((p = String(e)), (f = 'number' == typeof e))) {
                          if (0 * e != 0) return E(m, p, f, t);
                          if (
                            ((m.s = 1 / e < 0 ? ((p = p.slice(1)), -1) : 1),
                            z.DEBUG && p.replace(/^0\.0*|\./, '').length > 15)
                          )
                            throw Error(a + e);
                        } else m.s = 45 === p.charCodeAt(0) ? ((p = p.slice(1)), -1) : 1;
                        for (n = W.slice(0, t), c = d = 0, h = p.length; d < h; d++)
                          if (n.indexOf((s = p.charAt(d))) < 0) {
                            if ('.' == s) {
                              if (d > c) {
                                c = h;
                                continue;
                              }
                            } else if (
                              !i &&
                              ((p == p.toUpperCase() && (p = p.toLowerCase())) ||
                                (p == p.toLowerCase() && (p = p.toUpperCase())))
                            ) {
                              (i = !0), (d = -1), (c = 0);
                              continue;
                            }
                            return E(m, String(e), f, t);
                          }
                        (f = !1),
                          (c = (p = _(p, t, 10, m.s)).indexOf('.')) > -1
                            ? (p = p.replace('.', ''))
                            : (c = p.length);
                      }
                      for (d = 0; 48 === p.charCodeAt(d); d++);
                      for (h = p.length; 48 === p.charCodeAt(--h); );
                      if ((p = p.slice(d, ++h))) {
                        if (((h -= d), f && z.DEBUG && h > 15 && (e > l || e !== o(e))))
                          throw Error(a + m.s * e);
                        if ((c = c - d - 1) > M) m.c = m.e = null;
                        else if (c < L) m.c = [(m.e = 0)];
                        else {
                          if (
                            ((m.e = c), (m.c = []), (d = (c + 1) % u), c < 0 && (d += u), d < h)
                          ) {
                            for (d && m.c.push(+p.slice(0, d)), h -= u; d < h; )
                              m.c.push(+p.slice(d, (d += u)));
                            d = u - (p = p.slice(d)).length;
                          } else d -= h;
                          for (; d--; p += '0');
                          m.c.push(+p);
                        }
                      } else m.c = [(m.e = 0)];
                    }
                    function q(e, t, n, r) {
                      var s, o, i, a, c;
                      if ((null == n ? (n = R) : y(n, 0, 8), !e.c)) return e.toString();
                      if (((s = e.c[0]), (i = e.e), null == t))
                        (c = m(e.c)),
                          (c = 1 == r || (2 == r && (i <= P || i >= N)) ? w(c, i) : v(c, i, '0'));
                      else if (
                        ((o = (e = K(new z(e), t, n)).e),
                        (a = (c = m(e.c)).length),
                        1 == r || (2 == r && (t <= o || o <= P)))
                      ) {
                        for (; a < t; c += '0', a++);
                        c = w(c, o);
                      } else if (((t -= i), (c = v(c, o, '0')), o + 1 > a)) {
                        if (--t > 0) for (c += '.'; t--; c += '0');
                      } else if ((t += o - a) > 0) for (o + 1 == a && (c += '.'); t--; c += '0');
                      return e.s < 0 && s ? '-' + c : c;
                    }
                    function $(e, t) {
                      for (var n, r, s = 1, o = new z(e[0]); s < e.length; s++)
                        (!(r = new z(e[s])).s || (n = g(o, r)) === t || (0 === n && o.s === t)) &&
                          (o = r);
                      return o;
                    }
                    function V(e, t, n) {
                      for (var r = 1, s = t.length; !t[--s]; t.pop());
                      for (s = t[0]; s >= 10; s /= 10, r++);
                      return (
                        (n = r + n * u - 1) > M
                          ? (e.c = e.e = null)
                          : n < L
                            ? (e.c = [(e.e = 0)])
                            : ((e.e = n), (e.c = t)),
                        e
                      );
                    }
                    function K(e, t, n, r) {
                      var i,
                        a,
                        l,
                        f,
                        h,
                        p,
                        m,
                        g = e.c,
                        y = d;
                      if (g) {
                        e: {
                          for (i = 1, f = g[0]; f >= 10; f /= 10, i++);
                          if ((a = t - i) < 0)
                            (a += u), (l = t), (h = g[(p = 0)]), (m = o((h / y[i - l - 1]) % 10));
                          else if ((p = s((a + 1) / u)) >= g.length) {
                            if (!r) break e;
                            for (; g.length <= p; g.push(0));
                            (h = m = 0), (i = 1), (l = (a %= u) - u + 1);
                          } else {
                            for (h = f = g[p], i = 1; f >= 10; f /= 10, i++);
                            m = (l = (a %= u) - u + i) < 0 ? 0 : o((h / y[i - l - 1]) % 10);
                          }
                          if (
                            ((r = r || t < 0 || null != g[p + 1] || (l < 0 ? h : h % y[i - l - 1])),
                            (r =
                              n < 4
                                ? (m || r) && (0 == n || n == (e.s < 0 ? 3 : 2))
                                : m > 5 ||
                                  (5 == m &&
                                    (4 == n ||
                                      r ||
                                      (6 == n &&
                                        (a > 0 ? (l > 0 ? h / y[i - l] : 0) : g[p - 1]) % 10 & 1) ||
                                      n == (e.s < 0 ? 8 : 7)))),
                            t < 1 || !g[0])
                          )
                            return (
                              (g.length = 0),
                              r
                                ? ((t -= e.e + 1), (g[0] = y[(u - (t % u)) % u]), (e.e = -t || 0))
                                : (g[0] = e.e = 0),
                              e
                            );
                          if (
                            (0 == a
                              ? ((g.length = p), (f = 1), p--)
                              : ((g.length = p + 1),
                                (f = y[u - a]),
                                (g[p] = l > 0 ? o((h / y[i - l]) % y[l]) * f : 0)),
                            r)
                          )
                            for (;;) {
                              if (0 == p) {
                                for (a = 1, l = g[0]; l >= 10; l /= 10, a++);
                                for (l = g[0] += f, f = 1; l >= 10; l /= 10, f++);
                                a != f && (e.e++, g[0] == c && (g[0] = 1));
                                break;
                              }
                              if (((g[p] += f), g[p] != c)) break;
                              (g[p--] = 0), (f = 1);
                            }
                          for (a = g.length; 0 === g[--a]; g.pop());
                        }
                        e.e > M ? (e.c = e.e = null) : e.e < L && (e.c = [(e.e = 0)]);
                      }
                      return e;
                    }
                    function X(e) {
                      var t,
                        n = e.e;
                      return null === n
                        ? e.toString()
                        : ((t = m(e.c)),
                          (t = n <= P || n >= N ? w(t, n) : v(t, n, '0')),
                          e.s < 0 ? '-' + t : t);
                    }
                    return (
                      (z.clone = e),
                      (z.ROUND_UP = 0),
                      (z.ROUND_DOWN = 1),
                      (z.ROUND_CEIL = 2),
                      (z.ROUND_FLOOR = 3),
                      (z.ROUND_HALF_UP = 4),
                      (z.ROUND_HALF_DOWN = 5),
                      (z.ROUND_HALF_EVEN = 6),
                      (z.ROUND_HALF_CEIL = 7),
                      (z.ROUND_HALF_FLOOR = 8),
                      (z.EUCLID = 9),
                      (z.config = z.set =
                        function (e) {
                          var t, n;
                          if (null != e) {
                            if ('object' != typeof e) throw Error(i + 'Object expected: ' + e);
                            if (
                              (e.hasOwnProperty((t = 'DECIMAL_PLACES')) &&
                                (y((n = e[t]), 0, h, t), (j = n)),
                              e.hasOwnProperty((t = 'ROUNDING_MODE')) &&
                                (y((n = e[t]), 0, 8, t), (R = n)),
                              e.hasOwnProperty((t = 'EXPONENTIAL_AT')) &&
                                ((n = e[t]) && n.pop
                                  ? (y(n[0], -h, 0, t), y(n[1], 0, h, t), (P = n[0]), (N = n[1]))
                                  : (y(n, -h, h, t), (P = -(N = n < 0 ? -n : n)))),
                              e.hasOwnProperty((t = 'RANGE')))
                            )
                              if ((n = e[t]) && n.pop)
                                y(n[0], -h, -1, t), y(n[1], 1, h, t), (L = n[0]), (M = n[1]);
                              else {
                                if ((y(n, -h, h, t), !n))
                                  throw Error(i + t + ' cannot be zero: ' + n);
                                L = -(M = n < 0 ? -n : n);
                              }
                            if (e.hasOwnProperty((t = 'CRYPTO'))) {
                              if ((n = e[t]) !== !!n)
                                throw Error(i + t + ' not true or false: ' + n);
                              if (n) {
                                if (
                                  'undefined' == typeof crypto ||
                                  !crypto ||
                                  (!crypto.getRandomValues && !crypto.randomBytes)
                                )
                                  throw ((D = !n), Error(i + 'crypto unavailable'));
                                D = n;
                              } else D = n;
                            }
                            if (
                              (e.hasOwnProperty((t = 'MODULO_MODE')) &&
                                (y((n = e[t]), 0, 9, t), (F = n)),
                              e.hasOwnProperty((t = 'POW_PRECISION')) &&
                                (y((n = e[t]), 0, h, t), (H = n)),
                              e.hasOwnProperty((t = 'FORMAT')))
                            ) {
                              if ('object' != typeof (n = e[t]))
                                throw Error(i + t + ' not an object: ' + n);
                              U = n;
                            }
                            if (e.hasOwnProperty((t = 'ALPHABET'))) {
                              if ('string' != typeof (n = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(n))
                                throw Error(i + t + ' invalid: ' + n);
                              (G = '0123456789' == n.slice(0, 10)), (W = n);
                            }
                          }
                          return {
                            DECIMAL_PLACES: j,
                            ROUNDING_MODE: R,
                            EXPONENTIAL_AT: [P, N],
                            RANGE: [L, M],
                            CRYPTO: D,
                            MODULO_MODE: F,
                            POW_PRECISION: H,
                            FORMAT: U,
                            ALPHABET: W,
                          };
                        }),
                      (z.isBigNumber = function (e) {
                        if (!e || !0 !== e._isBigNumber) return !1;
                        if (!z.DEBUG) return !0;
                        var t,
                          n,
                          r = e.c,
                          s = e.e,
                          a = e.s;
                        e: if ('[object Array]' == {}.toString.call(r)) {
                          if ((1 === a || -1 === a) && s >= -h && s <= h && s === o(s)) {
                            if (0 === r[0]) {
                              if (0 === s && 1 === r.length) return !0;
                              break e;
                            }
                            if (((t = (s + 1) % u) < 1 && (t += u), String(r[0]).length == t)) {
                              for (t = 0; t < r.length; t++)
                                if ((n = r[t]) < 0 || n >= c || n !== o(n)) break e;
                              if (0 !== n) return !0;
                            }
                          }
                        } else if (null === r && null === s && (null === a || 1 === a || -1 === a))
                          return !0;
                        throw Error(i + 'Invalid BigNumber: ' + e);
                      }),
                      (z.maximum = z.max =
                        function () {
                          return $(arguments, -1);
                        }),
                      (z.minimum = z.min =
                        function () {
                          return $(arguments, 1);
                        }),
                      (z.random =
                        ((S = 9007199254740992),
                        (x =
                          (Math.random() * S) & 2097151
                            ? function () {
                                return o(Math.random() * S);
                              }
                            : function () {
                                return (
                                  8388608 * ((1073741824 * Math.random()) | 0) +
                                  ((8388608 * Math.random()) | 0)
                                );
                              }),
                        function (e) {
                          var t,
                            n,
                            r,
                            a,
                            c,
                            l = 0,
                            f = [],
                            p = new z(O);
                          if ((null == e ? (e = j) : y(e, 0, h), (a = s(e / u)), D))
                            if (crypto.getRandomValues) {
                              for (t = crypto.getRandomValues(new Uint32Array((a *= 2))); l < a; )
                                (c = 131072 * t[l] + (t[l + 1] >>> 11)) >= 9e15
                                  ? ((n = crypto.getRandomValues(new Uint32Array(2))),
                                    (t[l] = n[0]),
                                    (t[l + 1] = n[1]))
                                  : (f.push(c % 1e14), (l += 2));
                              l = a / 2;
                            } else {
                              if (!crypto.randomBytes)
                                throw ((D = !1), Error(i + 'crypto unavailable'));
                              for (t = crypto.randomBytes((a *= 7)); l < a; )
                                (c =
                                  281474976710656 * (31 & t[l]) +
                                  1099511627776 * t[l + 1] +
                                  4294967296 * t[l + 2] +
                                  16777216 * t[l + 3] +
                                  (t[l + 4] << 16) +
                                  (t[l + 5] << 8) +
                                  t[l + 6]) >= 9e15
                                  ? crypto.randomBytes(7).copy(t, l)
                                  : (f.push(c % 1e14), (l += 7));
                              l = a / 7;
                            }
                          if (!D) for (; l < a; ) (c = x()) < 9e15 && (f[l++] = c % 1e14);
                          for (
                            a = f[--l], e %= u, a && e && ((c = d[u - e]), (f[l] = o(a / c) * c));
                            0 === f[l];
                            f.pop(), l--
                          );
                          if (l < 0) f = [(r = 0)];
                          else {
                            for (r = -1; 0 === f[0]; f.splice(0, 1), r -= u);
                            for (l = 1, c = f[0]; c >= 10; c /= 10, l++);
                            l < u && (r -= u - l);
                          }
                          return (p.e = r), (p.c = f), p;
                        })),
                      (z.sum = function () {
                        for (var e = 1, t = arguments, n = new z(t[0]); e < t.length; )
                          n = n.plus(t[e++]);
                        return n;
                      }),
                      (_ = (function () {
                        var e = '0123456789';
                        function t(e, t, n, r) {
                          for (var s, o, i = [0], a = 0, c = e.length; a < c; ) {
                            for (o = i.length; o--; i[o] *= t);
                            for (i[0] += r.indexOf(e.charAt(a++)), s = 0; s < i.length; s++)
                              i[s] > n - 1 &&
                                (null == i[s + 1] && (i[s + 1] = 0),
                                (i[s + 1] += (i[s] / n) | 0),
                                (i[s] %= n));
                          }
                          return i.reverse();
                        }
                        return function (r, s, o, i, a) {
                          var c,
                            u,
                            l,
                            d,
                            f,
                            h,
                            p,
                            g,
                            y = r.indexOf('.'),
                            b = j,
                            w = R;
                          for (
                            y >= 0 &&
                              ((d = H),
                              (H = 0),
                              (r = r.replace('.', '')),
                              (h = (g = new z(s)).pow(r.length - y)),
                              (H = d),
                              (g.c = t(v(m(h.c), h.e, '0'), 10, o, e)),
                              (g.e = g.c.length)),
                              l = d = (p = t(r, s, o, a ? ((c = W), e) : ((c = e), W))).length;
                            0 == p[--d];
                            p.pop()
                          );
                          if (!p[0]) return c.charAt(0);
                          if (
                            (y < 0
                              ? --l
                              : ((h.c = p),
                                (h.e = l),
                                (h.s = i),
                                (p = (h = n(h, g, b, w, o)).c),
                                (f = h.r),
                                (l = h.e)),
                            (y = p[(u = l + b + 1)]),
                            (d = o / 2),
                            (f = f || u < 0 || null != p[u + 1]),
                            (f =
                              w < 4
                                ? (null != y || f) && (0 == w || w == (h.s < 0 ? 3 : 2))
                                : y > d ||
                                  (y == d &&
                                    (4 == w ||
                                      f ||
                                      (6 == w && 1 & p[u - 1]) ||
                                      w == (h.s < 0 ? 8 : 7)))),
                            u < 1 || !p[0])
                          )
                            r = f ? v(c.charAt(1), -b, c.charAt(0)) : c.charAt(0);
                          else {
                            if (((p.length = u), f))
                              for (--o; ++p[--u] > o; ) (p[u] = 0), u || (++l, (p = [1].concat(p)));
                            for (d = p.length; !p[--d]; );
                            for (y = 0, r = ''; y <= d; r += c.charAt(p[y++]));
                            r = v(r, l, c.charAt(0));
                          }
                          return r;
                        };
                      })()),
                      (n = (function () {
                        function e(e, t, n) {
                          var r,
                            s,
                            o,
                            i,
                            a = 0,
                            c = e.length,
                            u = t % f,
                            l = (t / f) | 0;
                          for (e = e.slice(); c--; )
                            (a =
                              (((s =
                                u * (o = e[c] % f) +
                                ((r = l * o + (i = (e[c] / f) | 0) * u) % f) * f +
                                a) /
                                n) |
                                0) +
                              ((r / f) | 0) +
                              l * i),
                              (e[c] = s % n);
                          return a && (e = [a].concat(e)), e;
                        }
                        function t(e, t, n, r) {
                          var s, o;
                          if (n != r) o = n > r ? 1 : -1;
                          else
                            for (s = o = 0; s < n; s++)
                              if (e[s] != t[s]) {
                                o = e[s] > t[s] ? 1 : -1;
                                break;
                              }
                          return o;
                        }
                        function n(e, t, n, r) {
                          for (var s = 0; n--; )
                            (e[n] -= s), (s = e[n] < t[n] ? 1 : 0), (e[n] = s * r + e[n] - t[n]);
                          for (; !e[0] && e.length > 1; e.splice(0, 1));
                        }
                        return function (r, s, i, a, l) {
                          var d,
                            f,
                            h,
                            m,
                            g,
                            y,
                            b,
                            w,
                            v,
                            _,
                            E,
                            S,
                            x,
                            T,
                            I,
                            k,
                            A,
                            C = r.s == s.s ? 1 : -1,
                            B = r.c,
                            O = s.c;
                          if (!(B && B[0] && O && O[0]))
                            return new z(
                              r.s && s.s && (B ? !O || B[0] != O[0] : O)
                                ? (B && 0 == B[0]) || !O
                                  ? 0 * C
                                  : C / 0
                                : NaN
                            );
                          for (
                            v = (w = new z(C)).c = [],
                              C = i + (f = r.e - s.e) + 1,
                              l || ((l = c), (f = p(r.e / u) - p(s.e / u)), (C = (C / u) | 0)),
                              h = 0;
                            O[h] == (B[h] || 0);
                            h++
                          );
                          if ((O[h] > (B[h] || 0) && f--, C < 0)) v.push(1), (m = !0);
                          else {
                            for (
                              T = B.length,
                                k = O.length,
                                h = 0,
                                C += 2,
                                (g = o(l / (O[0] + 1))) > 1 &&
                                  ((O = e(O, g, l)),
                                  (B = e(B, g, l)),
                                  (k = O.length),
                                  (T = B.length)),
                                x = k,
                                E = (_ = B.slice(0, k)).length;
                              E < k;
                              _[E++] = 0
                            );
                            (A = O.slice()), (A = [0].concat(A)), (I = O[0]), O[1] >= l / 2 && I++;
                            do {
                              if (((g = 0), (d = t(O, _, k, E)) < 0)) {
                                if (
                                  ((S = _[0]),
                                  k != E && (S = S * l + (_[1] || 0)),
                                  (g = o(S / I)) > 1)
                                )
                                  for (
                                    g >= l && (g = l - 1),
                                      b = (y = e(O, g, l)).length,
                                      E = _.length;
                                    1 == t(y, _, b, E);

                                  )
                                    g--, n(y, k < b ? A : O, b, l), (b = y.length), (d = 1);
                                else 0 == g && (d = g = 1), (b = (y = O.slice()).length);
                                if (
                                  (b < E && (y = [0].concat(y)),
                                  n(_, y, E, l),
                                  (E = _.length),
                                  -1 == d)
                                )
                                  for (; t(O, _, k, E) < 1; )
                                    g++, n(_, k < E ? A : O, E, l), (E = _.length);
                              } else 0 === d && (g++, (_ = [0]));
                              (v[h++] = g), _[0] ? (_[E++] = B[x] || 0) : ((_ = [B[x]]), (E = 1));
                            } while ((x++ < T || null != _[0]) && C--);
                            (m = null != _[0]), v[0] || v.splice(0, 1);
                          }
                          if (l == c) {
                            for (h = 1, C = v[0]; C >= 10; C /= 10, h++);
                            K(w, i + (w.e = h + f * u - 1) + 1, a, m);
                          } else (w.e = f), (w.r = +m);
                          return w;
                        };
                      })()),
                      (T = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
                      (I = /^([^.]+)\.$/),
                      (k = /^\.([^.]+)$/),
                      (A = /^-?(Infinity|NaN)$/),
                      (C = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
                      (E = function (e, t, n, r) {
                        var s,
                          o = n ? t : t.replace(C, '');
                        if (A.test(o)) e.s = isNaN(o) ? null : o < 0 ? -1 : 1;
                        else {
                          if (
                            !n &&
                            ((o = o.replace(T, function (e, t, n) {
                              return (
                                (s = 'x' == (n = n.toLowerCase()) ? 16 : 'b' == n ? 2 : 8),
                                r && r != s ? e : t
                              );
                            })),
                            r && ((s = r), (o = o.replace(I, '$1').replace(k, '0.$1'))),
                            t != o)
                          )
                            return new z(o, s);
                          if (z.DEBUG)
                            throw Error(i + 'Not a' + (r ? ' base ' + r : '') + ' number: ' + t);
                          e.s = null;
                        }
                        e.c = e.e = null;
                      }),
                      (B.absoluteValue = B.abs =
                        function () {
                          var e = new z(this);
                          return e.s < 0 && (e.s = 1), e;
                        }),
                      (B.comparedTo = function (e, t) {
                        return g(this, new z(e, t));
                      }),
                      (B.decimalPlaces = B.dp =
                        function (e, t) {
                          var n,
                            r,
                            s,
                            o = this;
                          if (null != e)
                            return (
                              y(e, 0, h),
                              null == t ? (t = R) : y(t, 0, 8),
                              K(new z(o), e + o.e + 1, t)
                            );
                          if (!(n = o.c)) return null;
                          if (((r = ((s = n.length - 1) - p(this.e / u)) * u), (s = n[s])))
                            for (; s % 10 == 0; s /= 10, r--);
                          return r < 0 && (r = 0), r;
                        }),
                      (B.dividedBy = B.div =
                        function (e, t) {
                          return n(this, new z(e, t), j, R);
                        }),
                      (B.dividedToIntegerBy = B.idiv =
                        function (e, t) {
                          return n(this, new z(e, t), 0, 1);
                        }),
                      (B.exponentiatedBy = B.pow =
                        function (e, t) {
                          var n,
                            r,
                            a,
                            c,
                            l,
                            d,
                            f,
                            h,
                            p = this;
                          if ((e = new z(e)).c && !e.isInteger())
                            throw Error(i + 'Exponent not an integer: ' + X(e));
                          if (
                            (null != t && (t = new z(t)),
                            (l = e.e > 14),
                            !p.c ||
                              !p.c[0] ||
                              (1 == p.c[0] && !p.e && 1 == p.c.length) ||
                              !e.c ||
                              !e.c[0])
                          )
                            return (
                              (h = new z(Math.pow(+X(p), l ? e.s * (2 - b(e)) : +X(e)))),
                              t ? h.mod(t) : h
                            );
                          if (((d = e.s < 0), t)) {
                            if (t.c ? !t.c[0] : !t.s) return new z(NaN);
                            (r = !d && p.isInteger() && t.isInteger()) && (p = p.mod(t));
                          } else {
                            if (
                              e.e > 9 &&
                              (p.e > 0 ||
                                p.e < -1 ||
                                (0 == p.e
                                  ? p.c[0] > 1 || (l && p.c[1] >= 24e7)
                                  : p.c[0] < 8e13 || (l && p.c[0] <= 9999975e7)))
                            )
                              return (
                                (c = p.s < 0 && b(e) ? -0 : 0),
                                p.e > -1 && (c = 1 / c),
                                new z(d ? 1 / c : c)
                              );
                            H && (c = s(H / u + 2));
                          }
                          for (
                            l
                              ? ((n = new z(0.5)), d && (e.s = 1), (f = b(e)))
                              : (f = (a = Math.abs(+X(e))) % 2),
                              h = new z(O);
                            ;

                          ) {
                            if (f) {
                              if (!(h = h.times(p)).c) break;
                              c ? h.c.length > c && (h.c.length = c) : r && (h = h.mod(t));
                            }
                            if (a) {
                              if (0 === (a = o(a / 2))) break;
                              f = a % 2;
                            } else if ((K((e = e.times(n)), e.e + 1, 1), e.e > 14)) f = b(e);
                            else {
                              if (0 === (a = +X(e))) break;
                              f = a % 2;
                            }
                            (p = p.times(p)),
                              c ? p.c && p.c.length > c && (p.c.length = c) : r && (p = p.mod(t));
                          }
                          return r
                            ? h
                            : (d && (h = O.div(h)), t ? h.mod(t) : c ? K(h, H, R, undefined) : h);
                        }),
                      (B.integerValue = function (e) {
                        var t = new z(this);
                        return null == e ? (e = R) : y(e, 0, 8), K(t, t.e + 1, e);
                      }),
                      (B.isEqualTo = B.eq =
                        function (e, t) {
                          return 0 === g(this, new z(e, t));
                        }),
                      (B.isFinite = function () {
                        return !!this.c;
                      }),
                      (B.isGreaterThan = B.gt =
                        function (e, t) {
                          return g(this, new z(e, t)) > 0;
                        }),
                      (B.isGreaterThanOrEqualTo = B.gte =
                        function (e, t) {
                          return 1 === (t = g(this, new z(e, t))) || 0 === t;
                        }),
                      (B.isInteger = function () {
                        return !!this.c && p(this.e / u) > this.c.length - 2;
                      }),
                      (B.isLessThan = B.lt =
                        function (e, t) {
                          return g(this, new z(e, t)) < 0;
                        }),
                      (B.isLessThanOrEqualTo = B.lte =
                        function (e, t) {
                          return -1 === (t = g(this, new z(e, t))) || 0 === t;
                        }),
                      (B.isNaN = function () {
                        return !this.s;
                      }),
                      (B.isNegative = function () {
                        return this.s < 0;
                      }),
                      (B.isPositive = function () {
                        return this.s > 0;
                      }),
                      (B.isZero = function () {
                        return !!this.c && 0 == this.c[0];
                      }),
                      (B.minus = function (e, t) {
                        var n,
                          r,
                          s,
                          o,
                          i = this,
                          a = i.s;
                        if (((t = (e = new z(e, t)).s), !a || !t)) return new z(NaN);
                        if (a != t) return (e.s = -t), i.plus(e);
                        var l = i.e / u,
                          d = e.e / u,
                          f = i.c,
                          h = e.c;
                        if (!l || !d) {
                          if (!f || !h) return f ? ((e.s = -t), e) : new z(h ? i : NaN);
                          if (!f[0] || !h[0])
                            return h[0] ? ((e.s = -t), e) : new z(f[0] ? i : 3 == R ? -0 : 0);
                        }
                        if (((l = p(l)), (d = p(d)), (f = f.slice()), (a = l - d))) {
                          for (
                            (o = a < 0) ? ((a = -a), (s = f)) : ((d = l), (s = h)),
                              s.reverse(),
                              t = a;
                            t--;
                            s.push(0)
                          );
                          s.reverse();
                        } else
                          for (
                            r = (o = (a = f.length) < (t = h.length)) ? a : t, a = t = 0;
                            t < r;
                            t++
                          )
                            if (f[t] != h[t]) {
                              o = f[t] < h[t];
                              break;
                            }
                        if (
                          (o && ((s = f), (f = h), (h = s), (e.s = -e.s)),
                          (t = (r = h.length) - (n = f.length)) > 0)
                        )
                          for (; t--; f[n++] = 0);
                        for (t = c - 1; r > a; ) {
                          if (f[--r] < h[r]) {
                            for (n = r; n && !f[--n]; f[n] = t);
                            --f[n], (f[r] += c);
                          }
                          f[r] -= h[r];
                        }
                        for (; 0 == f[0]; f.splice(0, 1), --d);
                        return f[0]
                          ? V(e, f, d)
                          : ((e.s = 3 == R ? -1 : 1), (e.c = [(e.e = 0)]), e);
                      }),
                      (B.modulo = B.mod =
                        function (e, t) {
                          var r,
                            s,
                            o = this;
                          return (
                            (e = new z(e, t)),
                            !o.c || !e.s || (e.c && !e.c[0])
                              ? new z(NaN)
                              : !e.c || (o.c && !o.c[0])
                                ? new z(o)
                                : (9 == F
                                    ? ((s = e.s),
                                      (e.s = 1),
                                      (r = n(o, e, 0, 3)),
                                      (e.s = s),
                                      (r.s *= s))
                                    : (r = n(o, e, 0, F)),
                                  (e = o.minus(r.times(e))).c[0] || 1 != F || (e.s = o.s),
                                  e)
                          );
                        }),
                      (B.multipliedBy = B.times =
                        function (e, t) {
                          var n,
                            r,
                            s,
                            o,
                            i,
                            a,
                            l,
                            d,
                            h,
                            m,
                            g,
                            y,
                            b,
                            w,
                            v,
                            _ = this,
                            E = _.c,
                            S = (e = new z(e, t)).c;
                          if (!(E && S && E[0] && S[0]))
                            return (
                              !_.s || !e.s || (E && !E[0] && !S) || (S && !S[0] && !E)
                                ? (e.c = e.e = e.s = null)
                                : ((e.s *= _.s),
                                  E && S ? ((e.c = [0]), (e.e = 0)) : (e.c = e.e = null)),
                              e
                            );
                          for (
                            r = p(_.e / u) + p(e.e / u),
                              e.s *= _.s,
                              (l = E.length) < (m = S.length) &&
                                ((b = E), (E = S), (S = b), (s = l), (l = m), (m = s)),
                              s = l + m,
                              b = [];
                            s--;
                            b.push(0)
                          );
                          for (w = c, v = f, s = m; --s >= 0; ) {
                            for (n = 0, g = S[s] % v, y = (S[s] / v) | 0, o = s + (i = l); o > s; )
                              (n =
                                (((d =
                                  g * (d = E[--i] % v) +
                                  ((a = y * d + (h = (E[i] / v) | 0) * g) % v) * v +
                                  b[o] +
                                  n) /
                                  w) |
                                  0) +
                                ((a / v) | 0) +
                                y * h),
                                (b[o--] = d % w);
                            b[o] = n;
                          }
                          return n ? ++r : b.splice(0, 1), V(e, b, r);
                        }),
                      (B.negated = function () {
                        var e = new z(this);
                        return (e.s = -e.s || null), e;
                      }),
                      (B.plus = function (e, t) {
                        var n,
                          r = this,
                          s = r.s;
                        if (((t = (e = new z(e, t)).s), !s || !t)) return new z(NaN);
                        if (s != t) return (e.s = -t), r.minus(e);
                        var o = r.e / u,
                          i = e.e / u,
                          a = r.c,
                          l = e.c;
                        if (!o || !i) {
                          if (!a || !l) return new z(s / 0);
                          if (!a[0] || !l[0]) return l[0] ? e : new z(a[0] ? r : 0 * s);
                        }
                        if (((o = p(o)), (i = p(i)), (a = a.slice()), (s = o - i))) {
                          for (
                            s > 0 ? ((i = o), (n = l)) : ((s = -s), (n = a)), n.reverse();
                            s--;
                            n.push(0)
                          );
                          n.reverse();
                        }
                        for (
                          (s = a.length) - (t = l.length) < 0 &&
                            ((n = l), (l = a), (a = n), (t = s)),
                            s = 0;
                          t;

                        )
                          (s = ((a[--t] = a[t] + l[t] + s) / c) | 0),
                            (a[t] = c === a[t] ? 0 : a[t] % c);
                        return s && ((a = [s].concat(a)), ++i), V(e, a, i);
                      }),
                      (B.precision = B.sd =
                        function (e, t) {
                          var n,
                            r,
                            s,
                            o = this;
                          if (null != e && e !== !!e)
                            return y(e, 1, h), null == t ? (t = R) : y(t, 0, 8), K(new z(o), e, t);
                          if (!(n = o.c)) return null;
                          if (((r = (s = n.length - 1) * u + 1), (s = n[s]))) {
                            for (; s % 10 == 0; s /= 10, r--);
                            for (s = n[0]; s >= 10; s /= 10, r++);
                          }
                          return e && o.e + 1 > r && (r = o.e + 1), r;
                        }),
                      (B.shiftedBy = function (e) {
                        return y(e, -9007199254740991, l), this.times('1e' + e);
                      }),
                      (B.squareRoot = B.sqrt =
                        function () {
                          var e,
                            t,
                            r,
                            s,
                            o,
                            i = this,
                            a = i.c,
                            c = i.s,
                            u = i.e,
                            l = j + 4,
                            d = new z('0.5');
                          if (1 !== c || !a || !a[0])
                            return new z(!c || (c < 0 && (!a || a[0])) ? NaN : a ? i : 1 / 0);
                          if (
                            (0 == (c = Math.sqrt(+X(i))) || c == 1 / 0
                              ? (((t = m(a)).length + u) % 2 == 0 && (t += '0'),
                                (c = Math.sqrt(+t)),
                                (u = p((u + 1) / 2) - (u < 0 || u % 2)),
                                (r = new z(
                                  (t =
                                    c == 1 / 0
                                      ? '5e' + u
                                      : (t = c.toExponential()).slice(0, t.indexOf('e') + 1) + u)
                                )))
                              : (r = new z(c + '')),
                            r.c[0])
                          )
                            for ((c = (u = r.e) + l) < 3 && (c = 0); ; )
                              if (
                                ((o = r),
                                (r = d.times(o.plus(n(i, o, l, 1)))),
                                m(o.c).slice(0, c) === (t = m(r.c)).slice(0, c))
                              ) {
                                if (
                                  (r.e < u && --c,
                                  '9999' != (t = t.slice(c - 3, c + 1)) && (s || '4999' != t))
                                ) {
                                  (+t && (+t.slice(1) || '5' != t.charAt(0))) ||
                                    (K(r, r.e + j + 2, 1), (e = !r.times(r).eq(i)));
                                  break;
                                }
                                if (!s && (K(o, o.e + j + 2, 0), o.times(o).eq(i))) {
                                  r = o;
                                  break;
                                }
                                (l += 4), (c += 4), (s = 1);
                              }
                          return K(r, r.e + j + 1, R, e);
                        }),
                      (B.toExponential = function (e, t) {
                        return null != e && (y(e, 0, h), e++), q(this, e, t, 1);
                      }),
                      (B.toFixed = function (e, t) {
                        return null != e && (y(e, 0, h), (e = e + this.e + 1)), q(this, e, t);
                      }),
                      (B.toFormat = function (e, t, n) {
                        var r,
                          s = this;
                        if (null == n)
                          null != e && t && 'object' == typeof t
                            ? ((n = t), (t = null))
                            : e && 'object' == typeof e
                              ? ((n = e), (e = t = null))
                              : (n = U);
                        else if ('object' != typeof n)
                          throw Error(i + 'Argument not an object: ' + n);
                        if (((r = s.toFixed(e, t)), s.c)) {
                          var o,
                            a = r.split('.'),
                            c = +n.groupSize,
                            u = +n.secondaryGroupSize,
                            l = n.groupSeparator || '',
                            d = a[0],
                            f = a[1],
                            h = s.s < 0,
                            p = h ? d.slice(1) : d,
                            m = p.length;
                          if ((u && ((o = c), (c = u), (u = o), (m -= o)), c > 0 && m > 0)) {
                            for (o = m % c || c, d = p.substr(0, o); o < m; o += c)
                              d += l + p.substr(o, c);
                            u > 0 && (d += l + p.slice(o)), h && (d = '-' + d);
                          }
                          r = f
                            ? d +
                              (n.decimalSeparator || '') +
                              ((u = +n.fractionGroupSize)
                                ? f.replace(
                                    new RegExp('\\d{' + u + '}\\B', 'g'),
                                    '$&' + (n.fractionGroupSeparator || '')
                                  )
                                : f)
                            : d;
                        }
                        return (n.prefix || '') + r + (n.suffix || '');
                      }),
                      (B.toFraction = function (e) {
                        var t,
                          r,
                          s,
                          o,
                          a,
                          c,
                          l,
                          f,
                          h,
                          p,
                          g,
                          y,
                          b = this,
                          w = b.c;
                        if (
                          null != e &&
                          ((!(l = new z(e)).isInteger() && (l.c || 1 !== l.s)) || l.lt(O))
                        )
                          throw Error(
                            i +
                              'Argument ' +
                              (l.isInteger() ? 'out of range: ' : 'not an integer: ') +
                              X(l)
                          );
                        if (!w) return new z(b);
                        for (
                          t = new z(O),
                            h = r = new z(O),
                            s = f = new z(O),
                            y = m(w),
                            a = t.e = y.length - b.e - 1,
                            t.c[0] = d[(c = a % u) < 0 ? u + c : c],
                            e = !e || l.comparedTo(t) > 0 ? (a > 0 ? t : h) : l,
                            c = M,
                            M = 1 / 0,
                            l = new z(y),
                            f.c[0] = 0;
                          (p = n(l, t, 0, 1)), 1 != (o = r.plus(p.times(s))).comparedTo(e);

                        )
                          (r = s),
                            (s = o),
                            (h = f.plus(p.times((o = h)))),
                            (f = o),
                            (t = l.minus(p.times((o = t)))),
                            (l = o);
                        return (
                          (o = n(e.minus(r), s, 0, 1)),
                          (f = f.plus(o.times(h))),
                          (r = r.plus(o.times(s))),
                          (f.s = h.s = b.s),
                          (g =
                            n(h, s, (a *= 2), R)
                              .minus(b)
                              .abs()
                              .comparedTo(n(f, r, a, R).minus(b).abs()) < 1
                              ? [h, s]
                              : [f, r]),
                          (M = c),
                          g
                        );
                      }),
                      (B.toNumber = function () {
                        return +X(this);
                      }),
                      (B.toPrecision = function (e, t) {
                        return null != e && y(e, 1, h), q(this, e, t, 2);
                      }),
                      (B.toString = function (e) {
                        var t,
                          n = this,
                          r = n.s,
                          s = n.e;
                        return (
                          null === s
                            ? r
                              ? ((t = 'Infinity'), r < 0 && (t = '-' + t))
                              : (t = 'NaN')
                            : (null == e
                                ? (t = s <= P || s >= N ? w(m(n.c), s) : v(m(n.c), s, '0'))
                                : 10 === e && G
                                  ? (t = v(m((n = K(new z(n), j + s + 1, R)).c), n.e, '0'))
                                  : (y(e, 2, W.length, 'Base'),
                                    (t = _(v(m(n.c), s, '0'), 10, e, r, !0))),
                              r < 0 && n.c[0] && (t = '-' + t)),
                          t
                        );
                      }),
                      (B.valueOf = B.toJSON =
                        function () {
                          return X(this);
                        }),
                      (B._isBigNumber = !0),
                      null != t && z.set(t),
                      z
                    );
                  })()),
                    (n.default = n.BigNumber = n),
                    'function' == typeof define && define.amd
                      ? define(function () {
                          return n;
                        })
                      : void 0 !== t && t.exports
                        ? (t.exports = n)
                        : (e || (e = 'undefined' != typeof self && self ? self : window),
                          (e.BigNumber = n));
                })(this);
              };
            };
      },
      {
        package: '@ngraveio/bc-ur>bignumber.js',
        file: 'node_modules/@ngraveio/bc-ur/node_modules/bignumber.js/bignumber.js',
      },
    ],
    [
      3021,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  if (!Number.isSafeInteger(e) || e < 0)
                    throw new Error(`positive integer expected, not ${e}`);
                }
                function s(e) {
                  if ('boolean' != typeof e) throw new Error(`boolean expected, not ${e}`);
                }
                function o(e) {
                  return (
                    e instanceof Uint8Array ||
                    (null != e && 'object' == typeof e && 'Uint8Array' === e.constructor.name)
                  );
                }
                function i(e, ...t) {
                  if (!o(e)) throw new Error('Uint8Array expected');
                  if (t.length > 0 && !t.includes(e.length))
                    throw new Error(
                      `Uint8Array expected of length ${t}, not of length=${e.length}`
                    );
                }
                function a(e) {
                  if ('function' != typeof e || 'function' != typeof e.create)
                    throw new Error('hash must be wrapped by utils.wrapConstructor');
                  r(e.outputLen), r(e.blockLen);
                }
                function c(e, t = !0) {
                  if (e.destroyed) throw new Error('Hash instance has been destroyed');
                  if (t && e.finished) throw new Error('Hash#digest() has already been called');
                }
                function u(e, t) {
                  i(e);
                  const n = t.outputLen;
                  if (e.length < n)
                    throw new Error(`digestInto() expects output buffer of length at least ${n}`);
                }
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.output = n.exists = n.hash = n.bytes = n.bool = n.number = n.isBytes = void 0),
                  (n.number = r),
                  (n.bool = s),
                  (n.isBytes = o),
                  (n.bytes = i),
                  (n.hash = a),
                  (n.exists = c),
                  (n.output = u);
                const l = { number: r, bool: s, bytes: i, hash: a, exists: c, output: u };
                n.default = l;
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/_assert.js',
      },
    ],
    [
      3022,
      { './_assert.js': 3021, './utils.js': 3025 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.polyval = n.ghash = n._toGHASHKey = void 0);
                const r = e('./utils.js'),
                  s = e('./_assert.js'),
                  o = 16,
                  i = new Uint8Array(16),
                  a = (0, r.u32)(i),
                  c = e =>
                    (((e >>> 0) & 255) << 24) |
                    (((e >>> 8) & 255) << 16) |
                    (((e >>> 16) & 255) << 8) |
                    ((e >>> 24) & 255);
                function u(e) {
                  e.reverse();
                  const t = 1 & e[15];
                  let n = 0;
                  for (let t = 0; t < e.length; t++) {
                    const r = e[t];
                    (e[t] = (r >>> 1) | n), (n = (1 & r) << 7);
                  }
                  return (e[0] ^= 225 & -t), e;
                }
                n._toGHASHKey = u;
                class l {
                  constructor(e, t) {
                    (this.blockLen = o),
                      (this.outputLen = o),
                      (this.s0 = 0),
                      (this.s1 = 0),
                      (this.s2 = 0),
                      (this.s3 = 0),
                      (this.finished = !1),
                      (e = (0, r.toBytes)(e)),
                      (0, s.bytes)(e, 16);
                    const n = (0, r.createView)(e);
                    let i = n.getUint32(0, !1),
                      a = n.getUint32(4, !1),
                      u = n.getUint32(8, !1),
                      l = n.getUint32(12, !1);
                    const d = [];
                    for (let e = 0; e < 128; e++)
                      d.push({ s0: c(i), s1: c(a), s2: c(u), s3: c(l) }),
                        ({
                          s0: i,
                          s1: a,
                          s2: u,
                          s3: l,
                        } = {
                          s3: ((p = u) << 31) | ((m = l) >>> 1),
                          s2: ((h = a) << 31) | (p >>> 1),
                          s1: ((f = i) << 31) | (h >>> 1),
                          s0: (f >>> 1) ^ ((225 << 24) & -(1 & m)),
                        });
                    var f, h, p, m;
                    const g = (y = t || 1024) > 65536 ? 8 : y > 1024 ? 4 : 2;
                    var y;
                    if (![1, 2, 4, 8].includes(g))
                      throw new Error(`ghash: wrong window size=${g}, should be 2, 4 or 8`);
                    this.W = g;
                    const b = 128 / g,
                      w = (this.windowSize = 2 ** g),
                      v = [];
                    for (let e = 0; e < b; e++)
                      for (let t = 0; t < w; t++) {
                        let n = 0,
                          r = 0,
                          s = 0,
                          o = 0;
                        for (let i = 0; i < g; i++) {
                          if (!((t >>> (g - i - 1)) & 1)) continue;
                          const { s0: a, s1: c, s2: u, s3: l } = d[g * e + i];
                          (n ^= a), (r ^= c), (s ^= u), (o ^= l);
                        }
                        v.push({ s0: n, s1: r, s2: s, s3: o });
                      }
                    this.t = v;
                  }
                  _updateBlock(e, t, n, r) {
                    (e ^= this.s0), (t ^= this.s1), (n ^= this.s2), (r ^= this.s3);
                    const { W: s, t: o, windowSize: i } = this;
                    let a = 0,
                      c = 0,
                      u = 0,
                      l = 0;
                    const d = (1 << s) - 1;
                    let f = 0;
                    for (const h of [e, t, n, r])
                      for (let e = 0; e < 4; e++) {
                        const t = (h >>> (8 * e)) & 255;
                        for (let e = 8 / s - 1; e >= 0; e--) {
                          const n = (t >>> (s * e)) & d,
                            { s0: r, s1: h, s2: p, s3: m } = o[f * i + n];
                          (a ^= r), (c ^= h), (u ^= p), (l ^= m), (f += 1);
                        }
                      }
                    (this.s0 = a), (this.s1 = c), (this.s2 = u), (this.s3 = l);
                  }
                  update(e) {
                    (e = (0, r.toBytes)(e)), (0, s.exists)(this);
                    const t = (0, r.u32)(e),
                      n = Math.floor(e.length / o),
                      c = e.length % o;
                    for (let e = 0; e < n; e++)
                      this._updateBlock(t[4 * e + 0], t[4 * e + 1], t[4 * e + 2], t[4 * e + 3]);
                    return (
                      c &&
                        (i.set(e.subarray(n * o)),
                        this._updateBlock(a[0], a[1], a[2], a[3]),
                        a.fill(0)),
                      this
                    );
                  }
                  destroy() {
                    const { t: e } = this;
                    for (const t of e) (t.s0 = 0), (t.s1 = 0), (t.s2 = 0), (t.s3 = 0);
                  }
                  digestInto(e) {
                    (0, s.exists)(this), (0, s.output)(e, this), (this.finished = !0);
                    const { s0: t, s1: n, s2: o, s3: i } = this,
                      a = (0, r.u32)(e);
                    return (a[0] = t), (a[1] = n), (a[2] = o), (a[3] = i), e;
                  }
                  digest() {
                    const e = new Uint8Array(o);
                    return this.digestInto(e), this.destroy(), e;
                  }
                }
                class d extends l {
                  constructor(e, t) {
                    const n = u((e = (0, r.toBytes)(e)).slice());
                    super(n, t), n.fill(0);
                  }
                  update(e) {
                    (e = (0, r.toBytes)(e)), (0, s.exists)(this);
                    const t = (0, r.u32)(e),
                      n = e.length % o,
                      u = Math.floor(e.length / o);
                    for (let e = 0; e < u; e++)
                      this._updateBlock(
                        c(t[4 * e + 3]),
                        c(t[4 * e + 2]),
                        c(t[4 * e + 1]),
                        c(t[4 * e + 0])
                      );
                    return (
                      n &&
                        (i.set(e.subarray(u * o)),
                        this._updateBlock(c(a[3]), c(a[2]), c(a[1]), c(a[0])),
                        a.fill(0)),
                      this
                    );
                  }
                  digestInto(e) {
                    (0, s.exists)(this), (0, s.output)(e, this), (this.finished = !0);
                    const { s0: t, s1: n, s2: o, s3: i } = this,
                      a = (0, r.u32)(e);
                    return (a[0] = t), (a[1] = n), (a[2] = o), (a[3] = i), e.reverse();
                  }
                }
                function f(e) {
                  const t = (t, n) =>
                      e(n, t.length)
                        .update((0, r.toBytes)(t))
                        .digest(),
                    n = e(new Uint8Array(16), 0);
                  return (
                    (t.outputLen = n.outputLen),
                    (t.blockLen = n.blockLen),
                    (t.create = (t, n) => e(t, n)),
                    t
                  );
                }
                (n.ghash = f((e, t) => new l(e, t))), (n.polyval = f((e, t) => new d(e, t)));
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/_polyval.js',
      },
    ],
    [
      3023,
      { './_assert.js': 3021, './_polyval.js': 3022, './utils.js': 3025 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.unsafe =
                    n.siv =
                    n.gcm =
                    n.cfb =
                    n.cbc =
                    n.ecb =
                    n.ctr =
                    n.expandKeyDecLE =
                    n.expandKeyLE =
                      void 0);
                const r = e('./utils.js'),
                  s = e('./_polyval.js'),
                  o = e('./_assert.js'),
                  i = 16,
                  a = new Uint8Array(i),
                  c = 283;
                function u(e) {
                  return (e << 1) ^ (c & -(e >> 7));
                }
                function l(e, t) {
                  let n = 0;
                  for (; t > 0; t >>= 1) (n ^= e & -(1 & t)), (e = u(e));
                  return n;
                }
                const d = (() => {
                    let e = new Uint8Array(256);
                    for (let t = 0, n = 1; t < 256; t++, n ^= u(n)) e[t] = n;
                    const t = new Uint8Array(256);
                    t[0] = 99;
                    for (let n = 0; n < 255; n++) {
                      let r = e[255 - n];
                      (r |= r << 8),
                        (t[e[n]] = 255 & (r ^ (r >> 4) ^ (r >> 5) ^ (r >> 6) ^ (r >> 7) ^ 99));
                    }
                    return t;
                  })(),
                  f = d.map((e, t) => d.indexOf(t)),
                  h = e => (e << 24) | (e >>> 8),
                  p = e => (e << 8) | (e >>> 24);
                function m(e, t) {
                  if (256 !== e.length) throw new Error('Wrong sbox length');
                  const n = new Uint32Array(256).map((n, r) => t(e[r])),
                    r = n.map(p),
                    s = r.map(p),
                    o = s.map(p),
                    i = new Uint32Array(65536),
                    a = new Uint32Array(65536),
                    c = new Uint16Array(65536);
                  for (let t = 0; t < 256; t++)
                    for (let u = 0; u < 256; u++) {
                      const l = 256 * t + u;
                      (i[l] = n[t] ^ r[u]), (a[l] = s[t] ^ o[u]), (c[l] = (e[t] << 8) | e[u]);
                    }
                  return { sbox: e, sbox2: c, T0: n, T1: r, T2: s, T3: o, T01: i, T23: a };
                }
                const g = m(d, e => (l(e, 3) << 24) | (e << 16) | (e << 8) | l(e, 2)),
                  y = m(f, e => (l(e, 11) << 24) | (l(e, 13) << 16) | (l(e, 9) << 8) | l(e, 14)),
                  b = (() => {
                    const e = new Uint8Array(16);
                    for (let t = 0, n = 1; t < 16; t++, n = u(n)) e[t] = n;
                    return e;
                  })();
                function w(e) {
                  (0, o.bytes)(e);
                  const t = e.length;
                  if (![16, 24, 32].includes(t))
                    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${t}`);
                  const { sbox2: n } = g,
                    s = (0, r.u32)(e),
                    i = s.length,
                    a = e => E(n, e, e, e, e),
                    c = new Uint32Array(t + 28);
                  c.set(s);
                  for (let e = i; e < c.length; e++) {
                    let t = c[e - 1];
                    e % i == 0 ? (t = a(h(t)) ^ b[e / i - 1]) : i > 6 && e % i == 4 && (t = a(t)),
                      (c[e] = c[e - i] ^ t);
                  }
                  return c;
                }
                function v(e) {
                  const t = w(e),
                    n = t.slice(),
                    r = t.length,
                    { sbox2: s } = g,
                    { T0: o, T1: i, T2: a, T3: c } = y;
                  for (let e = 0; e < r; e += 4)
                    for (let s = 0; s < 4; s++) n[e + s] = t[r - e - 4 + s];
                  t.fill(0);
                  for (let e = 4; e < r - 4; e++) {
                    const t = n[e],
                      r = E(s, t, t, t, t);
                    n[e] = o[255 & r] ^ i[(r >>> 8) & 255] ^ a[(r >>> 16) & 255] ^ c[r >>> 24];
                  }
                  return n;
                }
                function _(e, t, n, r, s, o) {
                  return (
                    e[((n << 8) & 65280) | ((r >>> 8) & 255)] ^
                    t[((s >>> 8) & 65280) | ((o >>> 24) & 255)]
                  );
                }
                function E(e, t, n, r, s) {
                  return (
                    e[(255 & t) | (65280 & n)] |
                    (e[((r >>> 16) & 255) | ((s >>> 16) & 65280)] << 16)
                  );
                }
                function S(e, t, n, r, s) {
                  const { sbox2: o, T01: i, T23: a } = g;
                  let c = 0;
                  (t ^= e[c++]), (n ^= e[c++]), (r ^= e[c++]), (s ^= e[c++]);
                  const u = e.length / 4 - 2;
                  for (let o = 0; o < u; o++) {
                    const o = e[c++] ^ _(i, a, t, n, r, s),
                      u = e[c++] ^ _(i, a, n, r, s, t),
                      l = e[c++] ^ _(i, a, r, s, t, n),
                      d = e[c++] ^ _(i, a, s, t, n, r);
                    (t = o), (n = u), (r = l), (s = d);
                  }
                  return {
                    s0: e[c++] ^ E(o, t, n, r, s),
                    s1: e[c++] ^ E(o, n, r, s, t),
                    s2: e[c++] ^ E(o, r, s, t, n),
                    s3: e[c++] ^ E(o, s, t, n, r),
                  };
                }
                function x(e, t, n, r, s) {
                  const { sbox2: o, T01: i, T23: a } = y;
                  let c = 0;
                  (t ^= e[c++]), (n ^= e[c++]), (r ^= e[c++]), (s ^= e[c++]);
                  const u = e.length / 4 - 2;
                  for (let o = 0; o < u; o++) {
                    const o = e[c++] ^ _(i, a, t, s, r, n),
                      u = e[c++] ^ _(i, a, n, t, s, r),
                      l = e[c++] ^ _(i, a, r, n, t, s),
                      d = e[c++] ^ _(i, a, s, r, n, t);
                    (t = o), (n = u), (r = l), (s = d);
                  }
                  return {
                    s0: e[c++] ^ E(o, t, s, r, n),
                    s1: e[c++] ^ E(o, n, t, s, r),
                    s2: e[c++] ^ E(o, r, n, t, s),
                    s3: e[c++] ^ E(o, s, r, n, t),
                  };
                }
                function T(e, t) {
                  if (!t) return new Uint8Array(e);
                  if (((0, o.bytes)(t), t.length < e))
                    throw new Error(
                      `aes: wrong destination length, expected at least ${e}, got: ${t.length}`
                    );
                  return t;
                }
                function I(e, t, n, s) {
                  (0, o.bytes)(t, i), (0, o.bytes)(n);
                  const a = n.length;
                  s = T(a, s);
                  const c = t,
                    u = (0, r.u32)(c);
                  let { s0: l, s1: d, s2: f, s3: h } = S(e, u[0], u[1], u[2], u[3]);
                  const p = (0, r.u32)(n),
                    m = (0, r.u32)(s);
                  for (let t = 0; t + 4 <= p.length; t += 4) {
                    (m[t + 0] = p[t + 0] ^ l),
                      (m[t + 1] = p[t + 1] ^ d),
                      (m[t + 2] = p[t + 2] ^ f),
                      (m[t + 3] = p[t + 3] ^ h);
                    let n = 1;
                    for (let e = c.length - 1; e >= 0; e--)
                      (n = (n + (255 & c[e])) | 0), (c[e] = 255 & n), (n >>>= 8);
                    ({ s0: l, s1: d, s2: f, s3: h } = S(e, u[0], u[1], u[2], u[3]));
                  }
                  const g = i * Math.floor(p.length / 4);
                  if (g < a) {
                    const e = new Uint32Array([l, d, f, h]),
                      t = (0, r.u8)(e);
                    for (let e = g, r = 0; e < a; e++, r++) s[e] = n[e] ^ t[r];
                  }
                  return s;
                }
                function k(e, t, n, s, a) {
                  (0, o.bytes)(n, i), (0, o.bytes)(s), (a = T(s.length, a));
                  const c = n,
                    u = (0, r.u32)(c),
                    l = (0, r.createView)(c),
                    d = (0, r.u32)(s),
                    f = (0, r.u32)(a),
                    h = t ? 0 : 12,
                    p = s.length;
                  let m = l.getUint32(h, t),
                    { s0: g, s1: y, s2: b, s3: w } = S(e, u[0], u[1], u[2], u[3]);
                  for (let n = 0; n + 4 <= d.length; n += 4)
                    (f[n + 0] = d[n + 0] ^ g),
                      (f[n + 1] = d[n + 1] ^ y),
                      (f[n + 2] = d[n + 2] ^ b),
                      (f[n + 3] = d[n + 3] ^ w),
                      (m = (m + 1) >>> 0),
                      l.setUint32(h, m, t),
                      ({ s0: g, s1: y, s2: b, s3: w } = S(e, u[0], u[1], u[2], u[3]));
                  const v = i * Math.floor(d.length / 4);
                  if (v < p) {
                    const e = new Uint32Array([g, y, b, w]),
                      t = (0, r.u8)(e);
                    for (let e = v, n = 0; e < p; e++, n++) a[e] = s[e] ^ t[n];
                  }
                  return a;
                }
                function A(e) {
                  if (((0, o.bytes)(e), e.length % i != 0))
                    throw new Error(
                      'aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size 16'
                    );
                }
                function C(e, t, n) {
                  let s = e.length;
                  const o = s % i;
                  if (!t && 0 !== o)
                    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');
                  const a = (0, r.u32)(e);
                  if (t) {
                    let e = i - o;
                    e || (e = i), (s += e);
                  }
                  const c = T(s, n);
                  return { b: a, o: (0, r.u32)(c), out: c };
                }
                function B(e, t) {
                  if (!t) return e;
                  const n = e.length;
                  if (!n) throw new Error('aes/pcks5: empty ciphertext not allowed');
                  const r = e[n - 1];
                  if (r <= 0 || r > 16) throw new Error(`aes/pcks5: wrong padding byte: ${r}`);
                  const s = e.subarray(0, -r);
                  for (let t = 0; t < r; t++)
                    if (e[n - t - 1] !== r) throw new Error('aes/pcks5: wrong padding');
                  return s;
                }
                function O(e) {
                  const t = new Uint8Array(16),
                    n = (0, r.u32)(t);
                  t.set(e);
                  const s = i - e.length;
                  for (let e = i - s; e < i; e++) t[e] = s;
                  return n;
                }
                function j(e, t, n, s, o) {
                  const i = e.create(n, s.length + (o?.length || 0));
                  o && i.update(o), i.update(s);
                  const a = new Uint8Array(16),
                    c = (0, r.createView)(a);
                  return (
                    o && (0, r.setBigUint64)(c, 0, BigInt(8 * o.length), t),
                    (0, r.setBigUint64)(c, 8, BigInt(8 * s.length), t),
                    i.update(a),
                    i.digest()
                  );
                }
                (n.expandKeyLE = w),
                  (n.expandKeyDecLE = v),
                  (n.ctr = (0, r.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function (e, t) {
                    function n(n, r) {
                      const s = w(e),
                        o = t.slice(),
                        i = I(s, o, n, r);
                      return s.fill(0), o.fill(0), i;
                    }
                    return (
                      (0, o.bytes)(e),
                      (0, o.bytes)(t, i),
                      { encrypt: (e, t) => n(e, t), decrypt: (e, t) => n(e, t) }
                    );
                  })),
                  (n.ecb = (0, r.wrapCipher)({ blockSize: 16 }, function (e, t = {}) {
                    (0, o.bytes)(e);
                    const n = !t.disablePadding;
                    return {
                      encrypt: (t, r) => {
                        (0, o.bytes)(t);
                        const { b: s, o: i, out: a } = C(t, n, r),
                          c = w(e);
                        let u = 0;
                        for (; u + 4 <= s.length; ) {
                          const {
                            s0: e,
                            s1: t,
                            s2: n,
                            s3: r,
                          } = S(c, s[u + 0], s[u + 1], s[u + 2], s[u + 3]);
                          (i[u++] = e), (i[u++] = t), (i[u++] = n), (i[u++] = r);
                        }
                        if (n) {
                          const e = O(t.subarray(4 * u)),
                            { s0: n, s1: r, s2: s, s3: o } = S(c, e[0], e[1], e[2], e[3]);
                          (i[u++] = n), (i[u++] = r), (i[u++] = s), (i[u++] = o);
                        }
                        return c.fill(0), a;
                      },
                      decrypt: (t, s) => {
                        A(t);
                        const o = v(e),
                          i = T(t.length, s),
                          a = (0, r.u32)(t),
                          c = (0, r.u32)(i);
                        for (let e = 0; e + 4 <= a.length; ) {
                          const {
                            s0: t,
                            s1: n,
                            s2: r,
                            s3: s,
                          } = x(o, a[e + 0], a[e + 1], a[e + 2], a[e + 3]);
                          (c[e++] = t), (c[e++] = n), (c[e++] = r), (c[e++] = s);
                        }
                        return o.fill(0), B(i, n);
                      },
                    };
                  })),
                  (n.cbc = (0, r.wrapCipher)(
                    { blockSize: 16, nonceLength: 16 },
                    function (e, t, n = {}) {
                      (0, o.bytes)(e), (0, o.bytes)(t, 16);
                      const s = !n.disablePadding;
                      return {
                        encrypt: (n, o) => {
                          const i = w(e),
                            { b: a, o: c, out: u } = C(n, s, o),
                            l = (0, r.u32)(t);
                          let d = l[0],
                            f = l[1],
                            h = l[2],
                            p = l[3],
                            m = 0;
                          for (; m + 4 <= a.length; )
                            (d ^= a[m + 0]),
                              (f ^= a[m + 1]),
                              (h ^= a[m + 2]),
                              (p ^= a[m + 3]),
                              ({ s0: d, s1: f, s2: h, s3: p } = S(i, d, f, h, p)),
                              (c[m++] = d),
                              (c[m++] = f),
                              (c[m++] = h),
                              (c[m++] = p);
                          if (s) {
                            const e = O(n.subarray(4 * m));
                            (d ^= e[0]),
                              (f ^= e[1]),
                              (h ^= e[2]),
                              (p ^= e[3]),
                              ({ s0: d, s1: f, s2: h, s3: p } = S(i, d, f, h, p)),
                              (c[m++] = d),
                              (c[m++] = f),
                              (c[m++] = h),
                              (c[m++] = p);
                          }
                          return i.fill(0), u;
                        },
                        decrypt: (n, o) => {
                          A(n);
                          const i = v(e),
                            a = (0, r.u32)(t),
                            c = T(n.length, o),
                            u = (0, r.u32)(n),
                            l = (0, r.u32)(c);
                          let d = a[0],
                            f = a[1],
                            h = a[2],
                            p = a[3];
                          for (let e = 0; e + 4 <= u.length; ) {
                            const t = d,
                              n = f,
                              r = h,
                              s = p;
                            (d = u[e + 0]), (f = u[e + 1]), (h = u[e + 2]), (p = u[e + 3]);
                            const { s0: o, s1: a, s2: c, s3: m } = x(i, d, f, h, p);
                            (l[e++] = o ^ t), (l[e++] = a ^ n), (l[e++] = c ^ r), (l[e++] = m ^ s);
                          }
                          return i.fill(0), B(c, s);
                        },
                      };
                    }
                  )),
                  (n.cfb = (0, r.wrapCipher)({ blockSize: 16, nonceLength: 16 }, function (e, t) {
                    function n(n, s, o) {
                      const a = w(e),
                        c = n.length;
                      o = T(c, o);
                      const u = (0, r.u32)(n),
                        l = (0, r.u32)(o),
                        d = s ? l : u,
                        f = (0, r.u32)(t);
                      let h = f[0],
                        p = f[1],
                        m = f[2],
                        g = f[3];
                      for (let e = 0; e + 4 <= u.length; ) {
                        const { s0: t, s1: n, s2: r, s3: s } = S(a, h, p, m, g);
                        (l[e + 0] = u[e + 0] ^ t),
                          (l[e + 1] = u[e + 1] ^ n),
                          (l[e + 2] = u[e + 2] ^ r),
                          (l[e + 3] = u[e + 3] ^ s),
                          (h = d[e++]),
                          (p = d[e++]),
                          (m = d[e++]),
                          (g = d[e++]);
                      }
                      const y = i * Math.floor(u.length / 4);
                      if (y < c) {
                        ({ s0: h, s1: p, s2: m, s3: g } = S(a, h, p, m, g));
                        const e = (0, r.u8)(new Uint32Array([h, p, m, g]));
                        for (let t = y, r = 0; t < c; t++, r++) o[t] = n[t] ^ e[r];
                        e.fill(0);
                      }
                      return a.fill(0), o;
                    }
                    return (
                      (0, o.bytes)(e),
                      (0, o.bytes)(t, 16),
                      { encrypt: (e, t) => n(e, !0, t), decrypt: (e, t) => n(e, !1, t) }
                    );
                  })),
                  (n.gcm = (0, r.wrapCipher)(
                    { blockSize: 16, nonceLength: 12, tagLength: 16 },
                    function (e, t, n) {
                      if (((0, o.bytes)(t), 0 === t.length))
                        throw new Error('aes/gcm: empty nonce');
                      const i = 16;
                      function c(e, t, r) {
                        const o = j(s.ghash, !1, e, r, n);
                        for (let e = 0; e < t.length; e++) o[e] ^= t[e];
                        return o;
                      }
                      function u() {
                        const n = w(e),
                          o = a.slice(),
                          i = a.slice();
                        if ((k(n, !1, i, i, o), 12 === t.length)) i.set(t);
                        else {
                          const e = a.slice(),
                            n = (0, r.createView)(e);
                          (0, r.setBigUint64)(n, 8, BigInt(8 * t.length), !1),
                            s.ghash.create(o).update(t).update(e).digestInto(i);
                        }
                        return { xk: n, authKey: o, counter: i, tagMask: k(n, !1, i, a) };
                      }
                      return {
                        encrypt: e => {
                          (0, o.bytes)(e);
                          const { xk: t, authKey: n, counter: r, tagMask: s } = u(),
                            a = new Uint8Array(e.length + i);
                          k(t, !1, r, e, a);
                          const l = c(n, s, a.subarray(0, a.length - i));
                          return a.set(l, e.length), t.fill(0), a;
                        },
                        decrypt: e => {
                          if (((0, o.bytes)(e), e.length < i))
                            throw new Error('aes/gcm: ciphertext less than tagLen (16)');
                          const { xk: t, authKey: n, counter: s, tagMask: a } = u(),
                            l = e.subarray(0, -16),
                            d = e.subarray(-16),
                            f = c(n, a, l);
                          if (!(0, r.equalBytes)(f, d))
                            throw new Error('aes/gcm: invalid ghash tag');
                          const h = k(t, !1, s, l);
                          return n.fill(0), a.fill(0), t.fill(0), h;
                        },
                      };
                    }
                  ));
                const R = (e, t, n) => r => {
                  if (!Number.isSafeInteger(r) || t > r || r > n)
                    throw new Error(`${e}: invalid value=${r}, must be [${t}..${n}]`);
                };
                function P(e) {
                  return (
                    null != e &&
                    'object' == typeof e &&
                    (e instanceof Uint32Array || 'Uint32Array' === e.constructor.name)
                  );
                }
                (n.siv = (0, r.wrapCipher)(
                  { blockSize: 16, nonceLength: 12, tagLength: 16 },
                  function (e, t, n) {
                    const i = R('AAD', 0, 2 ** 36),
                      a = R('plaintext', 0, 2 ** 36),
                      c = R('nonce', 12, 12),
                      u = R('ciphertext', 16, 2 ** 36 + 16);
                    function l() {
                      const n = e.length;
                      if (16 !== n && 24 !== n && 32 !== n)
                        throw new Error(`key length must be 16, 24 or 32 bytes, got: ${n} bytes`);
                      const s = w(e),
                        o = new Uint8Array(n),
                        i = new Uint8Array(16),
                        a = (0, r.u32)(t);
                      let c = 0,
                        u = a[0],
                        l = a[1],
                        d = a[2],
                        f = 0;
                      for (const e of [i, o].map(r.u32)) {
                        const t = (0, r.u32)(e);
                        for (let e = 0; e < t.length; e += 2) {
                          const { s0: n, s1: r } = S(s, c, u, l, d);
                          (t[e + 0] = n), (t[e + 1] = r), (c = ++f);
                        }
                      }
                      return s.fill(0), { authKey: i, encKey: w(o) };
                    }
                    function d(e, o, i) {
                      const a = j(s.polyval, !0, o, i, n);
                      for (let e = 0; e < 12; e++) a[e] ^= t[e];
                      a[15] &= 127;
                      const c = (0, r.u32)(a);
                      let u = c[0],
                        l = c[1],
                        d = c[2],
                        f = c[3];
                      return (
                        ({ s0: u, s1: l, s2: d, s3: f } = S(e, u, l, d, f)),
                        (c[0] = u),
                        (c[1] = l),
                        (c[2] = d),
                        (c[3] = f),
                        a
                      );
                    }
                    function f(e, t, n) {
                      let r = t.slice();
                      return (r[15] |= 128), k(e, !0, r, n);
                    }
                    return (
                      (0, o.bytes)(t),
                      c(t.length),
                      n && ((0, o.bytes)(n), i(n.length)),
                      {
                        encrypt: e => {
                          (0, o.bytes)(e), a(e.length);
                          const { encKey: t, authKey: n } = l(),
                            r = d(t, n, e),
                            s = new Uint8Array(e.length + 16);
                          return s.set(r, e.length), s.set(f(t, r, e)), t.fill(0), n.fill(0), s;
                        },
                        decrypt: e => {
                          (0, o.bytes)(e), u(e.length);
                          const t = e.subarray(-16),
                            { encKey: n, authKey: s } = l(),
                            i = f(n, t, e.subarray(0, -16)),
                            a = d(n, s, i);
                          if ((n.fill(0), s.fill(0), !(0, r.equalBytes)(t, a)))
                            throw new Error('invalid polyval tag');
                          return i;
                        },
                      }
                    );
                  }
                )),
                  (n.unsafe = {
                    expandKeyLE: w,
                    expandKeyDecLE: v,
                    encrypt: S,
                    decrypt: x,
                    encryptBlock: function (e, t) {
                      if (((0, o.bytes)(t, 16), !P(e)))
                        throw new Error('_encryptBlock accepts result of expandKeyLE');
                      const n = (0, r.u32)(t);
                      let { s0: s, s1: i, s2: a, s3: c } = S(e, n[0], n[1], n[2], n[3]);
                      return (n[0] = s), (n[1] = i), (n[2] = a), (n[3] = c), t;
                    },
                    decryptBlock: function (e, t) {
                      if (((0, o.bytes)(t, 16), !P(e)))
                        throw new Error('_decryptBlock accepts result of expandKeyLE');
                      const n = (0, r.u32)(t);
                      let { s0: s, s1: i, s2: a, s3: c } = x(e, n[0], n[1], n[2], n[3]);
                      return (n[0] = s), (n[1] = i), (n[2] = a), (n[3] = c), t;
                    },
                    ctrCounter: I,
                    ctr32: k,
                  });
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/aes.js',
      },
    ],
    [
      3024,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getWebcryptoSubtle = n.randomBytes = void 0);
                const r =
                  'object' == typeof globalThis && 'crypto' in globalThis
                    ? globalThis.crypto
                    : undefined;
                (n.randomBytes = function (e = 32) {
                  if (r && 'function' == typeof r.getRandomValues)
                    return r.getRandomValues(new Uint8Array(e));
                  throw new Error('crypto.getRandomValues must be defined');
                }),
                  (n.getWebcryptoSubtle = function () {
                    if (r && 'object' == typeof r.subtle && null != r.subtle) return r.subtle;
                    throw new Error('crypto.subtle must be defined');
                  });
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/crypto.js',
      },
    ],
    [
      3025,
      { './_assert.js': 3021 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.u64Lengths =
                    n.setBigUint64 =
                    n.wrapCipher =
                    n.Hash =
                    n.equalBytes =
                    n.checkOpts =
                    n.concatBytes =
                    n.toBytes =
                    n.bytesToUtf8 =
                    n.utf8ToBytes =
                    n.asyncLoop =
                    n.nextTick =
                    n.numberToBytesBE =
                    n.bytesToNumberBE =
                    n.hexToNumber =
                    n.hexToBytes =
                    n.bytesToHex =
                    n.isLE =
                    n.createView =
                    n.u32 =
                    n.u16 =
                    n.u8 =
                      void 0);
                /*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */
                const r = e('./_assert.js');
                n.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                n.u16 = e => new Uint16Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 2));
                n.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
                if (
                  ((n.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength)),
                  (n.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]),
                  !n.isLE)
                )
                  throw new Error('Non little-endian hardware is not supported');
                const s = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                function o(e) {
                  (0, r.bytes)(e);
                  let t = '';
                  for (let n = 0; n < e.length; n++) t += s[e[n]];
                  return t;
                }
                n.bytesToHex = o;
                const i = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
                function a(e) {
                  return e >= i._0 && e <= i._9
                    ? e - i._0
                    : e >= i._A && e <= i._F
                      ? e - (i._A - 10)
                      : e >= i._a && e <= i._f
                        ? e - (i._a - 10)
                        : void 0;
                }
                function c(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  const t = e.length,
                    n = t / 2;
                  if (t % 2)
                    throw new Error('padded hex string expected, got unpadded hex of length ' + t);
                  const r = new Uint8Array(n);
                  for (let t = 0, s = 0; t < n; t++, s += 2) {
                    const n = a(e.charCodeAt(s)),
                      o = a(e.charCodeAt(s + 1));
                    if (n === undefined || o === undefined) {
                      const t = e[s] + e[s + 1];
                      throw new Error(
                        'hex string expected, got non-hex character "' + t + '" at index ' + s
                      );
                    }
                    r[t] = 16 * n + o;
                  }
                  return r;
                }
                function u(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  return BigInt('' === e ? '0' : `0x${e}`);
                }
                (n.hexToBytes = c),
                  (n.hexToNumber = u),
                  (n.bytesToNumberBE = function (e) {
                    return u(o(e));
                  }),
                  (n.numberToBytesBE = function (e, t) {
                    return c(e.toString(16).padStart(2 * t, '0'));
                  });
                function l(e) {
                  if ('string' != typeof e) throw new Error('string expected, got ' + typeof e);
                  return new Uint8Array(new TextEncoder().encode(e));
                }
                (n.nextTick = async () => {}),
                  (n.asyncLoop = async function (e, t, r) {
                    let s = Date.now();
                    for (let o = 0; o < e; o++) {
                      r(o);
                      const e = Date.now() - s;
                      (e >= 0 && e < t) || (await (0, n.nextTick)(), (s += e));
                    }
                  }),
                  (n.utf8ToBytes = l),
                  (n.bytesToUtf8 = function (e) {
                    return new TextDecoder().decode(e);
                  }),
                  (n.toBytes = function (e) {
                    if ('string' == typeof e) e = l(e);
                    else {
                      if (!(0, r.isBytes)(e))
                        throw new Error('Uint8Array expected, got ' + typeof e);
                      e = e.slice();
                    }
                    return e;
                  }),
                  (n.concatBytes = function (...e) {
                    let t = 0;
                    for (let n = 0; n < e.length; n++) {
                      const s = e[n];
                      (0, r.bytes)(s), (t += s.length);
                    }
                    const n = new Uint8Array(t);
                    for (let t = 0, r = 0; t < e.length; t++) {
                      const s = e[t];
                      n.set(s, r), (r += s.length);
                    }
                    return n;
                  }),
                  (n.checkOpts = function (e, t) {
                    if (null == t || 'object' != typeof t)
                      throw new Error('options must be defined');
                    return Object.assign(e, t);
                  }),
                  (n.equalBytes = function (e, t) {
                    if (e.length !== t.length) return !1;
                    let n = 0;
                    for (let r = 0; r < e.length; r++) n |= e[r] ^ t[r];
                    return 0 === n;
                  });
                n.Hash = class {};
                function d(e, t, n, r) {
                  if ('function' == typeof e.setBigUint64) return e.setBigUint64(t, n, r);
                  const s = BigInt(32),
                    o = BigInt(4294967295),
                    i = Number((n >> s) & o),
                    a = Number(n & o),
                    c = r ? 4 : 0,
                    u = r ? 0 : 4;
                  e.setUint32(t + c, i, r), e.setUint32(t + u, a, r);
                }
                (n.wrapCipher = (e, t) => (Object.assign(t, e), t)),
                  (n.setBigUint64 = d),
                  (n.u64Lengths = function (e, t) {
                    const r = new Uint8Array(16),
                      s = (0, n.createView)(r);
                    return d(s, 0, BigInt(t ? t.length : 0), !0), d(s, 8, BigInt(e.length), !0), r;
                  });
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/utils.js',
      },
    ],
    [
      3026,
      { './_assert.js': 3021, './utils.js': 3025, '@noble/ciphers/crypto': 3024 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.gcm =
                    n.ctr =
                    n.cbc =
                    n.utils =
                    n.managedNonce =
                    n.getWebcryptoSubtle =
                    n.randomBytes =
                      void 0);
                const r = e('@noble/ciphers/crypto');
                Object.defineProperty(n, 'randomBytes', {
                  enumerable: !0,
                  get: function () {
                    return r.randomBytes;
                  },
                }),
                  Object.defineProperty(n, 'getWebcryptoSubtle', {
                    enumerable: !0,
                    get: function () {
                      return r.getWebcryptoSubtle;
                    },
                  });
                const s = e('./utils.js'),
                  o = e('./_assert.js');
                (n.managedNonce = function (e) {
                  return (
                    (0, o.number)(e.nonceLength),
                    (t, ...n) => ({
                      encrypt: (o, ...i) => {
                        const { nonceLength: a } = e,
                          c = (0, r.randomBytes)(a),
                          u = e(t, c, ...n).encrypt(o, ...i),
                          l = (0, s.concatBytes)(c, u);
                        return u.fill(0), l;
                      },
                      decrypt: (r, ...s) => {
                        const { nonceLength: o } = e,
                          i = r.subarray(0, o),
                          a = r.subarray(o);
                        return e(t, i, ...n).decrypt(a, ...s);
                      },
                    })
                  );
                }),
                  (n.utils = {
                    async encrypt(e, t, n, s) {
                      const o = (0, r.getWebcryptoSubtle)(),
                        i = await o.importKey('raw', e, t, !0, ['encrypt']),
                        a = await o.encrypt(n, i, s);
                      return new Uint8Array(a);
                    },
                    async decrypt(e, t, n, s) {
                      const o = (0, r.getWebcryptoSubtle)(),
                        i = await o.importKey('raw', e, t, !0, ['decrypt']),
                        a = await o.decrypt(n, i, s);
                      return new Uint8Array(a);
                    },
                  });
                const i = { CBC: 'AES-CBC', CTR: 'AES-CTR', GCM: 'AES-GCM' };
                function a(e) {
                  return (t, r, s) => {
                    (0, o.bytes)(t), (0, o.bytes)(r);
                    const a = { name: e, length: 8 * t.length },
                      c = (function (e, t, n) {
                        if (e === i.CBC) return { name: i.CBC, iv: t };
                        if (e === i.CTR) return { name: i.CTR, counter: t, length: 64 };
                        if (e === i.GCM)
                          return n
                            ? { name: i.GCM, iv: t, additionalData: n }
                            : { name: i.GCM, iv: t };
                        throw new Error('unknown aes block mode');
                      })(e, r, s);
                    return {
                      encrypt: e => ((0, o.bytes)(e), n.utils.encrypt(t, a, c, e)),
                      decrypt: e => ((0, o.bytes)(e), n.utils.decrypt(t, a, c, e)),
                    };
                  };
                }
                (n.cbc = a(i.CBC)), (n.ctr = a(i.CTR)), (n.gcm = a(i.GCM));
              };
            };
      },
      {
        package: '@metamask/profile-sync-controller>@noble/ciphers',
        file: 'node_modules/@noble/ciphers/webcrypto.js',
      },
    ],
    [
      3027,
      {
        './abstract/weierstrass.js': 3034,
        '@noble/hashes/hmac': 3040,
        '@noble/hashes/utils': 3043,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getHash = i),
                  (n.createCurve = function (e, t) {
                    const n = t => (0, o.weierstrass)({ ...e, ...i(t) });
                    return { ...n(t), create: n };
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/hmac'),
                  s = e('@noble/hashes/utils'),
                  o = e('./abstract/weierstrass.js');
                function i(e) {
                  return {
                    hash: e,
                    hmac: (t, ...n) => (0, r.hmac)(e, t, (0, s.concatBytes)(...n)),
                    randomBytes: s.randomBytes,
                  };
                }
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/_shortw_utils.js',
      },
    ],
    [
      3028,
      { './modular.js': 3031, './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.wNAF = function (e, t) {
                    return {
                      constTimeNegate: a,
                      hasPrecomputes: e => 1 !== p(e),
                      unsafeLadder(t, n, r = e.ZERO) {
                        let s = t;
                        for (; n > o; ) n & i && (r = r.add(s)), (s = s.double()), (n >>= i);
                        return r;
                      },
                      precomputeWindow(e, n) {
                        const { windows: r, windowSize: s } = u(n, t),
                          o = [];
                        let i = e,
                          a = i;
                        for (let e = 0; e < r; e++) {
                          (a = i), o.push(a);
                          for (let e = 1; e < s; e++) (a = a.add(i)), o.push(a);
                          i = a.double();
                        }
                        return o;
                      },
                      wNAF(n, r, s) {
                        const { windows: o, windowSize: c } = u(n, t);
                        let l = e.ZERO,
                          d = e.BASE;
                        const f = BigInt(2 ** n - 1),
                          h = 2 ** n,
                          p = BigInt(n);
                        for (let e = 0; e < o; e++) {
                          const t = e * c;
                          let n = Number(s & f);
                          (s >>= p), n > c && ((n -= h), (s += i));
                          const o = t,
                            u = t + Math.abs(n) - 1,
                            m = e % 2 != 0,
                            g = n < 0;
                          0 === n ? (d = d.add(a(m, r[o]))) : (l = l.add(a(g, r[u])));
                        }
                        return { p: l, f: d };
                      },
                      wNAFUnsafe(n, r, s, a = e.ZERO) {
                        const { windows: c, windowSize: l } = u(n, t),
                          d = BigInt(2 ** n - 1),
                          f = 2 ** n,
                          h = BigInt(n);
                        for (let e = 0; e < c; e++) {
                          const t = e * l;
                          if (s === o) break;
                          let n = Number(s & d);
                          if (((s >>= h), n > l && ((n -= f), (s += i)), 0 === n)) continue;
                          let c = r[t + Math.abs(n) - 1];
                          n < 0 && (c = c.negate()), (a = a.add(c));
                        }
                        return a;
                      },
                      getPrecomputes(e, t, n) {
                        let r = f.get(t);
                        return (
                          r || ((r = this.precomputeWindow(t, e)), 1 !== e && f.set(t, n(r))), r
                        );
                      },
                      wNAFCached(e, t, n) {
                        const r = p(e);
                        return this.wNAF(r, this.getPrecomputes(r, e, n), t);
                      },
                      wNAFCachedUnsafe(e, t, n, r) {
                        const s = p(e);
                        return 1 === s
                          ? this.unsafeLadder(e, t, r)
                          : this.wNAFUnsafe(s, this.getPrecomputes(s, e, n), t, r);
                      },
                      setWindowSize(e, n) {
                        c(n, t), h.set(e, n), f.delete(e);
                      },
                    };
                  }),
                  (n.pippenger = function (e, t, n, r) {
                    if ((l(n, e), d(r, t), n.length !== r.length))
                      throw new Error('arrays of points and scalars must have equal length');
                    const o = e.ZERO,
                      i = (0, s.bitLen)(BigInt(n.length)),
                      a = i > 12 ? i - 3 : i > 4 ? i - 2 : i ? 2 : 1,
                      c = (1 << a) - 1,
                      u = new Array(c + 1).fill(o),
                      f = Math.floor((t.BITS - 1) / a) * a;
                    let h = o;
                    for (let e = f; e >= 0; e -= a) {
                      u.fill(o);
                      for (let t = 0; t < r.length; t++) {
                        const s = r[t],
                          o = Number((s >> BigInt(e)) & BigInt(c));
                        u[o] = u[o].add(n[t]);
                      }
                      let t = o;
                      for (let e = u.length - 1, n = o; e > 0; e--)
                        (n = n.add(u[e])), (t = t.add(n));
                      if (((h = h.add(t)), 0 !== e)) for (let e = 0; e < a; e++) h = h.double();
                    }
                    return h;
                  }),
                  (n.precomputeMSMUnsafe = function (e, t, n, r) {
                    c(r, t.BITS), l(n, e);
                    const s = e.ZERO,
                      o = 2 ** r - 1,
                      i = Math.ceil(t.BITS / r),
                      a = BigInt((1 << r) - 1),
                      u = n.map(e => {
                        const t = [];
                        for (let n = 0, r = e; n < o; n++) t.push(r), (r = r.add(e));
                        return t;
                      });
                    return e => {
                      if ((d(e, t), e.length > n.length))
                        throw new Error('array of scalars must be smaller than array of points');
                      let o = s;
                      for (let t = 0; t < i; t++) {
                        if (o !== s) for (let e = 0; e < r; e++) o = o.double();
                        const n = BigInt(i * r - (t + 1) * r);
                        for (let t = 0; t < e.length; t++) {
                          const r = e[t],
                            s = Number((r >> n) & a);
                          s && (o = o.add(u[t][s - 1]));
                        }
                      }
                      return o;
                    };
                  }),
                  (n.validateBasic = function (e) {
                    return (
                      (0, r.validateField)(e.Fp),
                      (0, s.validateObject)(
                        e,
                        { n: 'bigint', h: 'bigint', Gx: 'field', Gy: 'field' },
                        { nBitLength: 'isSafeInteger', nByteLength: 'isSafeInteger' }
                      ),
                      Object.freeze({ ...(0, r.nLength)(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
                    );
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./modular.js'),
                  s = e('./utils.js'),
                  o = BigInt(0),
                  i = BigInt(1);
                function a(e, t) {
                  const n = t.negate();
                  return e ? n : t;
                }
                function c(e, t) {
                  if (!Number.isSafeInteger(e) || e <= 0 || e > t)
                    throw new Error('invalid window size, expected [1..' + t + '], got W=' + e);
                }
                function u(e, t) {
                  c(e, t);
                  return { windows: Math.ceil(t / e) + 1, windowSize: 2 ** (e - 1) };
                }
                function l(e, t) {
                  if (!Array.isArray(e)) throw new Error('array expected');
                  e.forEach((e, n) => {
                    if (!(e instanceof t)) throw new Error('invalid point at index ' + n);
                  });
                }
                function d(e, t) {
                  if (!Array.isArray(e)) throw new Error('array of scalars expected');
                  e.forEach((e, n) => {
                    if (!t.isValid(e)) throw new Error('invalid scalar at index ' + n);
                  });
                }
                const f = new WeakMap(),
                  h = new WeakMap();
                function p(e) {
                  return h.get(e) || 1;
                }
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/curve.js',
      },
    ],
    [
      3029,
      { './curve.js': 3028, './modular.js': 3031, './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.twistedEdwards = function (e) {
                    const t = (function (e) {
                        const t = (0, r.validateBasic)(e);
                        return (
                          o.validateObject(
                            e,
                            { hash: 'function', a: 'bigint', d: 'bigint', randomBytes: 'function' },
                            {
                              adjustScalarBytes: 'function',
                              domain: 'function',
                              uvRatio: 'function',
                              mapToCurve: 'function',
                            }
                          ),
                          Object.freeze({ ...t })
                        );
                      })(e),
                      {
                        Fp: n,
                        n: f,
                        prehash: h,
                        hash: p,
                        randomBytes: m,
                        nByteLength: g,
                        h: y,
                      } = t,
                      b = u << (BigInt(8 * g) - c),
                      w = n.create,
                      v = (0, s.Field)(t.n, t.nBitLength),
                      _ =
                        t.uvRatio ||
                        ((e, t) => {
                          try {
                            return { isValid: !0, value: n.sqrt(e * n.inv(t)) };
                          } catch (e) {
                            return { isValid: !1, value: a };
                          }
                        }),
                      E = t.adjustScalarBytes || (e => e),
                      S =
                        t.domain ||
                        ((e, t, n) => {
                          if (((0, i.abool)('phflag', n), t.length || n))
                            throw new Error('Contexts/pre-hash are not supported');
                          return e;
                        });
                    function x(e, t) {
                      o.aInRange('coordinate ' + e, t, a, b);
                    }
                    function T(e) {
                      if (!(e instanceof A)) throw new Error('ExtendedPoint expected');
                    }
                    const I = (0, i.memoized)((e, t) => {
                        const { ex: r, ey: s, ez: o } = e,
                          i = e.is0();
                        null == t && (t = i ? l : n.inv(o));
                        const u = w(r * t),
                          d = w(s * t),
                          f = w(o * t);
                        if (i) return { x: a, y: c };
                        if (f !== c) throw new Error('invZ was invalid');
                        return { x: u, y: d };
                      }),
                      k = (0, i.memoized)(e => {
                        const { a: n, d: r } = t;
                        if (e.is0()) throw new Error('bad point: ZERO');
                        const { ex: s, ey: o, ez: i, et: a } = e,
                          c = w(s * s),
                          u = w(o * o),
                          l = w(i * i),
                          d = w(l * l),
                          f = w(c * n);
                        if (w(l * w(f + u)) !== w(d + w(r * w(c * u))))
                          throw new Error('bad point: equation left != right (1)');
                        if (w(s * o) !== w(i * a))
                          throw new Error('bad point: equation left != right (2)');
                        return !0;
                      });
                    class A {
                      constructor(e, t, n, r) {
                        (this.ex = e),
                          (this.ey = t),
                          (this.ez = n),
                          (this.et = r),
                          x('x', e),
                          x('y', t),
                          x('z', n),
                          x('t', r),
                          Object.freeze(this);
                      }
                      get x() {
                        return this.toAffine().x;
                      }
                      get y() {
                        return this.toAffine().y;
                      }
                      static fromAffine(e) {
                        if (e instanceof A) throw new Error('extended point not allowed');
                        const { x: t, y: n } = e || {};
                        return x('x', t), x('y', n), new A(t, n, c, w(t * n));
                      }
                      static normalizeZ(e) {
                        const t = n.invertBatch(e.map(e => e.ez));
                        return e.map((e, n) => e.toAffine(t[n])).map(A.fromAffine);
                      }
                      static msm(e, t) {
                        return (0, r.pippenger)(A, v, e, t);
                      }
                      _setWindowSize(e) {
                        O.setWindowSize(this, e);
                      }
                      assertValidity() {
                        k(this);
                      }
                      equals(e) {
                        T(e);
                        const { ex: t, ey: n, ez: r } = this,
                          { ex: s, ey: o, ez: i } = e,
                          a = w(t * i),
                          c = w(s * r),
                          u = w(n * i),
                          l = w(o * r);
                        return a === c && u === l;
                      }
                      is0() {
                        return this.equals(A.ZERO);
                      }
                      negate() {
                        return new A(w(-this.ex), this.ey, this.ez, w(-this.et));
                      }
                      double() {
                        const { a: e } = t,
                          { ex: n, ey: r, ez: s } = this,
                          o = w(n * n),
                          i = w(r * r),
                          a = w(u * w(s * s)),
                          c = w(e * o),
                          l = n + r,
                          d = w(w(l * l) - o - i),
                          f = c + i,
                          h = f - a,
                          p = c - i,
                          m = w(d * h),
                          g = w(f * p),
                          y = w(d * p),
                          b = w(h * f);
                        return new A(m, g, b, y);
                      }
                      add(e) {
                        T(e);
                        const { a: n, d: r } = t,
                          { ex: s, ey: o, ez: i, et: c } = this,
                          { ex: l, ey: d, ez: f, et: h } = e;
                        if (n === BigInt(-1)) {
                          const e = w((o - s) * (d + l)),
                            t = w((o + s) * (d - l)),
                            n = w(t - e);
                          if (n === a) return this.double();
                          const r = w(i * u * h),
                            p = w(c * u * f),
                            m = p + r,
                            g = t + e,
                            y = p - r,
                            b = w(m * n),
                            v = w(g * y),
                            _ = w(m * y),
                            E = w(n * g);
                          return new A(b, v, E, _);
                        }
                        const p = w(s * l),
                          m = w(o * d),
                          g = w(c * r * h),
                          y = w(i * f),
                          b = w((s + o) * (l + d) - p - m),
                          v = y - g,
                          _ = y + g,
                          E = w(m - n * p),
                          S = w(b * v),
                          x = w(_ * E),
                          I = w(b * E),
                          k = w(v * _);
                        return new A(S, x, k, I);
                      }
                      subtract(e) {
                        return this.add(e.negate());
                      }
                      wNAF(e) {
                        return O.wNAFCached(this, e, A.normalizeZ);
                      }
                      multiply(e) {
                        const t = e;
                        o.aInRange('scalar', t, c, f);
                        const { p: n, f: r } = this.wNAF(t);
                        return A.normalizeZ([n, r])[0];
                      }
                      multiplyUnsafe(e, t = A.ZERO) {
                        const n = e;
                        return (
                          o.aInRange('scalar', n, a, f),
                          n === a
                            ? B
                            : this.is0() || n === c
                              ? this
                              : O.wNAFCachedUnsafe(this, n, A.normalizeZ, t)
                        );
                      }
                      isSmallOrder() {
                        return this.multiplyUnsafe(y).is0();
                      }
                      isTorsionFree() {
                        return O.unsafeLadder(this, f).is0();
                      }
                      toAffine(e) {
                        return I(this, e);
                      }
                      clearCofactor() {
                        const { h: e } = t;
                        return e === c ? this : this.multiplyUnsafe(e);
                      }
                      static fromHex(e, r = !1) {
                        const { d: s, a: u } = t,
                          l = n.BYTES;
                        (e = (0, i.ensureBytes)('pointHex', e, l)), (0, i.abool)('zip215', r);
                        const d = e.slice(),
                          f = e[l - 1];
                        d[l - 1] = -129 & f;
                        const h = o.bytesToNumberLE(d),
                          p = r ? b : n.ORDER;
                        o.aInRange('pointHex.y', h, a, p);
                        const m = w(h * h),
                          g = w(m - c),
                          y = w(s * m - u);
                        let { isValid: v, value: E } = _(g, y);
                        if (!v) throw new Error('Point.fromHex: invalid y coordinate');
                        const S = (E & c) === c,
                          x = !!(128 & f);
                        if (!r && E === a && x) throw new Error('Point.fromHex: x=0 and x_0=1');
                        return x !== S && (E = w(-E)), A.fromAffine({ x: E, y: h });
                      }
                      static fromPrivateKey(e) {
                        return P(e).point;
                      }
                      toRawBytes() {
                        const { x: e, y: t } = this.toAffine(),
                          r = o.numberToBytesLE(t, n.BYTES);
                        return (r[r.length - 1] |= e & c ? 128 : 0), r;
                      }
                      toHex() {
                        return o.bytesToHex(this.toRawBytes());
                      }
                    }
                    (A.BASE = new A(t.Gx, t.Gy, c, w(t.Gx * t.Gy))), (A.ZERO = new A(a, c, c, a));
                    const { BASE: C, ZERO: B } = A,
                      O = (0, r.wNAF)(A, 8 * g);
                    function j(e) {
                      return (0, s.mod)(e, f);
                    }
                    function R(e) {
                      return j(o.bytesToNumberLE(e));
                    }
                    function P(e) {
                      const t = n.BYTES;
                      e = (0, i.ensureBytes)('private key', e, t);
                      const r = (0, i.ensureBytes)('hashed private key', p(e), 2 * t),
                        s = E(r.slice(0, t)),
                        o = r.slice(t, 2 * t),
                        a = R(s),
                        c = C.multiply(a),
                        u = c.toRawBytes();
                      return { head: s, prefix: o, scalar: a, point: c, pointBytes: u };
                    }
                    function N(e = new Uint8Array(), ...t) {
                      const n = o.concatBytes(...t);
                      return R(p(S(n, (0, i.ensureBytes)('context', e), !!h)));
                    }
                    const L = d;
                    C._setWindowSize(8);
                    return {
                      CURVE: t,
                      getPublicKey: function (e) {
                        return P(e).pointBytes;
                      },
                      sign: function (e, t, r = {}) {
                        (e = (0, i.ensureBytes)('message', e)), h && (e = h(e));
                        const { prefix: s, scalar: c, pointBytes: u } = P(t),
                          l = N(r.context, s, e),
                          d = C.multiply(l).toRawBytes(),
                          p = j(l + N(r.context, d, u, e) * c);
                        o.aInRange('signature.s', p, a, f);
                        const m = o.concatBytes(d, o.numberToBytesLE(p, n.BYTES));
                        return (0, i.ensureBytes)('result', m, 2 * n.BYTES);
                      },
                      verify: function (e, t, r, s = L) {
                        const { context: a, zip215: c } = s,
                          u = n.BYTES;
                        (e = (0, i.ensureBytes)('signature', e, 2 * u)),
                          (t = (0, i.ensureBytes)('message', t)),
                          (r = (0, i.ensureBytes)('publicKey', r, u)),
                          c !== undefined && (0, i.abool)('zip215', c),
                          h && (t = h(t));
                        const l = o.bytesToNumberLE(e.slice(u, 2 * u));
                        let d, f, p;
                        try {
                          (d = A.fromHex(r, c)),
                            (f = A.fromHex(e.slice(0, u), c)),
                            (p = C.multiplyUnsafe(l));
                        } catch (e) {
                          return !1;
                        }
                        if (!c && d.isSmallOrder()) return !1;
                        const m = N(a, f.toRawBytes(), d.toRawBytes(), t);
                        return f
                          .add(d.multiplyUnsafe(m))
                          .subtract(p)
                          .clearCofactor()
                          .equals(A.ZERO);
                      },
                      ExtendedPoint: A,
                      utils: {
                        getExtendedPublicKey: P,
                        randomPrivateKey: () => m(n.BYTES),
                        precompute: (e = 8, t = A.BASE) => (
                          t._setWindowSize(e), t.multiply(BigInt(3)), t
                        ),
                      },
                    };
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./curve.js'),
                  s = e('./modular.js'),
                  o = e('./utils.js'),
                  i = e('./utils.js'),
                  a = BigInt(0),
                  c = BigInt(1),
                  u = BigInt(2),
                  l = BigInt(8),
                  d = { zip215: !0 };
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/edwards.js',
      },
    ],
    [
      3030,
      { './modular.js': 3031, './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.expand_message_xmd = u),
                  (n.expand_message_xof = l),
                  (n.hash_to_field = d),
                  (n.isogenyMap = function (e, t) {
                    const n = t.map(e => Array.from(e).reverse());
                    return (t, r) => {
                      const [s, o, i, a] = n.map(n => n.reduce((n, r) => e.add(e.mul(n, t), r)));
                      return (t = e.div(s, o)), (r = e.mul(r, e.div(i, a))), { x: t, y: r };
                    };
                  }),
                  (n.createHasher = function (e, t, n) {
                    if ('function' != typeof t) throw new Error('mapToCurve() must be defined');
                    return {
                      hashToCurve(r, s) {
                        const o = d(r, 2, { ...n, DST: n.DST, ...s }),
                          i = e.fromAffine(t(o[0])),
                          a = e.fromAffine(t(o[1])),
                          c = i.add(a).clearCofactor();
                        return c.assertValidity(), c;
                      },
                      encodeToCurve(r, s) {
                        const o = d(r, 1, { ...n, DST: n.encodeDST, ...s }),
                          i = e.fromAffine(t(o[0])).clearCofactor();
                        return i.assertValidity(), i;
                      },
                      mapToCurve(n) {
                        if (!Array.isArray(n))
                          throw new Error('mapToCurve: expected array of bigints');
                        for (const e of n)
                          if ('bigint' != typeof e)
                            throw new Error('mapToCurve: expected array of bigints');
                        const r = e.fromAffine(t(n)).clearCofactor();
                        return r.assertValidity(), r;
                      },
                    };
                  });
                const r = e('./modular.js'),
                  s = e('./utils.js'),
                  o = s.bytesToNumberBE;
                function i(e, t) {
                  if ((c(e), c(t), e < 0 || e >= 1 << (8 * t)))
                    throw new Error('invalid I2OSP input: ' + e);
                  const n = Array.from({ length: t }).fill(0);
                  for (let r = t - 1; r >= 0; r--) (n[r] = 255 & e), (e >>>= 8);
                  return new Uint8Array(n);
                }
                function a(e, t) {
                  const n = new Uint8Array(e.length);
                  for (let r = 0; r < e.length; r++) n[r] = e[r] ^ t[r];
                  return n;
                }
                function c(e) {
                  if (!Number.isSafeInteger(e)) throw new Error('number expected');
                }
                function u(e, t, n, r) {
                  (0, s.abytes)(e),
                    (0, s.abytes)(t),
                    c(n),
                    t.length > 255 &&
                      (t = r((0, s.concatBytes)((0, s.utf8ToBytes)('H2C-OVERSIZE-DST-'), t)));
                  const { outputLen: o, blockLen: u } = r,
                    l = Math.ceil(n / o);
                  if (n > 65535 || l > 255)
                    throw new Error('expand_message_xmd: invalid lenInBytes');
                  const d = (0, s.concatBytes)(t, i(t.length, 1)),
                    f = i(0, u),
                    h = i(n, 2),
                    p = new Array(l),
                    m = r((0, s.concatBytes)(f, e, h, i(0, 1), d));
                  p[0] = r((0, s.concatBytes)(m, i(1, 1), d));
                  for (let e = 1; e <= l; e++) {
                    const t = [a(m, p[e - 1]), i(e + 1, 1), d];
                    p[e] = r((0, s.concatBytes)(...t));
                  }
                  return (0, s.concatBytes)(...p).slice(0, n);
                }
                function l(e, t, n, r, o) {
                  if (((0, s.abytes)(e), (0, s.abytes)(t), c(n), t.length > 255)) {
                    const e = Math.ceil((2 * r) / 8);
                    t = o
                      .create({ dkLen: e })
                      .update((0, s.utf8ToBytes)('H2C-OVERSIZE-DST-'))
                      .update(t)
                      .digest();
                  }
                  if (n > 65535 || t.length > 255)
                    throw new Error('expand_message_xof: invalid lenInBytes');
                  return o
                    .create({ dkLen: n })
                    .update(e)
                    .update(i(n, 2))
                    .update(t)
                    .update(i(t.length, 1))
                    .digest();
                }
                function d(e, t, n) {
                  (0, s.validateObject)(n, {
                    DST: 'stringOrUint8Array',
                    p: 'bigint',
                    m: 'isSafeInteger',
                    k: 'isSafeInteger',
                    hash: 'hash',
                  });
                  const { p: i, k: a, m: d, hash: f, expand: h, DST: p } = n;
                  (0, s.abytes)(e), c(t);
                  const m = 'string' == typeof p ? (0, s.utf8ToBytes)(p) : p,
                    g = i.toString(2).length,
                    y = Math.ceil((g + a) / 8),
                    b = t * d * y;
                  let w;
                  if ('xmd' === h) w = u(e, m, b, f);
                  else if ('xof' === h) w = l(e, m, b, a, f);
                  else {
                    if ('_internal_pass' !== h) throw new Error('expand must be "xmd" or "xof"');
                    w = e;
                  }
                  const v = new Array(t);
                  for (let e = 0; e < t; e++) {
                    const t = new Array(d);
                    for (let n = 0; n < d; n++) {
                      const s = y * (n + e * d),
                        a = w.subarray(s, s + y);
                      t[n] = (0, r.mod)(o(a), i);
                    }
                    v[e] = t;
                  }
                  return v;
                }
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/hash-to-curve.js',
      },
    ],
    [
      3031,
      { './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.isNegativeLE = void 0),
                  (n.mod = d),
                  (n.pow = f),
                  (n.pow2 = function (e, t, n) {
                    let r = e;
                    for (; t-- > s; ) (r *= r), (r %= n);
                    return r;
                  }),
                  (n.invert = h),
                  (n.tonelliShanks = p),
                  (n.FpSqrt = m),
                  (n.validateField = function (e) {
                    const t = g.reduce((e, t) => ((e[t] = 'function'), e), {
                      ORDER: 'bigint',
                      MASK: 'bigint',
                      BYTES: 'isSafeInteger',
                      BITS: 'isSafeInteger',
                    });
                    return (0, r.validateObject)(e, t);
                  }),
                  (n.FpPow = y),
                  (n.FpInvertBatch = b),
                  (n.FpDiv = function (e, t, n) {
                    return e.mul(t, 'bigint' == typeof n ? h(n, e.ORDER) : e.inv(n));
                  }),
                  (n.FpLegendre = w),
                  (n.FpIsSquare = function (e) {
                    const t = w(e.ORDER);
                    return n => {
                      const r = t(e, n);
                      return e.eql(r, e.ZERO) || e.eql(r, e.ONE);
                    };
                  }),
                  (n.nLength = v),
                  (n.Field = function (e, t, n = !1, i = {}) {
                    if (e <= s) throw new Error('invalid field: expected ORDER > 0, got ' + e);
                    const { nBitLength: a, nByteLength: c } = v(e, t);
                    if (c > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');
                    let u;
                    const l = Object.freeze({
                      ORDER: e,
                      isLE: n,
                      BITS: a,
                      BYTES: c,
                      MASK: (0, r.bitMask)(a),
                      ZERO: s,
                      ONE: o,
                      create: t => d(t, e),
                      isValid: t => {
                        if ('bigint' != typeof t)
                          throw new Error(
                            'invalid field element: expected bigint, got ' + typeof t
                          );
                        return s <= t && t < e;
                      },
                      is0: e => e === s,
                      isOdd: e => (e & o) === o,
                      neg: t => d(-t, e),
                      eql: (e, t) => e === t,
                      sqr: t => d(t * t, e),
                      add: (t, n) => d(t + n, e),
                      sub: (t, n) => d(t - n, e),
                      mul: (t, n) => d(t * n, e),
                      pow: (e, t) => y(l, e, t),
                      div: (t, n) => d(t * h(n, e), e),
                      sqrN: e => e * e,
                      addN: (e, t) => e + t,
                      subN: (e, t) => e - t,
                      mulN: (e, t) => e * t,
                      inv: t => h(t, e),
                      sqrt: i.sqrt || (t => (u || (u = m(e)), u(l, t))),
                      invertBatch: e => b(l, e),
                      cmov: (e, t, n) => (n ? t : e),
                      toBytes: e =>
                        n ? (0, r.numberToBytesLE)(e, c) : (0, r.numberToBytesBE)(e, c),
                      fromBytes: e => {
                        if (e.length !== c)
                          throw new Error(
                            'Field.fromBytes: expected ' + c + ' bytes, got ' + e.length
                          );
                        return n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e);
                      },
                    });
                    return Object.freeze(l);
                  }),
                  (n.FpSqrtOdd = function (e, t) {
                    if (!e.isOdd) throw new Error("Field doesn't have isOdd");
                    const n = e.sqrt(t);
                    return e.isOdd(n) ? n : e.neg(n);
                  }),
                  (n.FpSqrtEven = function (e, t) {
                    if (!e.isOdd) throw new Error("Field doesn't have isOdd");
                    const n = e.sqrt(t);
                    return e.isOdd(n) ? e.neg(n) : n;
                  }),
                  (n.hashToPrivateScalar = function (e, t, n = !1) {
                    const s = (e = (0, r.ensureBytes)('privateHash', e)).length,
                      i = v(t).nByteLength + 8;
                    if (i < 24 || s < i || s > 1024)
                      throw new Error(
                        'hashToPrivateScalar: expected ' + i + '-1024 bytes of input, got ' + s
                      );
                    return d(n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e), t - o) + o;
                  }),
                  (n.getFieldBytesLength = _),
                  (n.getMinHashLength = E),
                  (n.mapHashToField = function (e, t, n = !1) {
                    const s = e.length,
                      i = _(t),
                      a = E(t);
                    if (s < 16 || s < a || s > 1024)
                      throw new Error('expected ' + a + '-1024 bytes of input, got ' + s);
                    const c =
                      d(n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e), t - o) + o;
                    return n ? (0, r.numberToBytesLE)(c, i) : (0, r.numberToBytesBE)(c, i);
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./utils.js'),
                  s = BigInt(0),
                  o = BigInt(1),
                  i = BigInt(2),
                  a = BigInt(3),
                  c = BigInt(4),
                  u = BigInt(5),
                  l = BigInt(8);
                function d(e, t) {
                  const n = e % t;
                  return n >= s ? n : t + n;
                }
                function f(e, t, n) {
                  if (t < s) throw new Error('invalid exponent, negatives unsupported');
                  if (n <= s) throw new Error('invalid modulus');
                  if (n === o) return s;
                  let r = o;
                  for (; t > s; ) t & o && (r = (r * e) % n), (e = (e * e) % n), (t >>= o);
                  return r;
                }
                function h(e, t) {
                  if (e === s) throw new Error('invert: expected non-zero number');
                  if (t <= s) throw new Error('invert: expected positive modulus, got ' + t);
                  let n = d(e, t),
                    r = t,
                    i = s,
                    a = o,
                    c = o,
                    u = s;
                  for (; n !== s; ) {
                    const e = r / n,
                      t = r % n,
                      s = i - c * e,
                      o = a - u * e;
                    (r = n), (n = t), (i = c), (a = u), (c = s), (u = o);
                  }
                  if (r !== o) throw new Error('invert: does not exist');
                  return d(i, t);
                }
                function p(e) {
                  const t = (e - o) / i;
                  let n, r, a;
                  for (n = e - o, r = 0; n % i === s; n /= i, r++);
                  for (a = i; a < e && f(a, t, e) !== e - o; a++)
                    if (a > 1e3) throw new Error('Cannot find square root: likely non-prime P');
                  if (1 === r) {
                    const t = (e + o) / c;
                    return function (e, n) {
                      const r = e.pow(n, t);
                      if (!e.eql(e.sqr(r), n)) throw new Error('Cannot find square root');
                      return r;
                    };
                  }
                  const u = (n + o) / i;
                  return function (e, s) {
                    if (e.pow(s, t) === e.neg(e.ONE)) throw new Error('Cannot find square root');
                    let i = r,
                      c = e.pow(e.mul(e.ONE, a), n),
                      l = e.pow(s, u),
                      d = e.pow(s, n);
                    for (; !e.eql(d, e.ONE); ) {
                      if (e.eql(d, e.ZERO)) return e.ZERO;
                      let t = 1;
                      for (let n = e.sqr(d); t < i && !e.eql(n, e.ONE); t++) n = e.sqr(n);
                      const n = e.pow(c, o << BigInt(i - t - 1));
                      (c = e.sqr(n)), (l = e.mul(l, n)), (d = e.mul(d, c)), (i = t);
                    }
                    return l;
                  };
                }
                function m(e) {
                  if (e % c === a) {
                    const t = (e + o) / c;
                    return function (e, n) {
                      const r = e.pow(n, t);
                      if (!e.eql(e.sqr(r), n)) throw new Error('Cannot find square root');
                      return r;
                    };
                  }
                  if (e % l === u) {
                    const t = (e - u) / l;
                    return function (e, n) {
                      const r = e.mul(n, i),
                        s = e.pow(r, t),
                        o = e.mul(n, s),
                        a = e.mul(e.mul(o, i), s),
                        c = e.mul(o, e.sub(a, e.ONE));
                      if (!e.eql(e.sqr(c), n)) throw new Error('Cannot find square root');
                      return c;
                    };
                  }
                  return p(e);
                }
                n.isNegativeLE = (e, t) => (d(e, t) & o) === o;
                const g = [
                  'create',
                  'isValid',
                  'is0',
                  'neg',
                  'inv',
                  'sqrt',
                  'sqr',
                  'eql',
                  'add',
                  'sub',
                  'mul',
                  'pow',
                  'div',
                  'addN',
                  'subN',
                  'mulN',
                  'sqrN',
                ];
                function y(e, t, n) {
                  if (n < s) throw new Error('invalid exponent, negatives unsupported');
                  if (n === s) return e.ONE;
                  if (n === o) return t;
                  let r = e.ONE,
                    i = t;
                  for (; n > s; ) n & o && (r = e.mul(r, i)), (i = e.sqr(i)), (n >>= o);
                  return r;
                }
                function b(e, t) {
                  const n = new Array(t.length),
                    r = t.reduce((t, r, s) => (e.is0(r) ? t : ((n[s] = t), e.mul(t, r))), e.ONE),
                    s = e.inv(r);
                  return (
                    t.reduceRight(
                      (t, r, s) => (e.is0(r) ? t : ((n[s] = e.mul(t, n[s])), e.mul(t, r))),
                      s
                    ),
                    n
                  );
                }
                function w(e) {
                  const t = (e - o) / i;
                  return (e, n) => e.pow(n, t);
                }
                function v(e, t) {
                  const n = t !== undefined ? t : e.toString(2).length;
                  return { nBitLength: n, nByteLength: Math.ceil(n / 8) };
                }
                function _(e) {
                  if ('bigint' != typeof e) throw new Error('field order must be bigint');
                  const t = e.toString(2).length;
                  return Math.ceil(t / 8);
                }
                function E(e) {
                  const t = _(e);
                  return t + Math.ceil(t / 2);
                }
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/modular.js',
      },
    ],
    [
      3032,
      { './modular.js': 3031, './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.montgomery = function (e) {
                    const t =
                        ((h = e),
                        (0, s.validateObject)(
                          h,
                          { a: 'bigint' },
                          {
                            montgomeryBits: 'isSafeInteger',
                            nByteLength: 'isSafeInteger',
                            adjustScalarBytes: 'function',
                            domain: 'function',
                            powPminus2: 'function',
                            Gu: 'bigint',
                          }
                        ),
                        Object.freeze({ ...h })),
                      { P: n } = t,
                      a = e => (0, r.mod)(e, n),
                      c = t.montgomeryBits,
                      u = Math.ceil(c / 8),
                      l = t.nByteLength,
                      d = t.adjustScalarBytes || (e => e),
                      f = t.powPminus2 || (e => (0, r.pow)(e, n - BigInt(2), n));
                    var h;
                    function p(e, t, n) {
                      const r = a(e * (t - n));
                      return [(t = a(t - r)), (n = a(n + r))];
                    }
                    const m = (t.a - BigInt(2)) / BigInt(4);
                    function g(e) {
                      return (0, s.numberToBytesLE)(a(e), u);
                    }
                    function y(e, t) {
                      const r = (function (e) {
                          const t = (0, s.ensureBytes)('u coordinate', e, u);
                          return 32 === l && (t[31] &= 127), (0, s.bytesToNumberLE)(t);
                        })(t),
                        h = (function (e, t) {
                          (0, s.aInRange)('u', e, o, n), (0, s.aInRange)('scalar', t, o, n);
                          const r = t,
                            u = e;
                          let l,
                            d = i,
                            h = o,
                            g = e,
                            y = i,
                            b = o;
                          for (let e = BigInt(c - 1); e >= o; e--) {
                            const t = (r >> e) & i;
                            (b ^= t),
                              (l = p(b, d, g)),
                              (d = l[0]),
                              (g = l[1]),
                              (l = p(b, h, y)),
                              (h = l[0]),
                              (y = l[1]),
                              (b = t);
                            const n = d + h,
                              s = a(n * n),
                              o = d - h,
                              c = a(o * o),
                              f = s - c,
                              w = g + y,
                              v = a((g - y) * n),
                              _ = a(w * o),
                              E = v + _,
                              S = v - _;
                            (g = a(E * E)),
                              (y = a(u * a(S * S))),
                              (d = a(s * c)),
                              (h = a(f * (s + a(m * f))));
                          }
                          (l = p(b, d, g)),
                            (d = l[0]),
                            (g = l[1]),
                            (l = p(b, h, y)),
                            (h = l[0]),
                            (y = l[1]);
                          const w = f(h);
                          return a(d * w);
                        })(
                          r,
                          (function (e) {
                            const t = (0, s.ensureBytes)('scalar', e),
                              n = t.length;
                            if (n !== u && n !== l)
                              throw new Error(
                                'invalid scalar, expected ' + u + ' or ' + l + ' bytes, got ' + n
                              );
                            return (0, s.bytesToNumberLE)(d(t));
                          })(e)
                        );
                      if (h === o) throw new Error('invalid private or public key received');
                      return g(h);
                    }
                    const b = g(t.Gu);
                    function w(e) {
                      return y(e, b);
                    }
                    return {
                      scalarMult: y,
                      scalarMultBase: w,
                      getSharedSecret: (e, t) => y(e, t),
                      getPublicKey: e => w(e),
                      utils: { randomPrivateKey: () => t.randomBytes(t.nByteLength) },
                      GuBytes: b,
                    };
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./modular.js'),
                  s = e('./utils.js'),
                  o = BigInt(0),
                  i = BigInt(1);
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/montgomery.js',
      },
    ],
    [
      3033,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.notImplemented = n.bitMask = void 0),
                  (n.isBytes = i),
                  (n.abytes = a),
                  (n.abool = function (e, t) {
                    if ('boolean' != typeof t) throw new Error(e + ' boolean expected, got ' + t);
                  }),
                  (n.bytesToHex = u),
                  (n.numberToHexUnpadded = l),
                  (n.hexToNumber = d),
                  (n.hexToBytes = p),
                  (n.bytesToNumberBE = function (e) {
                    return d(u(e));
                  }),
                  (n.bytesToNumberLE = function (e) {
                    return a(e), d(u(Uint8Array.from(e).reverse()));
                  }),
                  (n.numberToBytesBE = m),
                  (n.numberToBytesLE = function (e, t) {
                    return m(e, t).reverse();
                  }),
                  (n.numberToVarBytesBE = function (e) {
                    return p(l(e));
                  }),
                  (n.ensureBytes = function (e, t, n) {
                    let r;
                    if ('string' == typeof t)
                      try {
                        r = p(t);
                      } catch (t) {
                        throw new Error(e + ' must be hex string or Uint8Array, cause: ' + t);
                      }
                    else {
                      if (!i(t)) throw new Error(e + ' must be hex string or Uint8Array');
                      r = Uint8Array.from(t);
                    }
                    const s = r.length;
                    if ('number' == typeof n && s !== n)
                      throw new Error(e + ' of length ' + n + ' expected, got ' + s);
                    return r;
                  }),
                  (n.concatBytes = g),
                  (n.equalBytes = function (e, t) {
                    if (e.length !== t.length) return !1;
                    let n = 0;
                    for (let r = 0; r < e.length; r++) n |= e[r] ^ t[r];
                    return 0 === n;
                  }),
                  (n.utf8ToBytes = function (e) {
                    if ('string' != typeof e) throw new Error('string expected');
                    return new Uint8Array(new TextEncoder().encode(e));
                  }),
                  (n.inRange = b),
                  (n.aInRange = function (e, t, n, r) {
                    if (!b(t, n, r))
                      throw new Error(
                        'expected valid ' + e + ': ' + n + ' <= n < ' + r + ', got ' + t
                      );
                  }),
                  (n.bitLen = function (e) {
                    let t;
                    for (t = 0; e > r; e >>= s, t += 1);
                    return t;
                  }),
                  (n.bitGet = function (e, t) {
                    return (e >> BigInt(t)) & s;
                  }),
                  (n.bitSet = function (e, t, n) {
                    return e | ((n ? s : r) << BigInt(t));
                  }),
                  (n.createHmacDrbg = function (e, t, n) {
                    if ('number' != typeof e || e < 2) throw new Error('hashLen must be a number');
                    if ('number' != typeof t || t < 2) throw new Error('qByteLen must be a number');
                    if ('function' != typeof n) throw new Error('hmacFn must be a function');
                    let r = w(e),
                      s = w(e),
                      o = 0;
                    const i = () => {
                        r.fill(1), s.fill(0), (o = 0);
                      },
                      a = (...e) => n(s, r, ...e),
                      c = (e = w()) => {
                        (s = a(v([0]), e)),
                          (r = a()),
                          0 !== e.length && ((s = a(v([1]), e)), (r = a()));
                      },
                      u = () => {
                        if (o++ >= 1e3) throw new Error('drbg: tried 1000 values');
                        let e = 0;
                        const n = [];
                        for (; e < t; ) {
                          r = a();
                          const t = r.slice();
                          n.push(t), (e += r.length);
                        }
                        return g(...n);
                      };
                    return (e, t) => {
                      i(), c(e);
                      let n = undefined;
                      for (; !(n = t(u())); ) c();
                      return i(), n;
                    };
                  }),
                  (n.validateObject = function (e, t, n = {}) {
                    const r = (t, n, r) => {
                      const s = _[n];
                      if ('function' != typeof s) throw new Error('invalid validator function');
                      const o = e[t];
                      if (!((r && o === undefined) || s(o, e)))
                        throw new Error(
                          'param ' + String(t) + ' is invalid. Expected ' + n + ', got ' + o
                        );
                    };
                    for (const [e, n] of Object.entries(t)) r(e, n, !1);
                    for (const [e, t] of Object.entries(n)) r(e, t, !0);
                    return e;
                  }),
                  (n.memoized = function (e) {
                    const t = new WeakMap();
                    return (n, ...r) => {
                      const s = t.get(n);
                      if (s !== undefined) return s;
                      const o = e(n, ...r);
                      return t.set(n, o), o;
                    };
                  });
                const r = BigInt(0),
                  s = BigInt(1),
                  o = BigInt(2);
                function i(e) {
                  return (
                    e instanceof Uint8Array ||
                    (ArrayBuffer.isView(e) && 'Uint8Array' === e.constructor.name)
                  );
                }
                function a(e) {
                  if (!i(e)) throw new Error('Uint8Array expected');
                }
                const c = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                function u(e) {
                  a(e);
                  let t = '';
                  for (let n = 0; n < e.length; n++) t += c[e[n]];
                  return t;
                }
                function l(e) {
                  const t = e.toString(16);
                  return 1 & t.length ? '0' + t : t;
                }
                function d(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  return '' === e ? r : BigInt('0x' + e);
                }
                const f = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
                function h(e) {
                  return e >= f._0 && e <= f._9
                    ? e - f._0
                    : e >= f.A && e <= f.F
                      ? e - (f.A - 10)
                      : e >= f.a && e <= f.f
                        ? e - (f.a - 10)
                        : void 0;
                }
                function p(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  const t = e.length,
                    n = t / 2;
                  if (t % 2)
                    throw new Error('hex string expected, got unpadded hex of length ' + t);
                  const r = new Uint8Array(n);
                  for (let t = 0, s = 0; t < n; t++, s += 2) {
                    const n = h(e.charCodeAt(s)),
                      o = h(e.charCodeAt(s + 1));
                    if (n === undefined || o === undefined) {
                      const t = e[s] + e[s + 1];
                      throw new Error(
                        'hex string expected, got non-hex character "' + t + '" at index ' + s
                      );
                    }
                    r[t] = 16 * n + o;
                  }
                  return r;
                }
                function m(e, t) {
                  return p(e.toString(16).padStart(2 * t, '0'));
                }
                function g(...e) {
                  let t = 0;
                  for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    a(r), (t += r.length);
                  }
                  const n = new Uint8Array(t);
                  for (let t = 0, r = 0; t < e.length; t++) {
                    const s = e[t];
                    n.set(s, r), (r += s.length);
                  }
                  return n;
                }
                const y = e => 'bigint' == typeof e && r <= e;
                function b(e, t, n) {
                  return y(e) && y(t) && y(n) && t <= e && e < n;
                }
                n.bitMask = e => (o << BigInt(e - 1)) - s;
                const w = e => new Uint8Array(e),
                  v = e => Uint8Array.from(e);
                const _ = {
                  bigint: e => 'bigint' == typeof e,
                  function: e => 'function' == typeof e,
                  boolean: e => 'boolean' == typeof e,
                  string: e => 'string' == typeof e,
                  stringOrUint8Array: e => 'string' == typeof e || i(e),
                  isSafeInteger: e => Number.isSafeInteger(e),
                  array: e => Array.isArray(e),
                  field: (e, t) => t.Fp.isValid(e),
                  hash: e => 'function' == typeof e && Number.isSafeInteger(e.outputLen),
                };
                n.notImplemented = () => {
                  throw new Error('not implemented');
                };
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/utils.js',
      },
    ],
    [
      3034,
      { './curve.js': 3028, './modular.js': 3031, './utils.js': 3033 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.DER = n.DERErr = void 0),
                  (n.weierstrassPoints = g),
                  (n.weierstrass = function (e) {
                    const t = (function (e) {
                        const t = (0, r.validateBasic)(e);
                        return (
                          o.validateObject(
                            t,
                            { hash: 'hash', hmac: 'function', randomBytes: 'function' },
                            { bits2int: 'function', bits2int_modN: 'function', lowS: 'boolean' }
                          ),
                          Object.freeze({ lowS: !0, ...t })
                        );
                      })(e),
                      { Fp: c, n: u } = t,
                      l = c.BYTES + 1,
                      h = 2 * c.BYTES + 1;
                    function p(e) {
                      return (0, s.mod)(e, u);
                    }
                    function m(e) {
                      return (0, s.invert)(e, u);
                    }
                    const {
                        ProjectivePoint: y,
                        normPrivateKeyToScalar: b,
                        weierstrassEquation: w,
                        isWithinCurveOrder: v,
                      } = g({
                        ...t,
                        toBytes(e, t, n) {
                          const r = t.toAffine(),
                            s = c.toBytes(r.x),
                            a = o.concatBytes;
                          return (
                            (0, i.abool)('isCompressed', n),
                            n
                              ? a(Uint8Array.from([t.hasEvenY() ? 2 : 3]), s)
                              : a(Uint8Array.from([4]), s, c.toBytes(r.y))
                          );
                        },
                        fromBytes(e) {
                          const t = e.length,
                            n = e[0],
                            r = e.subarray(1);
                          if (t !== l || (2 !== n && 3 !== n)) {
                            if (t === h && 4 === n) {
                              return {
                                x: c.fromBytes(r.subarray(0, c.BYTES)),
                                y: c.fromBytes(r.subarray(c.BYTES, 2 * c.BYTES)),
                              };
                            }
                            throw new Error(
                              'invalid Point, expected length of ' +
                                l +
                                ', or uncompressed ' +
                                h +
                                ', got ' +
                                t
                            );
                          }
                          {
                            const e = o.bytesToNumberBE(r);
                            if (!o.inRange(e, f, c.ORDER)) throw new Error('Point is not on curve');
                            const t = w(e);
                            let s;
                            try {
                              s = c.sqrt(t);
                            } catch (e) {
                              const t = e instanceof Error ? ': ' + e.message : '';
                              throw new Error('Point is not on curve' + t);
                            }
                            return !(1 & ~n) !== ((s & f) === f) && (s = c.neg(s)), { x: e, y: s };
                          }
                        },
                      }),
                      _ = e => o.bytesToHex(o.numberToBytesBE(e, t.nByteLength));
                    function E(e) {
                      return e > u >> f;
                    }
                    const S = (e, t, n) => o.bytesToNumberBE(e.slice(t, n));
                    class x {
                      constructor(e, t, n) {
                        (this.r = e), (this.s = t), (this.recovery = n), this.assertValidity();
                      }
                      static fromCompact(e) {
                        const n = t.nByteLength;
                        return (
                          (e = (0, i.ensureBytes)('compactSignature', e, 2 * n)),
                          new x(S(e, 0, n), S(e, n, 2 * n))
                        );
                      }
                      static fromDER(e) {
                        const { r: t, s: r } = n.DER.toSig((0, i.ensureBytes)('DER', e));
                        return new x(t, r);
                      }
                      assertValidity() {
                        o.aInRange('r', this.r, f, u), o.aInRange('s', this.s, f, u);
                      }
                      addRecoveryBit(e) {
                        return new x(this.r, this.s, e);
                      }
                      recoverPublicKey(e) {
                        const { r: n, s: r, recovery: s } = this,
                          o = A((0, i.ensureBytes)('msgHash', e));
                        if (null == s || ![0, 1, 2, 3].includes(s))
                          throw new Error('recovery id invalid');
                        const a = 2 === s || 3 === s ? n + t.n : n;
                        if (a >= c.ORDER) throw new Error('recovery id 2 or 3 invalid');
                        const u = 1 & s ? '03' : '02',
                          l = y.fromHex(u + _(a)),
                          d = m(a),
                          f = p(-o * d),
                          h = p(r * d),
                          g = y.BASE.multiplyAndAddUnsafe(l, f, h);
                        if (!g) throw new Error('point at infinify');
                        return g.assertValidity(), g;
                      }
                      hasHighS() {
                        return E(this.s);
                      }
                      normalizeS() {
                        return this.hasHighS() ? new x(this.r, p(-this.s), this.recovery) : this;
                      }
                      toDERRawBytes() {
                        return o.hexToBytes(this.toDERHex());
                      }
                      toDERHex() {
                        return n.DER.hexFromSig({ r: this.r, s: this.s });
                      }
                      toCompactRawBytes() {
                        return o.hexToBytes(this.toCompactHex());
                      }
                      toCompactHex() {
                        return _(this.r) + _(this.s);
                      }
                    }
                    const T = {
                      isValidPrivateKey(e) {
                        try {
                          return b(e), !0;
                        } catch (e) {
                          return !1;
                        }
                      },
                      normPrivateKeyToScalar: b,
                      randomPrivateKey: () => {
                        const e = (0, s.getMinHashLength)(t.n);
                        return (0, s.mapHashToField)(t.randomBytes(e), t.n);
                      },
                      precompute: (e = 8, t = y.BASE) => (
                        t._setWindowSize(e), t.multiply(BigInt(3)), t
                      ),
                    };
                    function I(e) {
                      const t = o.isBytes(e),
                        n = 'string' == typeof e,
                        r = (t || n) && e.length;
                      return t
                        ? r === l || r === h
                        : n
                          ? r === 2 * l || r === 2 * h
                          : e instanceof y;
                    }
                    const k =
                        t.bits2int ||
                        function (e) {
                          if (e.length > 8192) throw new Error('input is too large');
                          const n = o.bytesToNumberBE(e),
                            r = 8 * e.length - t.nBitLength;
                          return r > 0 ? n >> BigInt(r) : n;
                        },
                      A =
                        t.bits2int_modN ||
                        function (e) {
                          return p(k(e));
                        },
                      C = o.bitMask(t.nBitLength);
                    function B(e) {
                      return (
                        o.aInRange('num < 2^' + t.nBitLength, e, d, C),
                        o.numberToBytesBE(e, t.nByteLength)
                      );
                    }
                    function O(e, n, r = j) {
                      if (['recovered', 'canonical'].some(e => e in r))
                        throw new Error('sign() legacy options not supported');
                      const { hash: s, randomBytes: u } = t;
                      let { lowS: l, prehash: h, extraEntropy: g } = r;
                      null == l && (l = !0),
                        (e = (0, i.ensureBytes)('msgHash', e)),
                        a(r),
                        h && (e = (0, i.ensureBytes)('prehashed msgHash', s(e)));
                      const w = A(e),
                        _ = b(n),
                        S = [B(_), B(w)];
                      if (null != g && !1 !== g) {
                        const e = !0 === g ? u(c.BYTES) : g;
                        S.push((0, i.ensureBytes)('extraEntropy', e));
                      }
                      const T = o.concatBytes(...S),
                        I = w;
                      return {
                        seed: T,
                        k2sig: function (e) {
                          const t = k(e);
                          if (!v(t)) return;
                          const n = m(t),
                            r = y.BASE.multiply(t).toAffine(),
                            s = p(r.x);
                          if (s === d) return;
                          const o = p(n * p(I + s * _));
                          if (o === d) return;
                          let i = (r.x === s ? 0 : 2) | Number(r.y & f),
                            a = o;
                          return (
                            l &&
                              E(o) &&
                              ((a = (function (e) {
                                return E(e) ? p(-e) : e;
                              })(o)),
                              (i ^= 1)),
                            new x(s, a, i)
                          );
                        },
                      };
                    }
                    const j = { lowS: t.lowS, prehash: !1 },
                      R = { lowS: t.lowS, prehash: !1 };
                    return (
                      y.BASE._setWindowSize(8),
                      {
                        CURVE: t,
                        getPublicKey: function (e, t = !0) {
                          return y.fromPrivateKey(e).toRawBytes(t);
                        },
                        getSharedSecret: function (e, t, n = !0) {
                          if (I(e)) throw new Error('first arg must be private key');
                          if (!I(t)) throw new Error('second arg must be public key');
                          return y.fromHex(t).multiply(b(e)).toRawBytes(n);
                        },
                        sign: function (e, n, r = j) {
                          const { seed: s, k2sig: i } = O(e, n, r),
                            a = t;
                          return o.createHmacDrbg(a.hash.outputLen, a.nByteLength, a.hmac)(s, i);
                        },
                        verify: function (e, r, s, c = R) {
                          const u = e;
                          (r = (0, i.ensureBytes)('msgHash', r)),
                            (s = (0, i.ensureBytes)('publicKey', s));
                          const { lowS: l, prehash: d, format: f } = c;
                          if ((a(c), 'strict' in c))
                            throw new Error('options.strict was renamed to lowS');
                          if (f !== undefined && 'compact' !== f && 'der' !== f)
                            throw new Error('format must be compact or der');
                          const h = 'string' == typeof u || o.isBytes(u),
                            g =
                              !h &&
                              !f &&
                              'object' == typeof u &&
                              null !== u &&
                              'bigint' == typeof u.r &&
                              'bigint' == typeof u.s;
                          if (!h && !g)
                            throw new Error(
                              'invalid signature, expected Uint8Array, hex string or Signature instance'
                            );
                          let b,
                            w = undefined;
                          try {
                            if ((g && (w = new x(u.r, u.s)), h)) {
                              try {
                                'compact' !== f && (w = x.fromDER(u));
                              } catch (e) {
                                if (!(e instanceof n.DER.Err)) throw e;
                              }
                              w || 'der' === f || (w = x.fromCompact(u));
                            }
                            b = y.fromHex(s);
                          } catch (e) {
                            return !1;
                          }
                          if (!w) return !1;
                          if (l && w.hasHighS()) return !1;
                          d && (r = t.hash(r));
                          const { r: v, s: _ } = w,
                            E = A(r),
                            S = m(_),
                            T = p(E * S),
                            I = p(v * S),
                            k = y.BASE.multiplyAndAddUnsafe(b, T, I)?.toAffine();
                          if (!k) return !1;
                          return p(k.x) === v;
                        },
                        ProjectivePoint: y,
                        Signature: x,
                        utils: T,
                      }
                    );
                  }),
                  (n.SWUFpSqrtRatio = y),
                  (n.mapToCurveSimpleSWU = function (e, t) {
                    if (
                      ((0, s.validateField)(e),
                      !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z))
                    )
                      throw new Error('mapToCurveSimpleSWU: invalid opts');
                    const n = y(e, t.Z);
                    if (!e.isOdd) throw new Error('Fp.isOdd is not implemented!');
                    return r => {
                      let s, o, i, a, c, u, l, d;
                      (s = e.sqr(r)),
                        (s = e.mul(s, t.Z)),
                        (o = e.sqr(s)),
                        (o = e.add(o, s)),
                        (i = e.add(o, e.ONE)),
                        (i = e.mul(i, t.B)),
                        (a = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO))),
                        (a = e.mul(a, t.A)),
                        (o = e.sqr(i)),
                        (u = e.sqr(a)),
                        (c = e.mul(u, t.A)),
                        (o = e.add(o, c)),
                        (o = e.mul(o, i)),
                        (u = e.mul(u, a)),
                        (c = e.mul(u, t.B)),
                        (o = e.add(o, c)),
                        (l = e.mul(s, i));
                      const { isValid: f, value: h } = n(o, u);
                      (d = e.mul(s, r)),
                        (d = e.mul(d, h)),
                        (l = e.cmov(l, i, f)),
                        (d = e.cmov(d, h, f));
                      const p = e.isOdd(r) === e.isOdd(d);
                      return (d = e.cmov(e.neg(d), d, p)), (l = e.div(l, a)), { x: l, y: d };
                    };
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./curve.js'),
                  s = e('./modular.js'),
                  o = e('./utils.js'),
                  i = e('./utils.js');
                function a(e) {
                  e.lowS !== undefined && (0, i.abool)('lowS', e.lowS),
                    e.prehash !== undefined && (0, i.abool)('prehash', e.prehash);
                }
                const { bytesToNumberBE: c, hexToBytes: u } = o;
                class l extends Error {
                  constructor(e = '') {
                    super(e);
                  }
                }
                (n.DERErr = l),
                  (n.DER = {
                    Err: l,
                    _tlv: {
                      encode: (e, t) => {
                        const { Err: r } = n.DER;
                        if (e < 0 || e > 256) throw new r('tlv.encode: wrong tag');
                        if (1 & t.length) throw new r('tlv.encode: unpadded data');
                        const s = t.length / 2,
                          i = o.numberToHexUnpadded(s);
                        if ((i.length / 2) & 128)
                          throw new r('tlv.encode: long form length too big');
                        const a = s > 127 ? o.numberToHexUnpadded((i.length / 2) | 128) : '';
                        return o.numberToHexUnpadded(e) + a + i + t;
                      },
                      decode(e, t) {
                        const { Err: r } = n.DER;
                        let s = 0;
                        if (e < 0 || e > 256) throw new r('tlv.encode: wrong tag');
                        if (t.length < 2 || t[s++] !== e) throw new r('tlv.decode: wrong tlv');
                        const o = t[s++];
                        let i = 0;
                        if (!!(128 & o)) {
                          const e = 127 & o;
                          if (!e) throw new r('tlv.decode(long): indefinite length not supported');
                          if (e > 4) throw new r('tlv.decode(long): byte length is too big');
                          const n = t.subarray(s, s + e);
                          if (n.length !== e) throw new r('tlv.decode: length bytes not complete');
                          if (0 === n[0]) throw new r('tlv.decode(long): zero leftmost byte');
                          for (const e of n) i = (i << 8) | e;
                          if (((s += e), i < 128))
                            throw new r('tlv.decode(long): not minimal encoding');
                        } else i = o;
                        const a = t.subarray(s, s + i);
                        if (a.length !== i) throw new r('tlv.decode: wrong value length');
                        return { v: a, l: t.subarray(s + i) };
                      },
                    },
                    _int: {
                      encode(e) {
                        const { Err: t } = n.DER;
                        if (e < d) throw new t('integer: negative integers are not allowed');
                        let r = o.numberToHexUnpadded(e);
                        if ((8 & Number.parseInt(r[0], 16) && (r = '00' + r), 1 & r.length))
                          throw new t('unexpected DER parsing assertion: unpadded hex');
                        return r;
                      },
                      decode(e) {
                        const { Err: t } = n.DER;
                        if (128 & e[0]) throw new t('invalid signature integer: negative');
                        if (0 === e[0] && !(128 & e[1]))
                          throw new t('invalid signature integer: unnecessary leading zero');
                        return c(e);
                      },
                    },
                    toSig(e) {
                      const { Err: t, _int: r, _tlv: s } = n.DER,
                        i = 'string' == typeof e ? u(e) : e;
                      o.abytes(i);
                      const { v: a, l: c } = s.decode(48, i);
                      if (c.length) throw new t('invalid signature: left bytes after parsing');
                      const { v: l, l: d } = s.decode(2, a),
                        { v: f, l: h } = s.decode(2, d);
                      if (h.length) throw new t('invalid signature: left bytes after parsing');
                      return { r: r.decode(l), s: r.decode(f) };
                    },
                    hexFromSig(e) {
                      const { _tlv: t, _int: r } = n.DER,
                        s = t.encode(2, r.encode(e.r)) + t.encode(2, r.encode(e.s));
                      return t.encode(48, s);
                    },
                  });
                const d = BigInt(0),
                  f = BigInt(1),
                  h = BigInt(2),
                  p = BigInt(3),
                  m = BigInt(4);
                function g(e) {
                  const t = (function (e) {
                      const t = (0, r.validateBasic)(e);
                      o.validateObject(
                        t,
                        { a: 'field', b: 'field' },
                        {
                          allowedPrivateKeyLengths: 'array',
                          wrapPrivateKey: 'boolean',
                          isTorsionFree: 'function',
                          clearCofactor: 'function',
                          allowInfinityPoint: 'boolean',
                          fromBytes: 'function',
                          toBytes: 'function',
                        }
                      );
                      const { endo: n, Fp: s, a: i } = t;
                      if (n) {
                        if (!s.eql(i, s.ZERO))
                          throw new Error(
                            'invalid endomorphism, can only be defined for Koblitz curves that have a=0'
                          );
                        if (
                          'object' != typeof n ||
                          'bigint' != typeof n.beta ||
                          'function' != typeof n.splitScalar
                        )
                          throw new Error(
                            'invalid endomorphism, expected beta: bigint and splitScalar: function'
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: n } = t,
                    a = (0, s.Field)(t.n, t.nBitLength),
                    c =
                      t.toBytes ||
                      ((e, t, r) => {
                        const s = t.toAffine();
                        return o.concatBytes(Uint8Array.from([4]), n.toBytes(s.x), n.toBytes(s.y));
                      }),
                    u =
                      t.fromBytes ||
                      (e => {
                        const t = e.subarray(1);
                        return {
                          x: n.fromBytes(t.subarray(0, n.BYTES)),
                          y: n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES)),
                        };
                      });
                  function l(e) {
                    const { a: r, b: s } = t,
                      o = n.sqr(e),
                      i = n.mul(o, e);
                    return n.add(n.add(i, n.mul(e, r)), s);
                  }
                  if (!n.eql(n.sqr(t.Gy), l(t.Gx)))
                    throw new Error('bad generator point: equation left != right');
                  function h(e) {
                    const {
                      allowedPrivateKeyLengths: n,
                      nByteLength: r,
                      wrapPrivateKey: a,
                      n: c,
                    } = t;
                    if (n && 'bigint' != typeof e) {
                      if (
                        (o.isBytes(e) && (e = o.bytesToHex(e)),
                        'string' != typeof e || !n.includes(e.length))
                      )
                        throw new Error('invalid private key');
                      e = e.padStart(2 * r, '0');
                    }
                    let u;
                    try {
                      u =
                        'bigint' == typeof e
                          ? e
                          : o.bytesToNumberBE((0, i.ensureBytes)('private key', e, r));
                    } catch (t) {
                      throw new Error(
                        'invalid private key, expected hex or ' + r + ' bytes, got ' + typeof e
                      );
                    }
                    return a && (u = (0, s.mod)(u, c)), o.aInRange('private key', u, f, c), u;
                  }
                  function m(e) {
                    if (!(e instanceof b)) throw new Error('ProjectivePoint expected');
                  }
                  const g = (0, i.memoized)((e, t) => {
                      const { px: r, py: s, pz: o } = e;
                      if (n.eql(o, n.ONE)) return { x: r, y: s };
                      const i = e.is0();
                      null == t && (t = i ? n.ONE : n.inv(o));
                      const a = n.mul(r, t),
                        c = n.mul(s, t),
                        u = n.mul(o, t);
                      if (i) return { x: n.ZERO, y: n.ZERO };
                      if (!n.eql(u, n.ONE)) throw new Error('invZ was invalid');
                      return { x: a, y: c };
                    }),
                    y = (0, i.memoized)(e => {
                      if (e.is0()) {
                        if (t.allowInfinityPoint && !n.is0(e.py)) return;
                        throw new Error('bad point: ZERO');
                      }
                      const { x: r, y: s } = e.toAffine();
                      if (!n.isValid(r) || !n.isValid(s))
                        throw new Error('bad point: x or y not FE');
                      const o = n.sqr(s),
                        i = l(r);
                      if (!n.eql(o, i)) throw new Error('bad point: equation left != right');
                      if (!e.isTorsionFree())
                        throw new Error('bad point: not in prime-order subgroup');
                      return !0;
                    });
                  class b {
                    constructor(e, t, r) {
                      if (((this.px = e), (this.py = t), (this.pz = r), null == e || !n.isValid(e)))
                        throw new Error('x required');
                      if (null == t || !n.isValid(t)) throw new Error('y required');
                      if (null == r || !n.isValid(r)) throw new Error('z required');
                      Object.freeze(this);
                    }
                    static fromAffine(e) {
                      const { x: t, y: r } = e || {};
                      if (!e || !n.isValid(t) || !n.isValid(r))
                        throw new Error('invalid affine point');
                      if (e instanceof b) throw new Error('projective point not allowed');
                      const s = e => n.eql(e, n.ZERO);
                      return s(t) && s(r) ? b.ZERO : new b(t, r, n.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      const t = n.invertBatch(e.map(e => e.pz));
                      return e.map((e, n) => e.toAffine(t[n])).map(b.fromAffine);
                    }
                    static fromHex(e) {
                      const t = b.fromAffine(u((0, i.ensureBytes)('pointHex', e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return b.BASE.multiply(h(e));
                    }
                    static msm(e, t) {
                      return (0, r.pippenger)(b, a, e, t);
                    }
                    _setWindowSize(e) {
                      v.setWindowSize(this, e);
                    }
                    assertValidity() {
                      y(this);
                    }
                    hasEvenY() {
                      const { y: e } = this.toAffine();
                      if (n.isOdd) return !n.isOdd(e);
                      throw new Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      m(e);
                      const { px: t, py: r, pz: s } = this,
                        { px: o, py: i, pz: a } = e,
                        c = n.eql(n.mul(t, a), n.mul(o, s)),
                        u = n.eql(n.mul(r, a), n.mul(i, s));
                      return c && u;
                    }
                    negate() {
                      return new b(this.px, n.neg(this.py), this.pz);
                    }
                    double() {
                      const { a: e, b: r } = t,
                        s = n.mul(r, p),
                        { px: o, py: i, pz: a } = this;
                      let c = n.ZERO,
                        u = n.ZERO,
                        l = n.ZERO,
                        d = n.mul(o, o),
                        f = n.mul(i, i),
                        h = n.mul(a, a),
                        m = n.mul(o, i);
                      return (
                        (m = n.add(m, m)),
                        (l = n.mul(o, a)),
                        (l = n.add(l, l)),
                        (c = n.mul(e, l)),
                        (u = n.mul(s, h)),
                        (u = n.add(c, u)),
                        (c = n.sub(f, u)),
                        (u = n.add(f, u)),
                        (u = n.mul(c, u)),
                        (c = n.mul(m, c)),
                        (l = n.mul(s, l)),
                        (h = n.mul(e, h)),
                        (m = n.sub(d, h)),
                        (m = n.mul(e, m)),
                        (m = n.add(m, l)),
                        (l = n.add(d, d)),
                        (d = n.add(l, d)),
                        (d = n.add(d, h)),
                        (d = n.mul(d, m)),
                        (u = n.add(u, d)),
                        (h = n.mul(i, a)),
                        (h = n.add(h, h)),
                        (d = n.mul(h, m)),
                        (c = n.sub(c, d)),
                        (l = n.mul(h, f)),
                        (l = n.add(l, l)),
                        (l = n.add(l, l)),
                        new b(c, u, l)
                      );
                    }
                    add(e) {
                      m(e);
                      const { px: r, py: s, pz: o } = this,
                        { px: i, py: a, pz: c } = e;
                      let u = n.ZERO,
                        l = n.ZERO,
                        d = n.ZERO;
                      const f = t.a,
                        h = n.mul(t.b, p);
                      let g = n.mul(r, i),
                        y = n.mul(s, a),
                        w = n.mul(o, c),
                        v = n.add(r, s),
                        _ = n.add(i, a);
                      (v = n.mul(v, _)), (_ = n.add(g, y)), (v = n.sub(v, _)), (_ = n.add(r, o));
                      let E = n.add(i, c);
                      return (
                        (_ = n.mul(_, E)),
                        (E = n.add(g, w)),
                        (_ = n.sub(_, E)),
                        (E = n.add(s, o)),
                        (u = n.add(a, c)),
                        (E = n.mul(E, u)),
                        (u = n.add(y, w)),
                        (E = n.sub(E, u)),
                        (d = n.mul(f, _)),
                        (u = n.mul(h, w)),
                        (d = n.add(u, d)),
                        (u = n.sub(y, d)),
                        (d = n.add(y, d)),
                        (l = n.mul(u, d)),
                        (y = n.add(g, g)),
                        (y = n.add(y, g)),
                        (w = n.mul(f, w)),
                        (_ = n.mul(h, _)),
                        (y = n.add(y, w)),
                        (w = n.sub(g, w)),
                        (w = n.mul(f, w)),
                        (_ = n.add(_, w)),
                        (g = n.mul(y, _)),
                        (l = n.add(l, g)),
                        (g = n.mul(E, _)),
                        (u = n.mul(v, u)),
                        (u = n.sub(u, g)),
                        (g = n.mul(v, y)),
                        (d = n.mul(E, d)),
                        (d = n.add(d, g)),
                        new b(u, l, d)
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(b.ZERO);
                    }
                    wNAF(e) {
                      return v.wNAFCached(this, e, b.normalizeZ);
                    }
                    multiplyUnsafe(e) {
                      const { endo: r, n: s } = t;
                      o.aInRange('scalar', e, d, s);
                      const i = b.ZERO;
                      if (e === d) return i;
                      if (this.is0() || e === f) return this;
                      if (!r || v.hasPrecomputes(this))
                        return v.wNAFCachedUnsafe(this, e, b.normalizeZ);
                      let { k1neg: a, k1: c, k2neg: u, k2: l } = r.splitScalar(e),
                        h = i,
                        p = i,
                        m = this;
                      for (; c > d || l > d; )
                        c & f && (h = h.add(m)),
                          l & f && (p = p.add(m)),
                          (m = m.double()),
                          (c >>= f),
                          (l >>= f);
                      return (
                        a && (h = h.negate()),
                        u && (p = p.negate()),
                        (p = new b(n.mul(p.px, r.beta), p.py, p.pz)),
                        h.add(p)
                      );
                    }
                    multiply(e) {
                      const { endo: r, n: s } = t;
                      let i, a;
                      if ((o.aInRange('scalar', e, f, s), r)) {
                        const { k1neg: t, k1: s, k2neg: o, k2: c } = r.splitScalar(e);
                        let { p: u, f: l } = this.wNAF(s),
                          { p: d, f: f } = this.wNAF(c);
                        (u = v.constTimeNegate(t, u)),
                          (d = v.constTimeNegate(o, d)),
                          (d = new b(n.mul(d.px, r.beta), d.py, d.pz)),
                          (i = u.add(d)),
                          (a = l.add(f));
                      } else {
                        const { p: t, f: n } = this.wNAF(e);
                        (i = t), (a = n);
                      }
                      return b.normalizeZ([i, a])[0];
                    }
                    multiplyAndAddUnsafe(e, t, n) {
                      const r = b.BASE,
                        s = (e, t) =>
                          t !== d && t !== f && e.equals(r) ? e.multiply(t) : e.multiplyUnsafe(t),
                        o = s(this, t).add(s(e, n));
                      return o.is0() ? undefined : o;
                    }
                    toAffine(e) {
                      return g(this, e);
                    }
                    isTorsionFree() {
                      const { h: e, isTorsionFree: n } = t;
                      if (e === f) return !0;
                      if (n) return n(b, this);
                      throw new Error(
                        'isTorsionFree() has not been declared for the elliptic curve'
                      );
                    }
                    clearCofactor() {
                      const { h: e, clearCofactor: n } = t;
                      return e === f ? this : n ? n(b, this) : this.multiplyUnsafe(t.h);
                    }
                    toRawBytes(e = !0) {
                      return (0, i.abool)('isCompressed', e), this.assertValidity(), c(b, this, e);
                    }
                    toHex(e = !0) {
                      return (0, i.abool)('isCompressed', e), o.bytesToHex(this.toRawBytes(e));
                    }
                  }
                  (b.BASE = new b(t.Gx, t.Gy, n.ONE)), (b.ZERO = new b(n.ZERO, n.ONE, n.ZERO));
                  const w = t.nBitLength,
                    v = (0, r.wNAF)(b, t.endo ? Math.ceil(w / 2) : w);
                  return {
                    CURVE: t,
                    ProjectivePoint: b,
                    normPrivateKeyToScalar: h,
                    weierstrassEquation: l,
                    isWithinCurveOrder: function (e) {
                      return o.inRange(e, f, t.n);
                    },
                  };
                }
                function y(e, t) {
                  const n = e.ORDER;
                  let r = d;
                  for (let e = n - f; e % h === d; e /= h) r += f;
                  const s = r,
                    o = h << (s - f - f),
                    i = o * h,
                    a = (n - f) / i,
                    c = (a - f) / h,
                    u = i - f,
                    l = o,
                    g = e.pow(t, a),
                    y = e.pow(t, (a + f) / h);
                  let b = (t, n) => {
                    let r = g,
                      o = e.pow(n, u),
                      i = e.sqr(o);
                    i = e.mul(i, n);
                    let a = e.mul(t, i);
                    (a = e.pow(a, c)), (a = e.mul(a, o)), (o = e.mul(a, n)), (i = e.mul(a, t));
                    let d = e.mul(i, o);
                    a = e.pow(d, l);
                    let p = e.eql(a, e.ONE);
                    (o = e.mul(i, y)),
                      (a = e.mul(d, r)),
                      (i = e.cmov(o, i, p)),
                      (d = e.cmov(a, d, p));
                    for (let t = s; t > f; t--) {
                      let n = t - h;
                      n = h << (n - f);
                      let s = e.pow(d, n);
                      const a = e.eql(s, e.ONE);
                      (o = e.mul(i, r)),
                        (r = e.mul(r, r)),
                        (s = e.mul(d, r)),
                        (i = e.cmov(o, i, a)),
                        (d = e.cmov(s, d, a));
                    }
                    return { isValid: p, value: i };
                  };
                  if (e.ORDER % m === p) {
                    const n = (e.ORDER - p) / m,
                      r = e.sqrt(e.neg(t));
                    b = (t, s) => {
                      let o = e.sqr(s);
                      const i = e.mul(t, s);
                      o = e.mul(o, i);
                      let a = e.pow(o, n);
                      a = e.mul(a, i);
                      const c = e.mul(a, r),
                        u = e.mul(e.sqr(a), s),
                        l = e.eql(u, t);
                      return { isValid: l, value: e.cmov(c, a, l) };
                    };
                  }
                  return b;
                }
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/abstract/weierstrass.js',
      },
    ],
    [
      3035,
      {
        './abstract/curve.js': 3028,
        './abstract/edwards.js': 3029,
        './abstract/hash-to-curve.js': 3030,
        './abstract/modular.js': 3031,
        './abstract/montgomery.js': 3032,
        './abstract/utils.js': 3033,
        '@noble/hashes/sha512': 3042,
        '@noble/hashes/utils': 3043,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.hash_to_ristretto255 =
                    n.hashToRistretto255 =
                    n.RistrettoPoint =
                    n.encodeToCurve =
                    n.hashToCurve =
                    n.edwardsToMontgomery =
                    n.x25519 =
                    n.ed25519ph =
                    n.ed25519ctx =
                    n.ed25519 =
                    n.ED25519_TORSION_SUBGROUP =
                      void 0),
                  (n.edwardsToMontgomeryPub = T),
                  (n.edwardsToMontgomeryPriv = function (e) {
                    const t = S.hash(e.subarray(0, 32));
                    return S.adjustScalarBytes(t).subarray(0, 32);
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/sha512'),
                  s = e('@noble/hashes/utils'),
                  o = e('./abstract/curve.js'),
                  i = e('./abstract/edwards.js'),
                  a = e('./abstract/hash-to-curve.js'),
                  c = e('./abstract/modular.js'),
                  u = e('./abstract/montgomery.js'),
                  l = e('./abstract/utils.js'),
                  d = BigInt(
                    '57896044618658097711785492504343953926634992332820282019728792003956564819949'
                  ),
                  f = BigInt(
                    '19681161376707505956807079304988542015446066515923890162744021073123829784752'
                  ),
                  h = BigInt(0),
                  p = BigInt(1),
                  m = BigInt(2),
                  g = BigInt(3),
                  y = BigInt(5),
                  b = BigInt(8);
                function w(e) {
                  const t = BigInt(10),
                    n = BigInt(20),
                    r = BigInt(40),
                    s = BigInt(80),
                    o = d,
                    i = (((e * e) % o) * e) % o,
                    a = ((0, c.pow2)(i, m, o) * i) % o,
                    u = ((0, c.pow2)(a, p, o) * e) % o,
                    l = ((0, c.pow2)(u, y, o) * u) % o,
                    f = ((0, c.pow2)(l, t, o) * l) % o,
                    h = ((0, c.pow2)(f, n, o) * f) % o,
                    g = ((0, c.pow2)(h, r, o) * h) % o,
                    b = ((0, c.pow2)(g, s, o) * g) % o,
                    w = ((0, c.pow2)(b, s, o) * g) % o,
                    v = ((0, c.pow2)(w, t, o) * l) % o;
                  return { pow_p_5_8: ((0, c.pow2)(v, m, o) * e) % o, b2: i };
                }
                function v(e) {
                  return (e[0] &= 248), (e[31] &= 127), (e[31] |= 64), e;
                }
                function _(e, t) {
                  const n = d,
                    r = (0, c.mod)(t * t * t, n),
                    s = w(e * (0, c.mod)(r * r * t, n)).pow_p_5_8;
                  let o = (0, c.mod)(e * r * s, n);
                  const i = (0, c.mod)(t * o * o, n),
                    a = o,
                    u = (0, c.mod)(o * f, n),
                    l = i === e,
                    h = i === (0, c.mod)(-e, n),
                    p = i === (0, c.mod)(-e * f, n);
                  return (
                    l && (o = a),
                    (h || p) && (o = u),
                    (0, c.isNegativeLE)(o, n) && (o = (0, c.mod)(-o, n)),
                    { isValid: l || h, value: o }
                  );
                }
                n.ED25519_TORSION_SUBGROUP = [
                  '0100000000000000000000000000000000000000000000000000000000000000',
                  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',
                  '0000000000000000000000000000000000000000000000000000000000000080',
                  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',
                  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',
                  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',
                  '0000000000000000000000000000000000000000000000000000000000000000',
                  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',
                ];
                const E = (() => (0, c.Field)(d, undefined, !0))(),
                  S = (() => ({
                    a: BigInt(-1),
                    d: BigInt(
                      '37095705934669439343138083508754565189542113879843219016388785533085940283555'
                    ),
                    Fp: E,
                    n: BigInt(
                      '7237005577332262213973186563042994240857116359379907606001950938285454250989'
                    ),
                    h: b,
                    Gx: BigInt(
                      '15112221349535400772501151409588531511454012693041857206046113283949847762202'
                    ),
                    Gy: BigInt(
                      '46316835694926478169428394003475163141307993866256225615783033603165251855960'
                    ),
                    hash: r.sha512,
                    randomBytes: s.randomBytes,
                    adjustScalarBytes: v,
                    uvRatio: _,
                  }))();
                function x(e, t, n) {
                  if (t.length > 255) throw new Error('Context is too big');
                  return (0, s.concatBytes)(
                    (0, s.utf8ToBytes)('SigEd25519 no Ed25519 collisions'),
                    new Uint8Array([n ? 1 : 0, t.length]),
                    t,
                    e
                  );
                }
                function T(e) {
                  const { y: t } = n.ed25519.ExtendedPoint.fromHex(e),
                    r = BigInt(1);
                  return E.toBytes(E.create((r + t) * E.inv(r - t)));
                }
                (n.ed25519 = (0, i.twistedEdwards)(S)),
                  (n.ed25519ctx = (0, i.twistedEdwards)({ ...S, domain: x })),
                  (n.ed25519ph = (0, i.twistedEdwards)(
                    Object.assign({}, S, { domain: x, prehash: r.sha512 })
                  )),
                  (n.x25519 = (0, u.montgomery)({
                    P: d,
                    a: BigInt(486662),
                    montgomeryBits: 255,
                    nByteLength: 32,
                    Gu: BigInt(9),
                    powPminus2: e => {
                      const t = d,
                        { pow_p_5_8: n, b2: r } = w(e);
                      return (0, c.mod)((0, c.pow2)(n, g, t) * r, t);
                    },
                    adjustScalarBytes: v,
                    randomBytes: s.randomBytes,
                  })),
                  (n.edwardsToMontgomery = T);
                const I = (() => (E.ORDER + g) / b)(),
                  k = (() => E.pow(m, I))(),
                  A = (() => E.sqrt(E.neg(E.ONE)))();
                const C = (() => (0, c.FpSqrtEven)(E, E.neg(BigInt(486664))))();
                function B(e) {
                  const {
                    xMn: t,
                    xMd: n,
                    yMn: r,
                    yMd: s,
                  } = (function (e) {
                    const t = (E.ORDER - y) / b,
                      n = BigInt(486662);
                    let r = E.sqr(e);
                    r = E.mul(r, m);
                    let s = E.add(r, E.ONE),
                      o = E.neg(n),
                      i = E.sqr(s),
                      a = E.mul(i, s),
                      c = E.mul(r, n);
                    (c = E.mul(c, o)), (c = E.add(c, i)), (c = E.mul(c, o));
                    let u = E.sqr(a);
                    (i = E.sqr(u)), (u = E.mul(u, a)), (u = E.mul(u, c)), (i = E.mul(i, u));
                    let l = E.pow(i, t);
                    l = E.mul(l, u);
                    let d = E.mul(l, A);
                    (i = E.sqr(l)), (i = E.mul(i, a));
                    let f = E.eql(i, c),
                      h = E.cmov(d, l, f),
                      g = E.mul(o, r),
                      w = E.mul(l, e);
                    w = E.mul(w, k);
                    let v = E.mul(w, A),
                      _ = E.mul(c, r);
                    (i = E.sqr(w)), (i = E.mul(i, a));
                    let S = E.eql(i, _),
                      x = E.cmov(v, w, S);
                    (i = E.sqr(h)), (i = E.mul(i, a));
                    let T = E.eql(i, c),
                      I = E.cmov(g, o, T),
                      C = E.cmov(x, h, T),
                      B = E.isOdd(C);
                    return (C = E.cmov(C, E.neg(C), T !== B)), { xMn: I, xMd: s, yMn: C, yMd: p };
                  })(e);
                  let o = E.mul(t, s);
                  o = E.mul(o, C);
                  let i = E.mul(n, r),
                    a = E.sub(t, n),
                    c = E.add(t, n),
                    u = E.mul(i, c),
                    l = E.eql(u, E.ZERO);
                  (o = E.cmov(o, E.ZERO, l)),
                    (i = E.cmov(i, E.ONE, l)),
                    (a = E.cmov(a, E.ONE, l)),
                    (c = E.cmov(c, E.ONE, l));
                  const d = E.invertBatch([i, c]);
                  return { x: E.mul(o, d[0]), y: E.mul(a, d[1]) };
                }
                const O = (() =>
                  (0, a.createHasher)(n.ed25519.ExtendedPoint, e => B(e[0]), {
                    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',
                    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',
                    p: E.ORDER,
                    m: 1,
                    k: 128,
                    expand: 'xmd',
                    hash: r.sha512,
                  }))();
                function j(e) {
                  if (!(e instanceof W)) throw new Error('RistrettoPoint expected');
                }
                (n.hashToCurve = O.hashToCurve), (n.encodeToCurve = O.encodeToCurve);
                const R = f,
                  P = BigInt(
                    '25063068953384623474111414158702152701244531502492656460079210482610430750235'
                  ),
                  N = BigInt(
                    '54469307008909316920995813868745141605393597292927456921205312896311721017578'
                  ),
                  L = BigInt(
                    '1159843021668779879193775521855586647937357759715417654439879720876111806838'
                  ),
                  M = BigInt(
                    '40440834346308536858101042469323190826248399146238708352240133220865137265952'
                  ),
                  D = e => _(p, e),
                  F = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),
                  H = e => n.ed25519.CURVE.Fp.create((0, l.bytesToNumberLE)(e) & F);
                function U(e) {
                  const { d: t } = n.ed25519.CURVE,
                    r = n.ed25519.CURVE.Fp.ORDER,
                    s = n.ed25519.CURVE.Fp.create,
                    o = s(R * e * e),
                    i = s((o + p) * L);
                  let a = BigInt(-1);
                  const u = s((a - t * o) * s(o + t));
                  let { isValid: l, value: d } = _(i, u),
                    f = s(d * e);
                  (0, c.isNegativeLE)(f, r) || (f = s(-f)), l || (d = f), l || (a = o);
                  const h = s(a * (o - p) * M - u),
                    m = d * d,
                    g = s((d + d) * u),
                    y = s(h * P),
                    b = s(p - m),
                    w = s(p + m);
                  return new n.ed25519.ExtendedPoint(s(g * w), s(b * y), s(y * w), s(g * b));
                }
                class W {
                  constructor(e) {
                    this.ep = e;
                  }
                  static fromAffine(e) {
                    return new W(n.ed25519.ExtendedPoint.fromAffine(e));
                  }
                  static hashToCurve(e) {
                    e = (0, l.ensureBytes)('ristrettoHash', e, 64);
                    const t = U(H(e.slice(0, 32))),
                      n = U(H(e.slice(32, 64)));
                    return new W(t.add(n));
                  }
                  static fromHex(e) {
                    e = (0, l.ensureBytes)('ristrettoHex', e, 32);
                    const { a: t, d: r } = n.ed25519.CURVE,
                      s = n.ed25519.CURVE.Fp.ORDER,
                      o = n.ed25519.CURVE.Fp.create,
                      i = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint',
                      a = H(e);
                    if (
                      !(0, l.equalBytes)((0, l.numberToBytesLE)(a, 32), e) ||
                      (0, c.isNegativeLE)(a, s)
                    )
                      throw new Error(i);
                    const u = o(a * a),
                      d = o(p + t * u),
                      f = o(p - t * u),
                      m = o(d * d),
                      g = o(f * f),
                      y = o(t * r * m - g),
                      { isValid: b, value: w } = D(o(y * g)),
                      v = o(w * f),
                      _ = o(w * v * y);
                    let E = o((a + a) * v);
                    (0, c.isNegativeLE)(E, s) && (E = o(-E));
                    const S = o(d * _),
                      x = o(E * S);
                    if (!b || (0, c.isNegativeLE)(x, s) || S === h) throw new Error(i);
                    return new W(new n.ed25519.ExtendedPoint(E, S, p, x));
                  }
                  static msm(e, t) {
                    const r = (0, c.Field)(n.ed25519.CURVE.n, n.ed25519.CURVE.nBitLength);
                    return (0, o.pippenger)(W, r, e, t);
                  }
                  toRawBytes() {
                    let { ex: e, ey: t, ez: r, et: s } = this.ep;
                    const o = n.ed25519.CURVE.Fp.ORDER,
                      i = n.ed25519.CURVE.Fp.create,
                      a = i(i(r + t) * i(r - t)),
                      u = i(e * t),
                      d = i(u * u),
                      { value: f } = D(i(a * d)),
                      h = i(f * a),
                      p = i(f * u),
                      m = i(h * p * s);
                    let g;
                    if ((0, c.isNegativeLE)(s * m, o)) {
                      let n = i(t * R),
                        r = i(e * R);
                      (e = n), (t = r), (g = i(h * N));
                    } else g = p;
                    (0, c.isNegativeLE)(e * m, o) && (t = i(-t));
                    let y = i((r - t) * g);
                    return (0, c.isNegativeLE)(y, o) && (y = i(-y)), (0, l.numberToBytesLE)(y, 32);
                  }
                  toHex() {
                    return (0, l.bytesToHex)(this.toRawBytes());
                  }
                  toString() {
                    return this.toHex();
                  }
                  equals(e) {
                    j(e);
                    const { ex: t, ey: r } = this.ep,
                      { ex: s, ey: o } = e.ep,
                      i = n.ed25519.CURVE.Fp.create,
                      a = i(t * o) === i(r * s),
                      c = i(r * o) === i(t * s);
                    return a || c;
                  }
                  add(e) {
                    return j(e), new W(this.ep.add(e.ep));
                  }
                  subtract(e) {
                    return j(e), new W(this.ep.subtract(e.ep));
                  }
                  multiply(e) {
                    return new W(this.ep.multiply(e));
                  }
                  multiplyUnsafe(e) {
                    return new W(this.ep.multiplyUnsafe(e));
                  }
                  double() {
                    return new W(this.ep.double());
                  }
                  negate() {
                    return new W(this.ep.negate());
                  }
                }
                n.RistrettoPoint =
                  (W.BASE || (W.BASE = new W(n.ed25519.ExtendedPoint.BASE)),
                  W.ZERO || (W.ZERO = new W(n.ed25519.ExtendedPoint.ZERO)),
                  W);
                (n.hashToRistretto255 = (e, t) => {
                  const n = t.DST,
                    o = 'string' == typeof n ? (0, s.utf8ToBytes)(n) : n,
                    i = (0, a.expand_message_xmd)(e, o, 64, r.sha512);
                  return W.hashToCurve(i);
                }),
                  (n.hash_to_ristretto255 = n.hashToRistretto255);
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/ed25519.js',
      },
    ],
    [
      3036,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  if (!Number.isSafeInteger(e) || e < 0)
                    throw new Error('positive integer expected, got ' + e);
                }
                function s(e, ...t) {
                  if (
                    !(
                      (n = e) instanceof Uint8Array ||
                      (ArrayBuffer.isView(n) && 'Uint8Array' === n.constructor.name)
                    )
                  )
                    throw new Error('Uint8Array expected');
                  var n;
                  if (t.length > 0 && !t.includes(e.length))
                    throw new Error(
                      'Uint8Array expected of length ' + t + ', got length=' + e.length
                    );
                }
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.anumber = r),
                  (n.abytes = s),
                  (n.ahash = function (e) {
                    if ('function' != typeof e || 'function' != typeof e.create)
                      throw new Error('Hash should be wrapped by utils.wrapConstructor');
                    r(e.outputLen), r(e.blockLen);
                  }),
                  (n.aexists = function (e, t = !0) {
                    if (e.destroyed) throw new Error('Hash instance has been destroyed');
                    if (t && e.finished) throw new Error('Hash#digest() has already been called');
                  }),
                  (n.aoutput = function (e, t) {
                    s(e);
                    const n = t.outputLen;
                    if (e.length < n)
                      throw new Error('digestInto() expects output buffer of length at least ' + n);
                  });
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js',
      },
    ],
    [
      3037,
      { './_assert.js': 3036, './utils.js': 3043 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.HashMD = void 0),
                  (n.setBigUint64 = o),
                  (n.Chi = function (e, t, n) {
                    return (e & t) ^ (~e & n);
                  }),
                  (n.Maj = function (e, t, n) {
                    return (e & t) ^ (e & n) ^ (t & n);
                  });
                const r = e('./_assert.js'),
                  s = e('./utils.js');
                function o(e, t, n, r) {
                  if ('function' == typeof e.setBigUint64) return e.setBigUint64(t, n, r);
                  const s = BigInt(32),
                    o = BigInt(4294967295),
                    i = Number((n >> s) & o),
                    a = Number(n & o),
                    c = r ? 4 : 0,
                    u = r ? 0 : 4;
                  e.setUint32(t + c, i, r), e.setUint32(t + u, a, r);
                }
                class i extends s.Hash {
                  constructor(e, t, n, r) {
                    super(),
                      (this.blockLen = e),
                      (this.outputLen = t),
                      (this.padOffset = n),
                      (this.isLE = r),
                      (this.finished = !1),
                      (this.length = 0),
                      (this.pos = 0),
                      (this.destroyed = !1),
                      (this.buffer = new Uint8Array(e)),
                      (this.view = (0, s.createView)(this.buffer));
                  }
                  update(e) {
                    (0, r.aexists)(this);
                    const { view: t, buffer: n, blockLen: o } = this,
                      i = (e = (0, s.toBytes)(e)).length;
                    for (let r = 0; r < i; ) {
                      const a = Math.min(o - this.pos, i - r);
                      if (a !== o)
                        n.set(e.subarray(r, r + a), this.pos),
                          (this.pos += a),
                          (r += a),
                          this.pos === o && (this.process(t, 0), (this.pos = 0));
                      else {
                        const t = (0, s.createView)(e);
                        for (; o <= i - r; r += o) this.process(t, r);
                      }
                    }
                    return (this.length += e.length), this.roundClean(), this;
                  }
                  digestInto(e) {
                    (0, r.aexists)(this), (0, r.aoutput)(e, this), (this.finished = !0);
                    const { buffer: t, view: n, blockLen: i, isLE: a } = this;
                    let { pos: c } = this;
                    (t[c++] = 128),
                      this.buffer.subarray(c).fill(0),
                      this.padOffset > i - c && (this.process(n, 0), (c = 0));
                    for (let e = c; e < i; e++) t[e] = 0;
                    o(n, i - 8, BigInt(8 * this.length), a), this.process(n, 0);
                    const u = (0, s.createView)(e),
                      l = this.outputLen;
                    if (l % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');
                    const d = l / 4,
                      f = this.get();
                    if (d > f.length) throw new Error('_sha2: outputLen bigger than state');
                    for (let e = 0; e < d; e++) u.setUint32(4 * e, f[e], a);
                  }
                  digest() {
                    const { buffer: e, outputLen: t } = this;
                    this.digestInto(e);
                    const n = e.slice(0, t);
                    return this.destroy(), n;
                  }
                  _cloneInto(e) {
                    e || (e = new this.constructor()), e.set(...this.get());
                    const {
                      blockLen: t,
                      buffer: n,
                      length: r,
                      finished: s,
                      destroyed: o,
                      pos: i,
                    } = this;
                    return (
                      (e.length = r),
                      (e.pos = i),
                      (e.finished = s),
                      (e.destroyed = o),
                      r % t && e.buffer.set(n),
                      e
                    );
                  }
                }
                n.HashMD = i;
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/_md.js',
      },
    ],
    [
      3038,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.add5L =
                    n.add5H =
                    n.add4H =
                    n.add4L =
                    n.add3H =
                    n.add3L =
                    n.rotlBL =
                    n.rotlBH =
                    n.rotlSL =
                    n.rotlSH =
                    n.rotr32L =
                    n.rotr32H =
                    n.rotrBL =
                    n.rotrBH =
                    n.rotrSL =
                    n.rotrSH =
                    n.shrSL =
                    n.shrSH =
                    n.toBig =
                      void 0),
                  (n.fromBig = o),
                  (n.split = i),
                  (n.add = v);
                const r = BigInt(2 ** 32 - 1),
                  s = BigInt(32);
                function o(e, t = !1) {
                  return t
                    ? { h: Number(e & r), l: Number((e >> s) & r) }
                    : { h: 0 | Number((e >> s) & r), l: 0 | Number(e & r) };
                }
                function i(e, t = !1) {
                  let n = new Uint32Array(e.length),
                    r = new Uint32Array(e.length);
                  for (let s = 0; s < e.length; s++) {
                    const { h: i, l: a } = o(e[s], t);
                    [n[s], r[s]] = [i, a];
                  }
                  return [n, r];
                }
                const a = (e, t) => (BigInt(e >>> 0) << s) | BigInt(t >>> 0);
                n.toBig = a;
                const c = (e, t, n) => e >>> n;
                n.shrSH = c;
                const u = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.shrSL = u;
                const l = (e, t, n) => (e >>> n) | (t << (32 - n));
                n.rotrSH = l;
                const d = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.rotrSL = d;
                const f = (e, t, n) => (e << (64 - n)) | (t >>> (n - 32));
                n.rotrBH = f;
                const h = (e, t, n) => (e >>> (n - 32)) | (t << (64 - n));
                n.rotrBL = h;
                const p = (e, t) => t;
                n.rotr32H = p;
                const m = (e, t) => e;
                n.rotr32L = m;
                const g = (e, t, n) => (e << n) | (t >>> (32 - n));
                n.rotlSH = g;
                const y = (e, t, n) => (t << n) | (e >>> (32 - n));
                n.rotlSL = y;
                const b = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n));
                n.rotlBH = b;
                const w = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
                function v(e, t, n, r) {
                  const s = (t >>> 0) + (r >>> 0);
                  return { h: (e + n + ((s / 2 ** 32) | 0)) | 0, l: 0 | s };
                }
                n.rotlBL = w;
                const _ = (e, t, n) => (e >>> 0) + (t >>> 0) + (n >>> 0);
                n.add3L = _;
                const E = (e, t, n, r) => (t + n + r + ((e / 2 ** 32) | 0)) | 0;
                n.add3H = E;
                const S = (e, t, n, r) => (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0);
                n.add4L = S;
                const x = (e, t, n, r, s) => (t + n + r + s + ((e / 2 ** 32) | 0)) | 0;
                n.add4H = x;
                const T = (e, t, n, r, s) =>
                  (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0) + (s >>> 0);
                n.add5L = T;
                const I = (e, t, n, r, s, o) => (t + n + r + s + o + ((e / 2 ** 32) | 0)) | 0;
                n.add5H = I;
                const k = {
                  fromBig: o,
                  split: i,
                  toBig: a,
                  shrSH: c,
                  shrSL: u,
                  rotrSH: l,
                  rotrSL: d,
                  rotrBH: f,
                  rotrBL: h,
                  rotr32H: p,
                  rotr32L: m,
                  rotlSH: g,
                  rotlSL: y,
                  rotlBH: b,
                  rotlBL: w,
                  add: v,
                  add3L: _,
                  add3H: E,
                  add4L: S,
                  add4H: x,
                  add5H: I,
                  add5L: T,
                };
                n.default = k;
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js',
      },
    ],
    [
      3039,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.crypto = void 0),
                  (n.crypto =
                    'object' == typeof globalThis && 'crypto' in globalThis
                      ? globalThis.crypto
                      : undefined);
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js',
      },
    ],
    [
      3040,
      { './_assert.js': 3036, './utils.js': 3043 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.hmac = n.HMAC = void 0);
                const r = e('./_assert.js'),
                  s = e('./utils.js');
                class o extends s.Hash {
                  constructor(e, t) {
                    super(), (this.finished = !1), (this.destroyed = !1), (0, r.ahash)(e);
                    const n = (0, s.toBytes)(t);
                    if (((this.iHash = e.create()), 'function' != typeof this.iHash.update))
                      throw new Error('Expected instance of class which extends utils.Hash');
                    (this.blockLen = this.iHash.blockLen), (this.outputLen = this.iHash.outputLen);
                    const o = this.blockLen,
                      i = new Uint8Array(o);
                    i.set(n.length > o ? e.create().update(n).digest() : n);
                    for (let e = 0; e < i.length; e++) i[e] ^= 54;
                    this.iHash.update(i), (this.oHash = e.create());
                    for (let e = 0; e < i.length; e++) i[e] ^= 106;
                    this.oHash.update(i), i.fill(0);
                  }
                  update(e) {
                    return (0, r.aexists)(this), this.iHash.update(e), this;
                  }
                  digestInto(e) {
                    (0, r.aexists)(this),
                      (0, r.abytes)(e, this.outputLen),
                      (this.finished = !0),
                      this.iHash.digestInto(e),
                      this.oHash.update(e),
                      this.oHash.digestInto(e),
                      this.destroy();
                  }
                  digest() {
                    const e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e;
                  }
                  _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    const {
                      oHash: t,
                      iHash: n,
                      finished: r,
                      destroyed: s,
                      blockLen: o,
                      outputLen: i,
                    } = this;
                    return (
                      (e.finished = r),
                      (e.destroyed = s),
                      (e.blockLen = o),
                      (e.outputLen = i),
                      (e.oHash = t._cloneInto(e.oHash)),
                      (e.iHash = n._cloneInto(e.iHash)),
                      e
                    );
                  }
                  destroy() {
                    (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
                  }
                }
                n.HMAC = o;
                (n.hmac = (e, t, n) => new o(e, t).update(n).digest()),
                  (n.hmac.create = (e, t) => new o(e, t));
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/hmac.js',
      },
    ],
    [
      3041,
      { './_md.js': 3037, './utils.js': 3043 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha224 = n.sha256 = n.SHA256 = void 0);
                const r = e('./_md.js'),
                  s = e('./utils.js'),
                  o = new Uint32Array([
                    1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
                    2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
                    1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
                    264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882,
                    2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993,
                    338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051,
                    2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
                    3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556,
                    883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222,
                    2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
                    3329325298,
                  ]),
                  i = new Uint32Array([
                    1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924,
                    528734635, 1541459225,
                  ]),
                  a = new Uint32Array(64);
                class c extends r.HashMD {
                  constructor() {
                    super(64, 32, 8, !1),
                      (this.A = 0 | i[0]),
                      (this.B = 0 | i[1]),
                      (this.C = 0 | i[2]),
                      (this.D = 0 | i[3]),
                      (this.E = 0 | i[4]),
                      (this.F = 0 | i[5]),
                      (this.G = 0 | i[6]),
                      (this.H = 0 | i[7]);
                  }
                  get() {
                    const { A: e, B: t, C: n, D: r, E: s, F: o, G: i, H: a } = this;
                    return [e, t, n, r, s, o, i, a];
                  }
                  set(e, t, n, r, s, o, i, a) {
                    (this.A = 0 | e),
                      (this.B = 0 | t),
                      (this.C = 0 | n),
                      (this.D = 0 | r),
                      (this.E = 0 | s),
                      (this.F = 0 | o),
                      (this.G = 0 | i),
                      (this.H = 0 | a);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) a[n] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                      const t = a[e - 15],
                        n = a[e - 2],
                        r = (0, s.rotr)(t, 7) ^ (0, s.rotr)(t, 18) ^ (t >>> 3),
                        o = (0, s.rotr)(n, 17) ^ (0, s.rotr)(n, 19) ^ (n >>> 10);
                      a[e] = (o + a[e - 7] + r + a[e - 16]) | 0;
                    }
                    let { A: n, B: i, C: c, D: u, E: l, F: d, G: f, H: h } = this;
                    for (let e = 0; e < 64; e++) {
                      const t =
                          (h +
                            ((0, s.rotr)(l, 6) ^ (0, s.rotr)(l, 11) ^ (0, s.rotr)(l, 25)) +
                            (0, r.Chi)(l, d, f) +
                            o[e] +
                            a[e]) |
                          0,
                        p =
                          (((0, s.rotr)(n, 2) ^ (0, s.rotr)(n, 13) ^ (0, s.rotr)(n, 22)) +
                            (0, r.Maj)(n, i, c)) |
                          0;
                      (h = f),
                        (f = d),
                        (d = l),
                        (l = (u + t) | 0),
                        (u = c),
                        (c = i),
                        (i = n),
                        (n = (t + p) | 0);
                    }
                    (n = (n + this.A) | 0),
                      (i = (i + this.B) | 0),
                      (c = (c + this.C) | 0),
                      (u = (u + this.D) | 0),
                      (l = (l + this.E) | 0),
                      (d = (d + this.F) | 0),
                      (f = (f + this.G) | 0),
                      (h = (h + this.H) | 0),
                      this.set(n, i, c, u, l, d, f, h);
                  }
                  roundClean() {
                    a.fill(0);
                  }
                  destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
                  }
                }
                n.SHA256 = c;
                class u extends c {
                  constructor() {
                    super(),
                      (this.A = -1056596264),
                      (this.B = 914150663),
                      (this.C = 812702999),
                      (this.D = -150054599),
                      (this.E = -4191439),
                      (this.F = 1750603025),
                      (this.G = 1694076839),
                      (this.H = -1090891868),
                      (this.outputLen = 28);
                  }
                }
                (n.sha256 = (0, s.wrapConstructor)(() => new c())),
                  (n.sha224 = (0, s.wrapConstructor)(() => new u()));
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/sha256.js',
      },
    ],
    [
      3042,
      { './_md.js': 3037, './_u64.js': 3038, './utils.js': 3043 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha384 =
                    n.sha512_256 =
                    n.sha512_224 =
                    n.sha512 =
                    n.SHA384 =
                    n.SHA512_256 =
                    n.SHA512_224 =
                    n.SHA512 =
                      void 0);
                const r = e('./_md.js'),
                  s = e('./_u64.js'),
                  o = e('./utils.js'),
                  [i, a] = (() =>
                    s.default.split(
                      [
                        '0x428a2f98d728ae22',
                        '0x7137449123ef65cd',
                        '0xb5c0fbcfec4d3b2f',
                        '0xe9b5dba58189dbbc',
                        '0x3956c25bf348b538',
                        '0x59f111f1b605d019',
                        '0x923f82a4af194f9b',
                        '0xab1c5ed5da6d8118',
                        '0xd807aa98a3030242',
                        '0x12835b0145706fbe',
                        '0x243185be4ee4b28c',
                        '0x550c7dc3d5ffb4e2',
                        '0x72be5d74f27b896f',
                        '0x80deb1fe3b1696b1',
                        '0x9bdc06a725c71235',
                        '0xc19bf174cf692694',
                        '0xe49b69c19ef14ad2',
                        '0xefbe4786384f25e3',
                        '0x0fc19dc68b8cd5b5',
                        '0x240ca1cc77ac9c65',
                        '0x2de92c6f592b0275',
                        '0x4a7484aa6ea6e483',
                        '0x5cb0a9dcbd41fbd4',
                        '0x76f988da831153b5',
                        '0x983e5152ee66dfab',
                        '0xa831c66d2db43210',
                        '0xb00327c898fb213f',
                        '0xbf597fc7beef0ee4',
                        '0xc6e00bf33da88fc2',
                        '0xd5a79147930aa725',
                        '0x06ca6351e003826f',
                        '0x142929670a0e6e70',
                        '0x27b70a8546d22ffc',
                        '0x2e1b21385c26c926',
                        '0x4d2c6dfc5ac42aed',
                        '0x53380d139d95b3df',
                        '0x650a73548baf63de',
                        '0x766a0abb3c77b2a8',
                        '0x81c2c92e47edaee6',
                        '0x92722c851482353b',
                        '0xa2bfe8a14cf10364',
                        '0xa81a664bbc423001',
                        '0xc24b8b70d0f89791',
                        '0xc76c51a30654be30',
                        '0xd192e819d6ef5218',
                        '0xd69906245565a910',
                        '0xf40e35855771202a',
                        '0x106aa07032bbd1b8',
                        '0x19a4c116b8d2d0c8',
                        '0x1e376c085141ab53',
                        '0x2748774cdf8eeb99',
                        '0x34b0bcb5e19b48a8',
                        '0x391c0cb3c5c95a63',
                        '0x4ed8aa4ae3418acb',
                        '0x5b9cca4f7763e373',
                        '0x682e6ff3d6b2b8a3',
                        '0x748f82ee5defb2fc',
                        '0x78a5636f43172f60',
                        '0x84c87814a1f0ab72',
                        '0x8cc702081a6439ec',
                        '0x90befffa23631e28',
                        '0xa4506cebde82bde9',
                        '0xbef9a3f7b2c67915',
                        '0xc67178f2e372532b',
                        '0xca273eceea26619c',
                        '0xd186b8c721c0c207',
                        '0xeada7dd6cde0eb1e',
                        '0xf57d4f7fee6ed178',
                        '0x06f067aa72176fba',
                        '0x0a637dc5a2c898a6',
                        '0x113f9804bef90dae',
                        '0x1b710b35131c471b',
                        '0x28db77f523047d84',
                        '0x32caab7b40c72493',
                        '0x3c9ebe0a15c9bebc',
                        '0x431d67c49c100d4c',
                        '0x4cc5d4becb3e42b6',
                        '0x597f299cfc657e2a',
                        '0x5fcb6fab3ad6faec',
                        '0x6c44198c4a475817',
                      ].map(e => BigInt(e))
                    ))(),
                  c = new Uint32Array(80),
                  u = new Uint32Array(80);
                class l extends r.HashMD {
                  constructor() {
                    super(128, 64, 16, !1),
                      (this.Ah = 1779033703),
                      (this.Al = -205731576),
                      (this.Bh = -1150833019),
                      (this.Bl = -2067093701),
                      (this.Ch = 1013904242),
                      (this.Cl = -23791573),
                      (this.Dh = -1521486534),
                      (this.Dl = 1595750129),
                      (this.Eh = 1359893119),
                      (this.El = -1377402159),
                      (this.Fh = -1694144372),
                      (this.Fl = 725511199),
                      (this.Gh = 528734635),
                      (this.Gl = -79577749),
                      (this.Hh = 1541459225),
                      (this.Hl = 327033209);
                  }
                  get() {
                    const {
                      Ah: e,
                      Al: t,
                      Bh: n,
                      Bl: r,
                      Ch: s,
                      Cl: o,
                      Dh: i,
                      Dl: a,
                      Eh: c,
                      El: u,
                      Fh: l,
                      Fl: d,
                      Gh: f,
                      Gl: h,
                      Hh: p,
                      Hl: m,
                    } = this;
                    return [e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m];
                  }
                  set(e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m) {
                    (this.Ah = 0 | e),
                      (this.Al = 0 | t),
                      (this.Bh = 0 | n),
                      (this.Bl = 0 | r),
                      (this.Ch = 0 | s),
                      (this.Cl = 0 | o),
                      (this.Dh = 0 | i),
                      (this.Dl = 0 | a),
                      (this.Eh = 0 | c),
                      (this.El = 0 | u),
                      (this.Fh = 0 | l),
                      (this.Fl = 0 | d),
                      (this.Gh = 0 | f),
                      (this.Gl = 0 | h),
                      (this.Hh = 0 | p),
                      (this.Hl = 0 | m);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4)
                      (c[n] = e.getUint32(t)), (u[n] = e.getUint32((t += 4)));
                    for (let e = 16; e < 80; e++) {
                      const t = 0 | c[e - 15],
                        n = 0 | u[e - 15],
                        r =
                          s.default.rotrSH(t, n, 1) ^
                          s.default.rotrSH(t, n, 8) ^
                          s.default.shrSH(t, n, 7),
                        o =
                          s.default.rotrSL(t, n, 1) ^
                          s.default.rotrSL(t, n, 8) ^
                          s.default.shrSL(t, n, 7),
                        i = 0 | c[e - 2],
                        a = 0 | u[e - 2],
                        l =
                          s.default.rotrSH(i, a, 19) ^
                          s.default.rotrBH(i, a, 61) ^
                          s.default.shrSH(i, a, 6),
                        d =
                          s.default.rotrSL(i, a, 19) ^
                          s.default.rotrBL(i, a, 61) ^
                          s.default.shrSL(i, a, 6),
                        f = s.default.add4L(o, d, u[e - 7], u[e - 16]),
                        h = s.default.add4H(f, r, l, c[e - 7], c[e - 16]);
                      (c[e] = 0 | h), (u[e] = 0 | f);
                    }
                    let {
                      Ah: n,
                      Al: r,
                      Bh: o,
                      Bl: l,
                      Ch: d,
                      Cl: f,
                      Dh: h,
                      Dl: p,
                      Eh: m,
                      El: g,
                      Fh: y,
                      Fl: b,
                      Gh: w,
                      Gl: v,
                      Hh: _,
                      Hl: E,
                    } = this;
                    for (let e = 0; e < 80; e++) {
                      const t =
                          s.default.rotrSH(m, g, 14) ^
                          s.default.rotrSH(m, g, 18) ^
                          s.default.rotrBH(m, g, 41),
                        S =
                          s.default.rotrSL(m, g, 14) ^
                          s.default.rotrSL(m, g, 18) ^
                          s.default.rotrBL(m, g, 41),
                        x = (m & y) ^ (~m & w),
                        T = (g & b) ^ (~g & v),
                        I = s.default.add5L(E, S, T, a[e], u[e]),
                        k = s.default.add5H(I, _, t, x, i[e], c[e]),
                        A = 0 | I,
                        C =
                          s.default.rotrSH(n, r, 28) ^
                          s.default.rotrBH(n, r, 34) ^
                          s.default.rotrBH(n, r, 39),
                        B =
                          s.default.rotrSL(n, r, 28) ^
                          s.default.rotrBL(n, r, 34) ^
                          s.default.rotrBL(n, r, 39),
                        O = (n & o) ^ (n & d) ^ (o & d),
                        j = (r & l) ^ (r & f) ^ (l & f);
                      (_ = 0 | w),
                        (E = 0 | v),
                        (w = 0 | y),
                        (v = 0 | b),
                        (y = 0 | m),
                        (b = 0 | g),
                        ({ h: m, l: g } = s.default.add(0 | h, 0 | p, 0 | k, 0 | A)),
                        (h = 0 | d),
                        (p = 0 | f),
                        (d = 0 | o),
                        (f = 0 | l),
                        (o = 0 | n),
                        (l = 0 | r);
                      const R = s.default.add3L(A, B, j);
                      (n = s.default.add3H(R, k, C, O)), (r = 0 | R);
                    }
                    ({ h: n, l: r } = s.default.add(0 | this.Ah, 0 | this.Al, 0 | n, 0 | r)),
                      ({ h: o, l: l } = s.default.add(0 | this.Bh, 0 | this.Bl, 0 | o, 0 | l)),
                      ({ h: d, l: f } = s.default.add(0 | this.Ch, 0 | this.Cl, 0 | d, 0 | f)),
                      ({ h: h, l: p } = s.default.add(0 | this.Dh, 0 | this.Dl, 0 | h, 0 | p)),
                      ({ h: m, l: g } = s.default.add(0 | this.Eh, 0 | this.El, 0 | m, 0 | g)),
                      ({ h: y, l: b } = s.default.add(0 | this.Fh, 0 | this.Fl, 0 | y, 0 | b)),
                      ({ h: w, l: v } = s.default.add(0 | this.Gh, 0 | this.Gl, 0 | w, 0 | v)),
                      ({ h: _, l: E } = s.default.add(0 | this.Hh, 0 | this.Hl, 0 | _, 0 | E)),
                      this.set(n, r, o, l, d, f, h, p, m, g, y, b, w, v, _, E);
                  }
                  roundClean() {
                    c.fill(0), u.fill(0);
                  }
                  destroy() {
                    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                  }
                }
                n.SHA512 = l;
                class d extends l {
                  constructor() {
                    super(),
                      (this.Ah = -1942145080),
                      (this.Al = 424955298),
                      (this.Bh = 1944164710),
                      (this.Bl = -1982016298),
                      (this.Ch = 502970286),
                      (this.Cl = 855612546),
                      (this.Dh = 1738396948),
                      (this.Dl = 1479516111),
                      (this.Eh = 258812777),
                      (this.El = 2077511080),
                      (this.Fh = 2011393907),
                      (this.Fl = 79989058),
                      (this.Gh = 1067287976),
                      (this.Gl = 1780299464),
                      (this.Hh = 286451373),
                      (this.Hl = -1848208735),
                      (this.outputLen = 28);
                  }
                }
                n.SHA512_224 = d;
                class f extends l {
                  constructor() {
                    super(),
                      (this.Ah = 573645204),
                      (this.Al = -64227540),
                      (this.Bh = -1621794909),
                      (this.Bl = -934517566),
                      (this.Ch = 596883563),
                      (this.Cl = 1867755857),
                      (this.Dh = -1774684391),
                      (this.Dl = 1497426621),
                      (this.Eh = -1775747358),
                      (this.El = -1467023389),
                      (this.Fh = -1101128155),
                      (this.Fl = 1401305490),
                      (this.Gh = 721525244),
                      (this.Gl = 746961066),
                      (this.Hh = 246885852),
                      (this.Hl = -2117784414),
                      (this.outputLen = 32);
                  }
                }
                n.SHA512_256 = f;
                class h extends l {
                  constructor() {
                    super(),
                      (this.Ah = -876896931),
                      (this.Al = -1056596264),
                      (this.Bh = 1654270250),
                      (this.Bl = 914150663),
                      (this.Ch = -1856437926),
                      (this.Cl = 812702999),
                      (this.Dh = 355462360),
                      (this.Dl = -150054599),
                      (this.Eh = 1731405415),
                      (this.El = -4191439),
                      (this.Fh = -1900787065),
                      (this.Fl = 1750603025),
                      (this.Gh = -619958771),
                      (this.Gl = 1694076839),
                      (this.Hh = 1203062813),
                      (this.Hl = -1090891868),
                      (this.outputLen = 48);
                  }
                }
                (n.SHA384 = h),
                  (n.sha512 = (0, o.wrapConstructor)(() => new l())),
                  (n.sha512_224 = (0, o.wrapConstructor)(() => new d())),
                  (n.sha512_256 = (0, o.wrapConstructor)(() => new f())),
                  (n.sha384 = (0, o.wrapConstructor)(() => new h()));
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js',
      },
    ],
    [
      3043,
      { './_assert.js': 3036, '@noble/hashes/crypto': 3039 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.Hash = n.nextTick = n.byteSwapIfBE = n.isLE = void 0),
                  (n.isBytes = function (e) {
                    return (
                      e instanceof Uint8Array ||
                      (ArrayBuffer.isView(e) && 'Uint8Array' === e.constructor.name)
                    );
                  }),
                  (n.u8 = function (e) {
                    return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                  }),
                  (n.u32 = function (e) {
                    return new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
                  }),
                  (n.createView = function (e) {
                    return new DataView(e.buffer, e.byteOffset, e.byteLength);
                  }),
                  (n.rotr = function (e, t) {
                    return (e << (32 - t)) | (e >>> t);
                  }),
                  (n.rotl = function (e, t) {
                    return (e << t) | ((e >>> (32 - t)) >>> 0);
                  }),
                  (n.byteSwap = o),
                  (n.byteSwap32 = function (e) {
                    for (let t = 0; t < e.length; t++) e[t] = o(e[t]);
                  }),
                  (n.bytesToHex = function (e) {
                    (0, s.abytes)(e);
                    let t = '';
                    for (let n = 0; n < e.length; n++) t += i[e[n]];
                    return t;
                  }),
                  (n.hexToBytes = function (e) {
                    if ('string' != typeof e)
                      throw new Error('hex string expected, got ' + typeof e);
                    const t = e.length,
                      n = t / 2;
                    if (t % 2)
                      throw new Error('hex string expected, got unpadded hex of length ' + t);
                    const r = new Uint8Array(n);
                    for (let t = 0, s = 0; t < n; t++, s += 2) {
                      const n = c(e.charCodeAt(s)),
                        o = c(e.charCodeAt(s + 1));
                      if (n === undefined || o === undefined) {
                        const t = e[s] + e[s + 1];
                        throw new Error(
                          'hex string expected, got non-hex character "' + t + '" at index ' + s
                        );
                      }
                      r[t] = 16 * n + o;
                    }
                    return r;
                  }),
                  (n.asyncLoop = async function (e, t, r) {
                    let s = Date.now();
                    for (let o = 0; o < e; o++) {
                      r(o);
                      const e = Date.now() - s;
                      (e >= 0 && e < t) || (await (0, n.nextTick)(), (s += e));
                    }
                  }),
                  (n.utf8ToBytes = u),
                  (n.toBytes = l),
                  (n.concatBytes = function (...e) {
                    let t = 0;
                    for (let n = 0; n < e.length; n++) {
                      const r = e[n];
                      (0, s.abytes)(r), (t += r.length);
                    }
                    const n = new Uint8Array(t);
                    for (let t = 0, r = 0; t < e.length; t++) {
                      const s = e[t];
                      n.set(s, r), (r += s.length);
                    }
                    return n;
                  }),
                  (n.checkOpts = function (e, t) {
                    if (t !== undefined && '[object Object]' !== {}.toString.call(t))
                      throw new Error('Options should be object or undefined');
                    return Object.assign(e, t);
                  }),
                  (n.wrapConstructor = function (e) {
                    const t = t => e().update(l(t)).digest(),
                      n = e();
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = () => e()),
                      t
                    );
                  }),
                  (n.wrapConstructorWithOpts = function (e) {
                    const t = (t, n) => e(n).update(l(t)).digest(),
                      n = e({});
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = t => e(t)),
                      t
                    );
                  }),
                  (n.wrapXOFConstructorWithOpts = function (e) {
                    const t = (t, n) => e(n).update(l(t)).digest(),
                      n = e({});
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = t => e(t)),
                      t
                    );
                  }),
                  (n.randomBytes = function (e = 32) {
                    if (r.crypto && 'function' == typeof r.crypto.getRandomValues)
                      return r.crypto.getRandomValues(new Uint8Array(e));
                    if (r.crypto && 'function' == typeof r.crypto.randomBytes)
                      return r.crypto.randomBytes(e);
                    throw new Error('crypto.getRandomValues must be defined');
                  });
                const r = e('@noble/hashes/crypto'),
                  s = e('./_assert.js');
                function o(e) {
                  return (
                    ((e << 24) & 4278190080) |
                    ((e << 8) & 16711680) |
                    ((e >>> 8) & 65280) |
                    ((e >>> 24) & 255)
                  );
                }
                (n.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]),
                  (n.byteSwapIfBE = n.isLE ? e => e : e => o(e));
                const i = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                const a = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
                function c(e) {
                  return e >= a._0 && e <= a._9
                    ? e - a._0
                    : e >= a.A && e <= a.F
                      ? e - (a.A - 10)
                      : e >= a.a && e <= a.f
                        ? e - (a.a - 10)
                        : void 0;
                }
                function u(e) {
                  if ('string' != typeof e)
                    throw new Error('utf8ToBytes expected string, got ' + typeof e);
                  return new Uint8Array(new TextEncoder().encode(e));
                }
                function l(e) {
                  return 'string' == typeof e && (e = u(e)), (0, s.abytes)(e), e;
                }
                n.nextTick = async () => {};
                n.Hash = class {
                  clone() {
                    return this._cloneInto();
                  }
                };
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves>@noble/hashes',
        file: 'node_modules/@noble/curves/node_modules/@noble/hashes/utils.js',
      },
    ],
    [
      3044,
      {
        './_shortw_utils.js': 3027,
        './abstract/hash-to-curve.js': 3030,
        './abstract/modular.js': 3031,
        './abstract/utils.js': 3033,
        './abstract/weierstrass.js': 3034,
        '@noble/hashes/sha256': 3041,
        '@noble/hashes/utils': 3043,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.encodeToCurve = n.hashToCurve = n.schnorr = n.secp256k1 = void 0);
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/sha256'),
                  s = e('@noble/hashes/utils'),
                  o = e('./_shortw_utils.js'),
                  i = e('./abstract/hash-to-curve.js'),
                  a = e('./abstract/modular.js'),
                  c = e('./abstract/utils.js'),
                  u = e('./abstract/weierstrass.js'),
                  l = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),
                  d = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),
                  f = BigInt(1),
                  h = BigInt(2),
                  p = (e, t) => (e + t / h) / t;
                function m(e) {
                  const t = l,
                    n = BigInt(3),
                    r = BigInt(6),
                    s = BigInt(11),
                    o = BigInt(22),
                    i = BigInt(23),
                    c = BigInt(44),
                    u = BigInt(88),
                    d = (e * e * e) % t,
                    f = (d * d * e) % t,
                    p = ((0, a.pow2)(f, n, t) * f) % t,
                    m = ((0, a.pow2)(p, n, t) * f) % t,
                    y = ((0, a.pow2)(m, h, t) * d) % t,
                    b = ((0, a.pow2)(y, s, t) * y) % t,
                    w = ((0, a.pow2)(b, o, t) * b) % t,
                    v = ((0, a.pow2)(w, c, t) * w) % t,
                    _ = ((0, a.pow2)(v, u, t) * v) % t,
                    E = ((0, a.pow2)(_, c, t) * w) % t,
                    S = ((0, a.pow2)(E, n, t) * f) % t,
                    x = ((0, a.pow2)(S, i, t) * b) % t,
                    T = ((0, a.pow2)(x, r, t) * d) % t,
                    I = (0, a.pow2)(T, h, t);
                  if (!g.eql(g.sqr(I), e)) throw new Error('Cannot find square root');
                  return I;
                }
                const g = (0, a.Field)(l, undefined, undefined, { sqrt: m });
                n.secp256k1 = (0, o.createCurve)(
                  {
                    a: BigInt(0),
                    b: BigInt(7),
                    Fp: g,
                    n: d,
                    Gx: BigInt(
                      '55066263022277343669578718895168534326250603453777594175500187360389116729240'
                    ),
                    Gy: BigInt(
                      '32670510020758816978083085130507043184471273380659243275938904335757337482424'
                    ),
                    h: BigInt(1),
                    lowS: !0,
                    endo: {
                      beta: BigInt(
                        '0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'
                      ),
                      splitScalar: e => {
                        const t = d,
                          n = BigInt('0x3086d221a7d46bcde86c90e49284eb15'),
                          r = -f * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),
                          s = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),
                          o = n,
                          i = BigInt('0x100000000000000000000000000000000'),
                          c = p(o * e, t),
                          u = p(-r * e, t);
                        let l = (0, a.mod)(e - c * n - u * s, t),
                          h = (0, a.mod)(-c * r - u * o, t);
                        const m = l > i,
                          g = h > i;
                        if ((m && (l = t - l), g && (h = t - h), l > i || h > i))
                          throw new Error('splitScalar: Endomorphism failed, k=' + e);
                        return { k1neg: m, k1: l, k2neg: g, k2: h };
                      },
                    },
                  },
                  r.sha256
                );
                const y = BigInt(0),
                  b = {};
                function w(e, ...t) {
                  let n = b[e];
                  if (n === undefined) {
                    const t = (0, r.sha256)(Uint8Array.from(e, e => e.charCodeAt(0)));
                    (n = (0, c.concatBytes)(t, t)), (b[e] = n);
                  }
                  return (0, r.sha256)((0, c.concatBytes)(n, ...t));
                }
                const v = e => e.toRawBytes(!0).slice(1),
                  _ = e => (0, c.numberToBytesBE)(e, 32),
                  E = e => (0, a.mod)(e, l),
                  S = e => (0, a.mod)(e, d),
                  x = n.secp256k1.ProjectivePoint,
                  T = (e, t, n) => x.BASE.multiplyAndAddUnsafe(e, t, n);
                function I(e) {
                  let t = n.secp256k1.utils.normPrivateKeyToScalar(e),
                    r = x.fromPrivateKey(t);
                  return { scalar: r.hasEvenY() ? t : S(-t), bytes: v(r) };
                }
                function k(e) {
                  (0, c.aInRange)('x', e, f, l);
                  const t = E(e * e);
                  let n = m(E(t * e + BigInt(7)));
                  n % h !== y && (n = E(-n));
                  const r = new x(e, n, f);
                  return r.assertValidity(), r;
                }
                const A = c.bytesToNumberBE;
                function C(...e) {
                  return S(A(w('BIP0340/challenge', ...e)));
                }
                function B(e) {
                  return I(e).bytes;
                }
                function O(e, t, n = (0, s.randomBytes)(32)) {
                  const r = (0, c.ensureBytes)('message', e),
                    { bytes: o, scalar: i } = I(t),
                    a = (0, c.ensureBytes)('auxRand', n, 32),
                    u = _(i ^ A(w('BIP0340/aux', a))),
                    l = w('BIP0340/nonce', u, o, r),
                    d = S(A(l));
                  if (d === y) throw new Error('sign failed: k is zero');
                  const { bytes: f, scalar: h } = I(d),
                    p = C(f, o, r),
                    m = new Uint8Array(64);
                  if ((m.set(f, 0), m.set(_(S(h + p * i)), 32), !j(m, r, o)))
                    throw new Error('sign: Invalid signature produced');
                  return m;
                }
                function j(e, t, n) {
                  const r = (0, c.ensureBytes)('signature', e, 64),
                    s = (0, c.ensureBytes)('message', t),
                    o = (0, c.ensureBytes)('publicKey', n, 32);
                  try {
                    const e = k(A(o)),
                      t = A(r.subarray(0, 32));
                    if (!(0, c.inRange)(t, f, l)) return !1;
                    const n = A(r.subarray(32, 64));
                    if (!(0, c.inRange)(n, f, d)) return !1;
                    const i = C(_(t), v(e), s),
                      a = T(e, n, S(-i));
                    return !(!a || !a.hasEvenY() || a.toAffine().x !== t);
                  } catch (e) {
                    return !1;
                  }
                }
                n.schnorr = {
                  getPublicKey: B,
                  sign: O,
                  verify: j,
                  utils: {
                    randomPrivateKey: n.secp256k1.utils.randomPrivateKey,
                    lift_x: k,
                    pointToBytes: v,
                    numberToBytesBE: c.numberToBytesBE,
                    bytesToNumberBE: c.bytesToNumberBE,
                    taggedHash: w,
                    mod: a.mod,
                  },
                };
                const R = (() =>
                    (0, i.isogenyMap)(
                      g,
                      [
                        [
                          '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',
                          '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',
                          '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',
                          '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',
                        ],
                        [
                          '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',
                          '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',
                          '0x0000000000000000000000000000000000000000000000000000000000000001',
                        ],
                        [
                          '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',
                          '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',
                          '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',
                          '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',
                        ],
                        [
                          '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',
                          '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',
                          '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',
                          '0x0000000000000000000000000000000000000000000000000000000000000001',
                        ],
                      ].map(e => e.map(e => BigInt(e)))
                    ))(),
                  P = (() =>
                    (0, u.mapToCurveSimpleSWU)(g, {
                      A: BigInt(
                        '0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'
                      ),
                      B: BigInt('1771'),
                      Z: g.create(BigInt('-11')),
                    }))(),
                  N = (() =>
                    (0, i.createHasher)(
                      n.secp256k1.ProjectivePoint,
                      e => {
                        const { x: t, y: n } = P(g.create(e[0]));
                        return R(t, n);
                      },
                      {
                        DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',
                        encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',
                        p: g.ORDER,
                        m: 1,
                        k: 128,
                        expand: 'xmd',
                        hash: r.sha256,
                      }
                    ))();
                (n.hashToCurve = N.hashToCurve), (n.encodeToCurve = N.encodeToCurve);
              };
            };
      },
      {
        package: 'viem>webauthn-p256>@noble/curves',
        file: 'node_modules/@noble/curves/secp256k1.js',
      },
    ],
    [
      3045,
      { './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.SHA512_IV = n.SHA384_IV = n.SHA224_IV = n.SHA256_IV = n.HashMD = void 0),
                  (n.setBigUint64 = s),
                  (n.Chi = function (e, t, n) {
                    return (e & t) ^ (~e & n);
                  }),
                  (n.Maj = function (e, t, n) {
                    return (e & t) ^ (e & n) ^ (t & n);
                  });
                const r = e('./utils.js');
                function s(e, t, n, r) {
                  if ('function' == typeof e.setBigUint64) return e.setBigUint64(t, n, r);
                  const s = BigInt(32),
                    o = BigInt(4294967295),
                    i = Number((n >> s) & o),
                    a = Number(n & o),
                    c = r ? 4 : 0,
                    u = r ? 0 : 4;
                  e.setUint32(t + c, i, r), e.setUint32(t + u, a, r);
                }
                class o extends r.Hash {
                  constructor(e, t, n, s) {
                    super(),
                      (this.finished = !1),
                      (this.length = 0),
                      (this.pos = 0),
                      (this.destroyed = !1),
                      (this.blockLen = e),
                      (this.outputLen = t),
                      (this.padOffset = n),
                      (this.isLE = s),
                      (this.buffer = new Uint8Array(e)),
                      (this.view = (0, r.createView)(this.buffer));
                  }
                  update(e) {
                    (0, r.aexists)(this), (e = (0, r.toBytes)(e)), (0, r.abytes)(e);
                    const { view: t, buffer: n, blockLen: s } = this,
                      o = e.length;
                    for (let i = 0; i < o; ) {
                      const a = Math.min(s - this.pos, o - i);
                      if (a !== s)
                        n.set(e.subarray(i, i + a), this.pos),
                          (this.pos += a),
                          (i += a),
                          this.pos === s && (this.process(t, 0), (this.pos = 0));
                      else {
                        const t = (0, r.createView)(e);
                        for (; s <= o - i; i += s) this.process(t, i);
                      }
                    }
                    return (this.length += e.length), this.roundClean(), this;
                  }
                  digestInto(e) {
                    (0, r.aexists)(this), (0, r.aoutput)(e, this), (this.finished = !0);
                    const { buffer: t, view: n, blockLen: o, isLE: i } = this;
                    let { pos: a } = this;
                    (t[a++] = 128),
                      (0, r.clean)(this.buffer.subarray(a)),
                      this.padOffset > o - a && (this.process(n, 0), (a = 0));
                    for (let e = a; e < o; e++) t[e] = 0;
                    s(n, o - 8, BigInt(8 * this.length), i), this.process(n, 0);
                    const c = (0, r.createView)(e),
                      u = this.outputLen;
                    if (u % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');
                    const l = u / 4,
                      d = this.get();
                    if (l > d.length) throw new Error('_sha2: outputLen bigger than state');
                    for (let e = 0; e < l; e++) c.setUint32(4 * e, d[e], i);
                  }
                  digest() {
                    const { buffer: e, outputLen: t } = this;
                    this.digestInto(e);
                    const n = e.slice(0, t);
                    return this.destroy(), n;
                  }
                  _cloneInto(e) {
                    e || (e = new this.constructor()), e.set(...this.get());
                    const {
                      blockLen: t,
                      buffer: n,
                      length: r,
                      finished: s,
                      destroyed: o,
                      pos: i,
                    } = this;
                    return (
                      (e.destroyed = o),
                      (e.finished = s),
                      (e.length = r),
                      (e.pos = i),
                      r % t && e.buffer.set(n),
                      e
                    );
                  }
                  clone() {
                    return this._cloneInto();
                  }
                }
                (n.HashMD = o),
                  (n.SHA256_IV = Uint32Array.from([
                    1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924,
                    528734635, 1541459225,
                  ])),
                  (n.SHA224_IV = Uint32Array.from([
                    3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025,
                    1694076839, 3204075428,
                  ])),
                  (n.SHA384_IV = Uint32Array.from([
                    3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360,
                    4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525,
                    1694076839, 1203062813, 3204075428,
                  ])),
                  (n.SHA512_IV = Uint32Array.from([
                    1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723,
                    2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199,
                    528734635, 4215389547, 1541459225, 327033209,
                  ]));
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/_md.js' },
    ],
    [
      3046,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.toBig =
                    n.shrSL =
                    n.shrSH =
                    n.rotrSL =
                    n.rotrSH =
                    n.rotrBL =
                    n.rotrBH =
                    n.rotr32L =
                    n.rotr32H =
                    n.rotlSL =
                    n.rotlSH =
                    n.rotlBL =
                    n.rotlBH =
                    n.add5L =
                    n.add5H =
                    n.add4L =
                    n.add4H =
                    n.add3L =
                    n.add3H =
                      void 0),
                  (n.add = v),
                  (n.fromBig = o),
                  (n.split = i);
                const r = BigInt(2 ** 32 - 1),
                  s = BigInt(32);
                function o(e, t = !1) {
                  return t
                    ? { h: Number(e & r), l: Number((e >> s) & r) }
                    : { h: 0 | Number((e >> s) & r), l: 0 | Number(e & r) };
                }
                function i(e, t = !1) {
                  const n = e.length;
                  let r = new Uint32Array(n),
                    s = new Uint32Array(n);
                  for (let i = 0; i < n; i++) {
                    const { h: n, l: a } = o(e[i], t);
                    [r[i], s[i]] = [n, a];
                  }
                  return [r, s];
                }
                const a = (e, t) => (BigInt(e >>> 0) << s) | BigInt(t >>> 0);
                n.toBig = a;
                const c = (e, t, n) => e >>> n;
                n.shrSH = c;
                const u = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.shrSL = u;
                const l = (e, t, n) => (e >>> n) | (t << (32 - n));
                n.rotrSH = l;
                const d = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.rotrSL = d;
                const f = (e, t, n) => (e << (64 - n)) | (t >>> (n - 32));
                n.rotrBH = f;
                const h = (e, t, n) => (e >>> (n - 32)) | (t << (64 - n));
                n.rotrBL = h;
                const p = (e, t) => t;
                n.rotr32H = p;
                const m = (e, t) => e;
                n.rotr32L = m;
                const g = (e, t, n) => (e << n) | (t >>> (32 - n));
                n.rotlSH = g;
                const y = (e, t, n) => (t << n) | (e >>> (32 - n));
                n.rotlSL = y;
                const b = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n));
                n.rotlBH = b;
                const w = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
                function v(e, t, n, r) {
                  const s = (t >>> 0) + (r >>> 0);
                  return { h: (e + n + ((s / 2 ** 32) | 0)) | 0, l: 0 | s };
                }
                n.rotlBL = w;
                const _ = (e, t, n) => (e >>> 0) + (t >>> 0) + (n >>> 0);
                n.add3L = _;
                const E = (e, t, n, r) => (t + n + r + ((e / 2 ** 32) | 0)) | 0;
                n.add3H = E;
                const S = (e, t, n, r) => (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0);
                n.add4L = S;
                const x = (e, t, n, r, s) => (t + n + r + s + ((e / 2 ** 32) | 0)) | 0;
                n.add4H = x;
                const T = (e, t, n, r, s) =>
                  (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0) + (s >>> 0);
                n.add5L = T;
                const I = (e, t, n, r, s, o) => (t + n + r + s + o + ((e / 2 ** 32) | 0)) | 0;
                n.add5H = I;
                const k = {
                  fromBig: o,
                  split: i,
                  toBig: a,
                  shrSH: c,
                  shrSL: u,
                  rotrSH: l,
                  rotrSL: d,
                  rotrBH: f,
                  rotrBL: h,
                  rotr32H: p,
                  rotr32L: m,
                  rotlSH: g,
                  rotlSL: y,
                  rotlBH: b,
                  rotlBL: w,
                  add: v,
                  add3L: _,
                  add3H: E,
                  add4L: S,
                  add4H: x,
                  add5H: I,
                  add5L: T,
                };
                n.default = k;
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/_u64.js' },
    ],
    [
      3047,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.crypto = void 0),
                  (n.crypto =
                    'object' == typeof globalThis && 'crypto' in globalThis
                      ? globalThis.crypto
                      : undefined);
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/crypto.js' },
    ],
    [
      3048,
      { './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.hmac = n.HMAC = void 0);
                const r = e('./utils.js');
                class s extends r.Hash {
                  constructor(e, t) {
                    super(), (this.finished = !1), (this.destroyed = !1), (0, r.ahash)(e);
                    const n = (0, r.toBytes)(t);
                    if (((this.iHash = e.create()), 'function' != typeof this.iHash.update))
                      throw new Error('Expected instance of class which extends utils.Hash');
                    (this.blockLen = this.iHash.blockLen), (this.outputLen = this.iHash.outputLen);
                    const s = this.blockLen,
                      o = new Uint8Array(s);
                    o.set(n.length > s ? e.create().update(n).digest() : n);
                    for (let e = 0; e < o.length; e++) o[e] ^= 54;
                    this.iHash.update(o), (this.oHash = e.create());
                    for (let e = 0; e < o.length; e++) o[e] ^= 106;
                    this.oHash.update(o), (0, r.clean)(o);
                  }
                  update(e) {
                    return (0, r.aexists)(this), this.iHash.update(e), this;
                  }
                  digestInto(e) {
                    (0, r.aexists)(this),
                      (0, r.abytes)(e, this.outputLen),
                      (this.finished = !0),
                      this.iHash.digestInto(e),
                      this.oHash.update(e),
                      this.oHash.digestInto(e),
                      this.destroy();
                  }
                  digest() {
                    const e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e;
                  }
                  _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    const {
                      oHash: t,
                      iHash: n,
                      finished: r,
                      destroyed: s,
                      blockLen: o,
                      outputLen: i,
                    } = this;
                    return (
                      (e.finished = r),
                      (e.destroyed = s),
                      (e.blockLen = o),
                      (e.outputLen = i),
                      (e.oHash = t._cloneInto(e.oHash)),
                      (e.iHash = n._cloneInto(e.iHash)),
                      e
                    );
                  }
                  clone() {
                    return this._cloneInto();
                  }
                  destroy() {
                    (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
                  }
                }
                n.HMAC = s;
                (n.hmac = (e, t, n) => new s(e, t).update(n).digest()),
                  (n.hmac.create = (e, t) => new s(e, t));
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/hmac.js' },
    ],
    [
      3049,
      { './_md.js': 3045, './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.ripemd160 = n.RIPEMD160 = n.md5 = n.MD5 = n.sha1 = n.SHA1 = void 0);
                const r = e('./_md.js'),
                  s = e('./utils.js'),
                  o = Uint32Array.from([1732584193, 4023233417, 2562383102, 271733878, 3285377520]),
                  i = new Uint32Array(80);
                class a extends r.HashMD {
                  constructor() {
                    super(64, 20, 8, !1),
                      (this.A = 0 | o[0]),
                      (this.B = 0 | o[1]),
                      (this.C = 0 | o[2]),
                      (this.D = 0 | o[3]),
                      (this.E = 0 | o[4]);
                  }
                  get() {
                    const { A: e, B: t, C: n, D: r, E: s } = this;
                    return [e, t, n, r, s];
                  }
                  set(e, t, n, r, s) {
                    (this.A = 0 | e),
                      (this.B = 0 | t),
                      (this.C = 0 | n),
                      (this.D = 0 | r),
                      (this.E = 0 | s);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) i[n] = e.getUint32(t, !1);
                    for (let e = 16; e < 80; e++)
                      i[e] = (0, s.rotl)(i[e - 3] ^ i[e - 8] ^ i[e - 14] ^ i[e - 16], 1);
                    let { A: n, B: o, C: a, D: c, E: u } = this;
                    for (let e = 0; e < 80; e++) {
                      let t, l;
                      e < 20
                        ? ((t = (0, r.Chi)(o, a, c)), (l = 1518500249))
                        : e < 40
                          ? ((t = o ^ a ^ c), (l = 1859775393))
                          : e < 60
                            ? ((t = (0, r.Maj)(o, a, c)), (l = 2400959708))
                            : ((t = o ^ a ^ c), (l = 3395469782));
                      const d = ((0, s.rotl)(n, 5) + t + u + l + i[e]) | 0;
                      (u = c), (c = a), (a = (0, s.rotl)(o, 30)), (o = n), (n = d);
                    }
                    (n = (n + this.A) | 0),
                      (o = (o + this.B) | 0),
                      (a = (a + this.C) | 0),
                      (c = (c + this.D) | 0),
                      (u = (u + this.E) | 0),
                      this.set(n, o, a, c, u);
                  }
                  roundClean() {
                    (0, s.clean)(i);
                  }
                  destroy() {
                    this.set(0, 0, 0, 0, 0), (0, s.clean)(this.buffer);
                  }
                }
                (n.SHA1 = a), (n.sha1 = (0, s.createHasher)(() => new a()));
                const c = Math.pow(2, 32),
                  u = Array.from({ length: 64 }, (e, t) =>
                    Math.floor(c * Math.abs(Math.sin(t + 1)))
                  ),
                  l = o.slice(0, 4),
                  d = new Uint32Array(16);
                class f extends r.HashMD {
                  constructor() {
                    super(64, 16, 8, !0),
                      (this.A = 0 | l[0]),
                      (this.B = 0 | l[1]),
                      (this.C = 0 | l[2]),
                      (this.D = 0 | l[3]);
                  }
                  get() {
                    const { A: e, B: t, C: n, D: r } = this;
                    return [e, t, n, r];
                  }
                  set(e, t, n, r) {
                    (this.A = 0 | e), (this.B = 0 | t), (this.C = 0 | n), (this.D = 0 | r);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) d[n] = e.getUint32(t, !0);
                    let { A: n, B: o, C: i, D: a } = this;
                    for (let e = 0; e < 64; e++) {
                      let t, c, l;
                      e < 16
                        ? ((t = (0, r.Chi)(o, i, a)), (c = e), (l = [7, 12, 17, 22]))
                        : e < 32
                          ? ((t = (0, r.Chi)(a, o, i)),
                            (c = (5 * e + 1) % 16),
                            (l = [5, 9, 14, 20]))
                          : e < 48
                            ? ((t = o ^ i ^ a), (c = (3 * e + 5) % 16), (l = [4, 11, 16, 23]))
                            : ((t = i ^ (o | ~a)), (c = (7 * e) % 16), (l = [6, 10, 15, 21])),
                        (t = t + n + u[e] + d[c]),
                        (n = a),
                        (a = i),
                        (i = o),
                        (o += (0, s.rotl)(t, l[e % 4]));
                    }
                    (n = (n + this.A) | 0),
                      (o = (o + this.B) | 0),
                      (i = (i + this.C) | 0),
                      (a = (a + this.D) | 0),
                      this.set(n, o, i, a);
                  }
                  roundClean() {
                    (0, s.clean)(d);
                  }
                  destroy() {
                    this.set(0, 0, 0, 0), (0, s.clean)(this.buffer);
                  }
                }
                (n.MD5 = f), (n.md5 = (0, s.createHasher)(() => new f()));
                const h = Uint8Array.from([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
                  p = (() => Uint8Array.from(new Array(16).fill(0).map((e, t) => t)))(),
                  m = (() => p.map(e => (9 * e + 5) % 16))(),
                  g = (() => {
                    const e = [[p], [m]];
                    for (let t = 0; t < 4; t++) for (let n of e) n.push(n[t].map(e => h[e]));
                    return e;
                  })(),
                  y = (() => g[0])(),
                  b = (() => g[1])(),
                  w = [
                    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
                    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
                    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
                    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
                    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
                  ].map(e => Uint8Array.from(e)),
                  v = y.map((e, t) => e.map(e => w[t][e])),
                  _ = b.map((e, t) => e.map(e => w[t][e])),
                  E = Uint32Array.from([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                  S = Uint32Array.from([1352829926, 1548603684, 1836072691, 2053994217, 0]);
                function x(e, t, n, r) {
                  return 0 === e
                    ? t ^ n ^ r
                    : 1 === e
                      ? (t & n) | (~t & r)
                      : 2 === e
                        ? (t | ~n) ^ r
                        : 3 === e
                          ? (t & r) | (n & ~r)
                          : t ^ (n | ~r);
                }
                const T = new Uint32Array(16);
                class I extends r.HashMD {
                  constructor() {
                    super(64, 20, 8, !0),
                      (this.h0 = 1732584193),
                      (this.h1 = -271733879),
                      (this.h2 = -1732584194),
                      (this.h3 = 271733878),
                      (this.h4 = -1009589776);
                  }
                  get() {
                    const { h0: e, h1: t, h2: n, h3: r, h4: s } = this;
                    return [e, t, n, r, s];
                  }
                  set(e, t, n, r, s) {
                    (this.h0 = 0 | e),
                      (this.h1 = 0 | t),
                      (this.h2 = 0 | n),
                      (this.h3 = 0 | r),
                      (this.h4 = 0 | s);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) T[n] = e.getUint32(t, !0);
                    let n = 0 | this.h0,
                      r = n,
                      o = 0 | this.h1,
                      i = o,
                      a = 0 | this.h2,
                      c = a,
                      u = 0 | this.h3,
                      l = u,
                      d = 0 | this.h4,
                      f = d;
                    for (let e = 0; e < 5; e++) {
                      const t = 4 - e,
                        h = E[e],
                        p = S[e],
                        m = y[e],
                        g = b[e],
                        w = v[e],
                        I = _[e];
                      for (let t = 0; t < 16; t++) {
                        const r = ((0, s.rotl)(n + x(e, o, a, u) + T[m[t]] + h, w[t]) + d) | 0;
                        (n = d), (d = u), (u = 0 | (0, s.rotl)(a, 10)), (a = o), (o = r);
                      }
                      for (let e = 0; e < 16; e++) {
                        const n = ((0, s.rotl)(r + x(t, i, c, l) + T[g[e]] + p, I[e]) + f) | 0;
                        (r = f), (f = l), (l = 0 | (0, s.rotl)(c, 10)), (c = i), (i = n);
                      }
                    }
                    this.set(
                      (this.h1 + a + l) | 0,
                      (this.h2 + u + f) | 0,
                      (this.h3 + d + r) | 0,
                      (this.h4 + n + i) | 0,
                      (this.h0 + o + c) | 0
                    );
                  }
                  roundClean() {
                    (0, s.clean)(T);
                  }
                  destroy() {
                    (this.destroyed = !0), (0, s.clean)(this.buffer), this.set(0, 0, 0, 0, 0);
                  }
                }
                (n.RIPEMD160 = I), (n.ripemd160 = (0, s.createHasher)(() => new I()));
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/legacy.js' },
    ],
    [
      3050,
      { './hmac.js': 3048, './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.pbkdf2 = function (e, t, n, r) {
                    const { c: a, dkLen: c, DK: u, PRF: l, PRFSalt: d } = o(e, t, n, r);
                    let f;
                    const h = new Uint8Array(4),
                      p = (0, s.createView)(h),
                      m = new Uint8Array(l.outputLen);
                    for (let e = 1, t = 0; t < c; e++, t += l.outputLen) {
                      const n = u.subarray(t, t + l.outputLen);
                      p.setInt32(0, e, !1),
                        (f = d._cloneInto(f)).update(h).digestInto(m),
                        n.set(m.subarray(0, n.length));
                      for (let e = 1; e < a; e++) {
                        l._cloneInto(f).update(m).digestInto(m);
                        for (let e = 0; e < n.length; e++) n[e] ^= m[e];
                      }
                    }
                    return i(l, d, u, f, m);
                  }),
                  (n.pbkdf2Async = async function (e, t, n, r) {
                    const {
                      c: a,
                      dkLen: c,
                      asyncTick: u,
                      DK: l,
                      PRF: d,
                      PRFSalt: f,
                    } = o(e, t, n, r);
                    let h;
                    const p = new Uint8Array(4),
                      m = (0, s.createView)(p),
                      g = new Uint8Array(d.outputLen);
                    for (let e = 1, t = 0; t < c; e++, t += d.outputLen) {
                      const n = l.subarray(t, t + d.outputLen);
                      m.setInt32(0, e, !1),
                        (h = f._cloneInto(h)).update(p).digestInto(g),
                        n.set(g.subarray(0, n.length)),
                        await (0, s.asyncLoop)(a - 1, u, () => {
                          d._cloneInto(h).update(g).digestInto(g);
                          for (let e = 0; e < n.length; e++) n[e] ^= g[e];
                        });
                    }
                    return i(d, f, l, h, g);
                  });
                const r = e('./hmac.js'),
                  s = e('./utils.js');
                function o(e, t, n, o) {
                  (0, s.ahash)(e);
                  const i = (0, s.checkOpts)({ dkLen: 32, asyncTick: 10 }, o),
                    { c: a, dkLen: c, asyncTick: u } = i;
                  if (((0, s.anumber)(a), (0, s.anumber)(c), (0, s.anumber)(u), a < 1))
                    throw new Error('iterations (c) should be >= 1');
                  const l = (0, s.kdfInputToBytes)(t),
                    d = (0, s.kdfInputToBytes)(n),
                    f = new Uint8Array(c),
                    h = r.hmac.create(e, l),
                    p = h._cloneInto().update(d);
                  return { c: a, dkLen: c, asyncTick: u, DK: f, PRF: h, PRFSalt: p };
                }
                function i(e, t, n, r, o) {
                  return e.destroy(), t.destroy(), r && r.destroy(), (0, s.clean)(o), n;
                }
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/pbkdf2.js' },
    ],
    [
      3051,
      { './legacy.js': 3049 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.ripemd160 = n.RIPEMD160 = void 0);
                const r = e('./legacy.js');
                (n.RIPEMD160 = r.RIPEMD160), (n.ripemd160 = r.ripemd160);
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/ripemd160.js' },
    ],
    [
      3052,
      { './pbkdf2.js': 3050, './sha2.js': 3053, './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.scrypt = function (e, t, n) {
                    const {
                      N: r,
                      r: s,
                      p: i,
                      dkLen: l,
                      blockSize32: d,
                      V: f,
                      B32: h,
                      B: p,
                      tmp: m,
                      blockMixCb: g,
                    } = c(e, t, n);
                    (0, o.swap32IfBE)(h);
                    for (let e = 0; e < i; e++) {
                      const t = d * e;
                      for (let e = 0; e < d; e++) f[e] = h[t + e];
                      for (let e = 0, t = 0; e < r - 1; e++) a(f, t, f, (t += d), s), g();
                      a(f, (r - 1) * d, h, t, s), g();
                      for (let e = 0; e < r; e++) {
                        const e = h[t + d - 16] % r;
                        for (let n = 0; n < d; n++) m[n] = h[t + n] ^ f[e * d + n];
                        a(m, 0, h, t, s), g();
                      }
                    }
                    return (0, o.swap32IfBE)(h), u(e, l, p, f, m);
                  }),
                  (n.scryptAsync = async function (e, t, n) {
                    const {
                      N: r,
                      r: s,
                      p: i,
                      dkLen: l,
                      blockSize32: d,
                      V: f,
                      B32: h,
                      B: p,
                      tmp: m,
                      blockMixCb: g,
                      asyncTick: y,
                    } = c(e, t, n);
                    (0, o.swap32IfBE)(h);
                    for (let e = 0; e < i; e++) {
                      const t = d * e;
                      for (let e = 0; e < d; e++) f[e] = h[t + e];
                      let n = 0;
                      await (0, o.asyncLoop)(r - 1, y, () => {
                        a(f, n, f, (n += d), s), g();
                      }),
                        a(f, (r - 1) * d, h, t, s),
                        g(),
                        await (0, o.asyncLoop)(r, y, () => {
                          const e = h[t + d - 16] % r;
                          for (let n = 0; n < d; n++) m[n] = h[t + n] ^ f[e * d + n];
                          a(m, 0, h, t, s), g();
                        });
                    }
                    return (0, o.swap32IfBE)(h), u(e, l, p, f, m);
                  });
                const r = e('./pbkdf2.js'),
                  s = e('./sha2.js'),
                  o = e('./utils.js');
                function i(e, t, n, r, s, i) {
                  let a = e[t++] ^ n[r++],
                    c = e[t++] ^ n[r++],
                    u = e[t++] ^ n[r++],
                    l = e[t++] ^ n[r++],
                    d = e[t++] ^ n[r++],
                    f = e[t++] ^ n[r++],
                    h = e[t++] ^ n[r++],
                    p = e[t++] ^ n[r++],
                    m = e[t++] ^ n[r++],
                    g = e[t++] ^ n[r++],
                    y = e[t++] ^ n[r++],
                    b = e[t++] ^ n[r++],
                    w = e[t++] ^ n[r++],
                    v = e[t++] ^ n[r++],
                    _ = e[t++] ^ n[r++],
                    E = e[t++] ^ n[r++],
                    S = a,
                    x = c,
                    T = u,
                    I = l,
                    k = d,
                    A = f,
                    C = h,
                    B = p,
                    O = m,
                    j = g,
                    R = y,
                    P = b,
                    N = w,
                    L = v,
                    M = _,
                    D = E;
                  for (let e = 0; e < 8; e += 2)
                    (k ^= (0, o.rotl)((S + N) | 0, 7)),
                      (O ^= (0, o.rotl)((k + S) | 0, 9)),
                      (N ^= (0, o.rotl)((O + k) | 0, 13)),
                      (S ^= (0, o.rotl)((N + O) | 0, 18)),
                      (j ^= (0, o.rotl)((A + x) | 0, 7)),
                      (L ^= (0, o.rotl)((j + A) | 0, 9)),
                      (x ^= (0, o.rotl)((L + j) | 0, 13)),
                      (A ^= (0, o.rotl)((x + L) | 0, 18)),
                      (M ^= (0, o.rotl)((R + C) | 0, 7)),
                      (T ^= (0, o.rotl)((M + R) | 0, 9)),
                      (C ^= (0, o.rotl)((T + M) | 0, 13)),
                      (R ^= (0, o.rotl)((C + T) | 0, 18)),
                      (I ^= (0, o.rotl)((D + P) | 0, 7)),
                      (B ^= (0, o.rotl)((I + D) | 0, 9)),
                      (P ^= (0, o.rotl)((B + I) | 0, 13)),
                      (D ^= (0, o.rotl)((P + B) | 0, 18)),
                      (x ^= (0, o.rotl)((S + I) | 0, 7)),
                      (T ^= (0, o.rotl)((x + S) | 0, 9)),
                      (I ^= (0, o.rotl)((T + x) | 0, 13)),
                      (S ^= (0, o.rotl)((I + T) | 0, 18)),
                      (C ^= (0, o.rotl)((A + k) | 0, 7)),
                      (B ^= (0, o.rotl)((C + A) | 0, 9)),
                      (k ^= (0, o.rotl)((B + C) | 0, 13)),
                      (A ^= (0, o.rotl)((k + B) | 0, 18)),
                      (P ^= (0, o.rotl)((R + j) | 0, 7)),
                      (O ^= (0, o.rotl)((P + R) | 0, 9)),
                      (j ^= (0, o.rotl)((O + P) | 0, 13)),
                      (R ^= (0, o.rotl)((j + O) | 0, 18)),
                      (N ^= (0, o.rotl)((D + M) | 0, 7)),
                      (L ^= (0, o.rotl)((N + D) | 0, 9)),
                      (M ^= (0, o.rotl)((L + N) | 0, 13)),
                      (D ^= (0, o.rotl)((M + L) | 0, 18));
                  (s[i++] = (a + S) | 0),
                    (s[i++] = (c + x) | 0),
                    (s[i++] = (u + T) | 0),
                    (s[i++] = (l + I) | 0),
                    (s[i++] = (d + k) | 0),
                    (s[i++] = (f + A) | 0),
                    (s[i++] = (h + C) | 0),
                    (s[i++] = (p + B) | 0),
                    (s[i++] = (m + O) | 0),
                    (s[i++] = (g + j) | 0),
                    (s[i++] = (y + R) | 0),
                    (s[i++] = (b + P) | 0),
                    (s[i++] = (w + N) | 0),
                    (s[i++] = (v + L) | 0),
                    (s[i++] = (_ + M) | 0),
                    (s[i++] = (E + D) | 0);
                }
                function a(e, t, n, r, s) {
                  let o = r + 0,
                    a = r + 16 * s;
                  for (let r = 0; r < 16; r++) n[a + r] = e[t + 16 * (2 * s - 1) + r];
                  for (let r = 0; r < s; r++, o += 16, t += 16)
                    i(n, a, e, t, n, o), r > 0 && (a += 16), i(n, o, e, (t += 16), n, a);
                }
                function c(e, t, n) {
                  const i = (0, o.checkOpts)({ dkLen: 32, asyncTick: 10, maxmem: 1073742848 }, n),
                    { N: a, r: c, p: u, dkLen: l, asyncTick: d, maxmem: f, onProgress: h } = i;
                  if (
                    ((0, o.anumber)(a),
                    (0, o.anumber)(c),
                    (0, o.anumber)(u),
                    (0, o.anumber)(l),
                    (0, o.anumber)(d),
                    (0, o.anumber)(f),
                    h !== undefined && 'function' != typeof h)
                  )
                    throw new Error('progressCb should be function');
                  const p = 128 * c,
                    m = p / 4,
                    g = Math.pow(2, 32);
                  if (a <= 1 || a & (a - 1) || a > g)
                    throw new Error(
                      'Scrypt: N must be larger than 1, a power of 2, and less than 2^32'
                    );
                  if (u < 0 || u > (32 * (g - 1)) / p)
                    throw new Error(
                      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'
                    );
                  if (l < 0 || l > 32 * (g - 1))
                    throw new Error(
                      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'
                    );
                  if (p * (a + u) > f)
                    throw new Error(
                      'Scrypt: memused is bigger than maxMem. Expected 128 * r * (N + p) > maxmem of ' +
                        f
                    );
                  const y = (0, r.pbkdf2)(s.sha256, e, t, { c: 1, dkLen: p * u }),
                    b = (0, o.u32)(y),
                    w = (0, o.u32)(new Uint8Array(p * a)),
                    v = (0, o.u32)(new Uint8Array(p));
                  let _ = () => {};
                  if (h) {
                    const e = 2 * a * u,
                      t = Math.max(Math.floor(e / 1e4), 1);
                    let n = 0;
                    _ = () => {
                      n++, !h || (n % t && n !== e) || h(n / e);
                    };
                  }
                  return {
                    N: a,
                    r: c,
                    p: u,
                    dkLen: l,
                    blockSize32: m,
                    V: w,
                    B32: b,
                    B: y,
                    tmp: v,
                    blockMixCb: _,
                    asyncTick: d,
                  };
                }
                function u(e, t, n, i, a) {
                  const c = (0, r.pbkdf2)(s.sha256, e, n, { c: 1, dkLen: t });
                  return (0, o.clean)(n, i, a), c;
                }
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/scrypt.js' },
    ],
    [
      3053,
      { './_md.js': 3045, './_u64.js': 3046, './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha512_224 =
                    n.sha512_256 =
                    n.sha384 =
                    n.sha512 =
                    n.sha224 =
                    n.sha256 =
                    n.SHA512_256 =
                    n.SHA512_224 =
                    n.SHA384 =
                    n.SHA512 =
                    n.SHA224 =
                    n.SHA256 =
                      void 0);
                const r = e('./_md.js'),
                  s = e('./_u64.js'),
                  o = e('./utils.js'),
                  i = Uint32Array.from([
                    1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
                    2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
                    1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
                    264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882,
                    2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993,
                    338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051,
                    2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
                    3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556,
                    883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222,
                    2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
                    3329325298,
                  ]),
                  a = new Uint32Array(64);
                class c extends r.HashMD {
                  constructor(e = 32) {
                    super(64, e, 8, !1),
                      (this.A = 0 | r.SHA256_IV[0]),
                      (this.B = 0 | r.SHA256_IV[1]),
                      (this.C = 0 | r.SHA256_IV[2]),
                      (this.D = 0 | r.SHA256_IV[3]),
                      (this.E = 0 | r.SHA256_IV[4]),
                      (this.F = 0 | r.SHA256_IV[5]),
                      (this.G = 0 | r.SHA256_IV[6]),
                      (this.H = 0 | r.SHA256_IV[7]);
                  }
                  get() {
                    const { A: e, B: t, C: n, D: r, E: s, F: o, G: i, H: a } = this;
                    return [e, t, n, r, s, o, i, a];
                  }
                  set(e, t, n, r, s, o, i, a) {
                    (this.A = 0 | e),
                      (this.B = 0 | t),
                      (this.C = 0 | n),
                      (this.D = 0 | r),
                      (this.E = 0 | s),
                      (this.F = 0 | o),
                      (this.G = 0 | i),
                      (this.H = 0 | a);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) a[n] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                      const t = a[e - 15],
                        n = a[e - 2],
                        r = (0, o.rotr)(t, 7) ^ (0, o.rotr)(t, 18) ^ (t >>> 3),
                        s = (0, o.rotr)(n, 17) ^ (0, o.rotr)(n, 19) ^ (n >>> 10);
                      a[e] = (s + a[e - 7] + r + a[e - 16]) | 0;
                    }
                    let { A: n, B: s, C: c, D: u, E: l, F: d, G: f, H: h } = this;
                    for (let e = 0; e < 64; e++) {
                      const t =
                          (h +
                            ((0, o.rotr)(l, 6) ^ (0, o.rotr)(l, 11) ^ (0, o.rotr)(l, 25)) +
                            (0, r.Chi)(l, d, f) +
                            i[e] +
                            a[e]) |
                          0,
                        p =
                          (((0, o.rotr)(n, 2) ^ (0, o.rotr)(n, 13) ^ (0, o.rotr)(n, 22)) +
                            (0, r.Maj)(n, s, c)) |
                          0;
                      (h = f),
                        (f = d),
                        (d = l),
                        (l = (u + t) | 0),
                        (u = c),
                        (c = s),
                        (s = n),
                        (n = (t + p) | 0);
                    }
                    (n = (n + this.A) | 0),
                      (s = (s + this.B) | 0),
                      (c = (c + this.C) | 0),
                      (u = (u + this.D) | 0),
                      (l = (l + this.E) | 0),
                      (d = (d + this.F) | 0),
                      (f = (f + this.G) | 0),
                      (h = (h + this.H) | 0),
                      this.set(n, s, c, u, l, d, f, h);
                  }
                  roundClean() {
                    (0, o.clean)(a);
                  }
                  destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), (0, o.clean)(this.buffer);
                  }
                }
                n.SHA256 = c;
                class u extends c {
                  constructor() {
                    super(28),
                      (this.A = 0 | r.SHA224_IV[0]),
                      (this.B = 0 | r.SHA224_IV[1]),
                      (this.C = 0 | r.SHA224_IV[2]),
                      (this.D = 0 | r.SHA224_IV[3]),
                      (this.E = 0 | r.SHA224_IV[4]),
                      (this.F = 0 | r.SHA224_IV[5]),
                      (this.G = 0 | r.SHA224_IV[6]),
                      (this.H = 0 | r.SHA224_IV[7]);
                  }
                }
                n.SHA224 = u;
                const l = (() =>
                    s.split(
                      [
                        '0x428a2f98d728ae22',
                        '0x7137449123ef65cd',
                        '0xb5c0fbcfec4d3b2f',
                        '0xe9b5dba58189dbbc',
                        '0x3956c25bf348b538',
                        '0x59f111f1b605d019',
                        '0x923f82a4af194f9b',
                        '0xab1c5ed5da6d8118',
                        '0xd807aa98a3030242',
                        '0x12835b0145706fbe',
                        '0x243185be4ee4b28c',
                        '0x550c7dc3d5ffb4e2',
                        '0x72be5d74f27b896f',
                        '0x80deb1fe3b1696b1',
                        '0x9bdc06a725c71235',
                        '0xc19bf174cf692694',
                        '0xe49b69c19ef14ad2',
                        '0xefbe4786384f25e3',
                        '0x0fc19dc68b8cd5b5',
                        '0x240ca1cc77ac9c65',
                        '0x2de92c6f592b0275',
                        '0x4a7484aa6ea6e483',
                        '0x5cb0a9dcbd41fbd4',
                        '0x76f988da831153b5',
                        '0x983e5152ee66dfab',
                        '0xa831c66d2db43210',
                        '0xb00327c898fb213f',
                        '0xbf597fc7beef0ee4',
                        '0xc6e00bf33da88fc2',
                        '0xd5a79147930aa725',
                        '0x06ca6351e003826f',
                        '0x142929670a0e6e70',
                        '0x27b70a8546d22ffc',
                        '0x2e1b21385c26c926',
                        '0x4d2c6dfc5ac42aed',
                        '0x53380d139d95b3df',
                        '0x650a73548baf63de',
                        '0x766a0abb3c77b2a8',
                        '0x81c2c92e47edaee6',
                        '0x92722c851482353b',
                        '0xa2bfe8a14cf10364',
                        '0xa81a664bbc423001',
                        '0xc24b8b70d0f89791',
                        '0xc76c51a30654be30',
                        '0xd192e819d6ef5218',
                        '0xd69906245565a910',
                        '0xf40e35855771202a',
                        '0x106aa07032bbd1b8',
                        '0x19a4c116b8d2d0c8',
                        '0x1e376c085141ab53',
                        '0x2748774cdf8eeb99',
                        '0x34b0bcb5e19b48a8',
                        '0x391c0cb3c5c95a63',
                        '0x4ed8aa4ae3418acb',
                        '0x5b9cca4f7763e373',
                        '0x682e6ff3d6b2b8a3',
                        '0x748f82ee5defb2fc',
                        '0x78a5636f43172f60',
                        '0x84c87814a1f0ab72',
                        '0x8cc702081a6439ec',
                        '0x90befffa23631e28',
                        '0xa4506cebde82bde9',
                        '0xbef9a3f7b2c67915',
                        '0xc67178f2e372532b',
                        '0xca273eceea26619c',
                        '0xd186b8c721c0c207',
                        '0xeada7dd6cde0eb1e',
                        '0xf57d4f7fee6ed178',
                        '0x06f067aa72176fba',
                        '0x0a637dc5a2c898a6',
                        '0x113f9804bef90dae',
                        '0x1b710b35131c471b',
                        '0x28db77f523047d84',
                        '0x32caab7b40c72493',
                        '0x3c9ebe0a15c9bebc',
                        '0x431d67c49c100d4c',
                        '0x4cc5d4becb3e42b6',
                        '0x597f299cfc657e2a',
                        '0x5fcb6fab3ad6faec',
                        '0x6c44198c4a475817',
                      ].map(e => BigInt(e))
                    ))(),
                  d = (() => l[0])(),
                  f = (() => l[1])(),
                  h = new Uint32Array(80),
                  p = new Uint32Array(80);
                class m extends r.HashMD {
                  constructor(e = 64) {
                    super(128, e, 16, !1),
                      (this.Ah = 0 | r.SHA512_IV[0]),
                      (this.Al = 0 | r.SHA512_IV[1]),
                      (this.Bh = 0 | r.SHA512_IV[2]),
                      (this.Bl = 0 | r.SHA512_IV[3]),
                      (this.Ch = 0 | r.SHA512_IV[4]),
                      (this.Cl = 0 | r.SHA512_IV[5]),
                      (this.Dh = 0 | r.SHA512_IV[6]),
                      (this.Dl = 0 | r.SHA512_IV[7]),
                      (this.Eh = 0 | r.SHA512_IV[8]),
                      (this.El = 0 | r.SHA512_IV[9]),
                      (this.Fh = 0 | r.SHA512_IV[10]),
                      (this.Fl = 0 | r.SHA512_IV[11]),
                      (this.Gh = 0 | r.SHA512_IV[12]),
                      (this.Gl = 0 | r.SHA512_IV[13]),
                      (this.Hh = 0 | r.SHA512_IV[14]),
                      (this.Hl = 0 | r.SHA512_IV[15]);
                  }
                  get() {
                    const {
                      Ah: e,
                      Al: t,
                      Bh: n,
                      Bl: r,
                      Ch: s,
                      Cl: o,
                      Dh: i,
                      Dl: a,
                      Eh: c,
                      El: u,
                      Fh: l,
                      Fl: d,
                      Gh: f,
                      Gl: h,
                      Hh: p,
                      Hl: m,
                    } = this;
                    return [e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m];
                  }
                  set(e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m) {
                    (this.Ah = 0 | e),
                      (this.Al = 0 | t),
                      (this.Bh = 0 | n),
                      (this.Bl = 0 | r),
                      (this.Ch = 0 | s),
                      (this.Cl = 0 | o),
                      (this.Dh = 0 | i),
                      (this.Dl = 0 | a),
                      (this.Eh = 0 | c),
                      (this.El = 0 | u),
                      (this.Fh = 0 | l),
                      (this.Fl = 0 | d),
                      (this.Gh = 0 | f),
                      (this.Gl = 0 | h),
                      (this.Hh = 0 | p),
                      (this.Hl = 0 | m);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4)
                      (h[n] = e.getUint32(t)), (p[n] = e.getUint32((t += 4)));
                    for (let e = 16; e < 80; e++) {
                      const t = 0 | h[e - 15],
                        n = 0 | p[e - 15],
                        r = s.rotrSH(t, n, 1) ^ s.rotrSH(t, n, 8) ^ s.shrSH(t, n, 7),
                        o = s.rotrSL(t, n, 1) ^ s.rotrSL(t, n, 8) ^ s.shrSL(t, n, 7),
                        i = 0 | h[e - 2],
                        a = 0 | p[e - 2],
                        c = s.rotrSH(i, a, 19) ^ s.rotrBH(i, a, 61) ^ s.shrSH(i, a, 6),
                        u = s.rotrSL(i, a, 19) ^ s.rotrBL(i, a, 61) ^ s.shrSL(i, a, 6),
                        l = s.add4L(o, u, p[e - 7], p[e - 16]),
                        d = s.add4H(l, r, c, h[e - 7], h[e - 16]);
                      (h[e] = 0 | d), (p[e] = 0 | l);
                    }
                    let {
                      Ah: n,
                      Al: r,
                      Bh: o,
                      Bl: i,
                      Ch: a,
                      Cl: c,
                      Dh: u,
                      Dl: l,
                      Eh: m,
                      El: g,
                      Fh: y,
                      Fl: b,
                      Gh: w,
                      Gl: v,
                      Hh: _,
                      Hl: E,
                    } = this;
                    for (let e = 0; e < 80; e++) {
                      const t = s.rotrSH(m, g, 14) ^ s.rotrSH(m, g, 18) ^ s.rotrBH(m, g, 41),
                        S = s.rotrSL(m, g, 14) ^ s.rotrSL(m, g, 18) ^ s.rotrBL(m, g, 41),
                        x = (m & y) ^ (~m & w),
                        T = (g & b) ^ (~g & v),
                        I = s.add5L(E, S, T, f[e], p[e]),
                        k = s.add5H(I, _, t, x, d[e], h[e]),
                        A = 0 | I,
                        C = s.rotrSH(n, r, 28) ^ s.rotrBH(n, r, 34) ^ s.rotrBH(n, r, 39),
                        B = s.rotrSL(n, r, 28) ^ s.rotrBL(n, r, 34) ^ s.rotrBL(n, r, 39),
                        O = (n & o) ^ (n & a) ^ (o & a),
                        j = (r & i) ^ (r & c) ^ (i & c);
                      (_ = 0 | w),
                        (E = 0 | v),
                        (w = 0 | y),
                        (v = 0 | b),
                        (y = 0 | m),
                        (b = 0 | g),
                        ({ h: m, l: g } = s.add(0 | u, 0 | l, 0 | k, 0 | A)),
                        (u = 0 | a),
                        (l = 0 | c),
                        (a = 0 | o),
                        (c = 0 | i),
                        (o = 0 | n),
                        (i = 0 | r);
                      const R = s.add3L(A, B, j);
                      (n = s.add3H(R, k, C, O)), (r = 0 | R);
                    }
                    ({ h: n, l: r } = s.add(0 | this.Ah, 0 | this.Al, 0 | n, 0 | r)),
                      ({ h: o, l: i } = s.add(0 | this.Bh, 0 | this.Bl, 0 | o, 0 | i)),
                      ({ h: a, l: c } = s.add(0 | this.Ch, 0 | this.Cl, 0 | a, 0 | c)),
                      ({ h: u, l: l } = s.add(0 | this.Dh, 0 | this.Dl, 0 | u, 0 | l)),
                      ({ h: m, l: g } = s.add(0 | this.Eh, 0 | this.El, 0 | m, 0 | g)),
                      ({ h: y, l: b } = s.add(0 | this.Fh, 0 | this.Fl, 0 | y, 0 | b)),
                      ({ h: w, l: v } = s.add(0 | this.Gh, 0 | this.Gl, 0 | w, 0 | v)),
                      ({ h: _, l: E } = s.add(0 | this.Hh, 0 | this.Hl, 0 | _, 0 | E)),
                      this.set(n, r, o, i, a, c, u, l, m, g, y, b, w, v, _, E);
                  }
                  roundClean() {
                    (0, o.clean)(h, p);
                  }
                  destroy() {
                    (0, o.clean)(this.buffer),
                      this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                  }
                }
                n.SHA512 = m;
                class g extends m {
                  constructor() {
                    super(48),
                      (this.Ah = 0 | r.SHA384_IV[0]),
                      (this.Al = 0 | r.SHA384_IV[1]),
                      (this.Bh = 0 | r.SHA384_IV[2]),
                      (this.Bl = 0 | r.SHA384_IV[3]),
                      (this.Ch = 0 | r.SHA384_IV[4]),
                      (this.Cl = 0 | r.SHA384_IV[5]),
                      (this.Dh = 0 | r.SHA384_IV[6]),
                      (this.Dl = 0 | r.SHA384_IV[7]),
                      (this.Eh = 0 | r.SHA384_IV[8]),
                      (this.El = 0 | r.SHA384_IV[9]),
                      (this.Fh = 0 | r.SHA384_IV[10]),
                      (this.Fl = 0 | r.SHA384_IV[11]),
                      (this.Gh = 0 | r.SHA384_IV[12]),
                      (this.Gl = 0 | r.SHA384_IV[13]),
                      (this.Hh = 0 | r.SHA384_IV[14]),
                      (this.Hl = 0 | r.SHA384_IV[15]);
                  }
                }
                n.SHA384 = g;
                const y = Uint32Array.from([
                    2352822216, 424955298, 1944164710, 2312950998, 502970286, 855612546, 1738396948,
                    1479516111, 258812777, 2077511080, 2011393907, 79989058, 1067287976, 1780299464,
                    286451373, 2446758561,
                  ]),
                  b = Uint32Array.from([
                    573645204, 4230739756, 2673172387, 3360449730, 596883563, 1867755857,
                    2520282905, 1497426621, 2519219938, 2827943907, 3193839141, 1401305490,
                    721525244, 746961066, 246885852, 2177182882,
                  ]);
                class w extends m {
                  constructor() {
                    super(28),
                      (this.Ah = 0 | y[0]),
                      (this.Al = 0 | y[1]),
                      (this.Bh = 0 | y[2]),
                      (this.Bl = 0 | y[3]),
                      (this.Ch = 0 | y[4]),
                      (this.Cl = 0 | y[5]),
                      (this.Dh = 0 | y[6]),
                      (this.Dl = 0 | y[7]),
                      (this.Eh = 0 | y[8]),
                      (this.El = 0 | y[9]),
                      (this.Fh = 0 | y[10]),
                      (this.Fl = 0 | y[11]),
                      (this.Gh = 0 | y[12]),
                      (this.Gl = 0 | y[13]),
                      (this.Hh = 0 | y[14]),
                      (this.Hl = 0 | y[15]);
                  }
                }
                n.SHA512_224 = w;
                class v extends m {
                  constructor() {
                    super(32),
                      (this.Ah = 0 | b[0]),
                      (this.Al = 0 | b[1]),
                      (this.Bh = 0 | b[2]),
                      (this.Bl = 0 | b[3]),
                      (this.Ch = 0 | b[4]),
                      (this.Cl = 0 | b[5]),
                      (this.Dh = 0 | b[6]),
                      (this.Dl = 0 | b[7]),
                      (this.Eh = 0 | b[8]),
                      (this.El = 0 | b[9]),
                      (this.Fh = 0 | b[10]),
                      (this.Fl = 0 | b[11]),
                      (this.Gh = 0 | b[12]),
                      (this.Gl = 0 | b[13]),
                      (this.Hh = 0 | b[14]),
                      (this.Hl = 0 | b[15]);
                  }
                }
                (n.SHA512_256 = v),
                  (n.sha256 = (0, o.createHasher)(() => new c())),
                  (n.sha224 = (0, o.createHasher)(() => new u())),
                  (n.sha512 = (0, o.createHasher)(() => new m())),
                  (n.sha384 = (0, o.createHasher)(() => new g())),
                  (n.sha512_256 = (0, o.createHasher)(() => new v())),
                  (n.sha512_224 = (0, o.createHasher)(() => new w()));
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/sha2.js' },
    ],
    [
      3054,
      { './sha2.js': 3053 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha224 = n.SHA224 = n.sha256 = n.SHA256 = void 0);
                const r = e('./sha2.js');
                (n.SHA256 = r.SHA256),
                  (n.sha256 = r.sha256),
                  (n.SHA224 = r.SHA224),
                  (n.sha224 = r.sha224);
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/sha256.js' },
    ],
    [
      3055,
      { './_u64.js': 3046, './utils.js': 3057 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.shake256 =
                    n.shake128 =
                    n.keccak_512 =
                    n.keccak_384 =
                    n.keccak_256 =
                    n.keccak_224 =
                    n.sha3_512 =
                    n.sha3_384 =
                    n.sha3_256 =
                    n.sha3_224 =
                    n.Keccak =
                      void 0),
                  (n.keccakP = w);
                const r = e('./_u64.js'),
                  s = e('./utils.js'),
                  o = BigInt(0),
                  i = BigInt(1),
                  a = BigInt(2),
                  c = BigInt(7),
                  u = BigInt(256),
                  l = BigInt(113),
                  d = [],
                  f = [],
                  h = [];
                for (let e = 0, t = i, n = 1, r = 0; e < 24; e++) {
                  ([n, r] = [r, (2 * n + 3 * r) % 5]),
                    d.push(2 * (5 * r + n)),
                    f.push((((e + 1) * (e + 2)) / 2) % 64);
                  let s = o;
                  for (let e = 0; e < 7; e++)
                    (t = ((t << i) ^ ((t >> c) * l)) % u),
                      t & a && (s ^= i << ((i << BigInt(e)) - i));
                  h.push(s);
                }
                const p = (0, r.split)(h, !0),
                  m = p[0],
                  g = p[1],
                  y = (e, t, n) => (n > 32 ? (0, r.rotlBH)(e, t, n) : (0, r.rotlSH)(e, t, n)),
                  b = (e, t, n) => (n > 32 ? (0, r.rotlBL)(e, t, n) : (0, r.rotlSL)(e, t, n));
                function w(e, t = 24) {
                  const n = new Uint32Array(10);
                  for (let r = 24 - t; r < 24; r++) {
                    for (let t = 0; t < 10; t++)
                      n[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                      const r = (t + 8) % 10,
                        s = (t + 2) % 10,
                        o = n[s],
                        i = n[s + 1],
                        a = y(o, i, 1) ^ n[r],
                        c = b(o, i, 1) ^ n[r + 1];
                      for (let n = 0; n < 50; n += 10) (e[t + n] ^= a), (e[t + n + 1] ^= c);
                    }
                    let t = e[2],
                      s = e[3];
                    for (let n = 0; n < 24; n++) {
                      const r = f[n],
                        o = y(t, s, r),
                        i = b(t, s, r),
                        a = d[n];
                      (t = e[a]), (s = e[a + 1]), (e[a] = o), (e[a + 1] = i);
                    }
                    for (let t = 0; t < 50; t += 10) {
                      for (let r = 0; r < 10; r++) n[r] = e[t + r];
                      for (let r = 0; r < 10; r++) e[t + r] ^= ~n[(r + 2) % 10] & n[(r + 4) % 10];
                    }
                    (e[0] ^= m[r]), (e[1] ^= g[r]);
                  }
                  (0, s.clean)(n);
                }
                class v extends s.Hash {
                  constructor(e, t, n, r = !1, o = 24) {
                    if (
                      (super(),
                      (this.pos = 0),
                      (this.posOut = 0),
                      (this.finished = !1),
                      (this.destroyed = !1),
                      (this.enableXOF = !1),
                      (this.blockLen = e),
                      (this.suffix = t),
                      (this.outputLen = n),
                      (this.enableXOF = r),
                      (this.rounds = o),
                      (0, s.anumber)(n),
                      !(0 < e && e < 200))
                    )
                      throw new Error('only keccak-f1600 function is supported');
                    (this.state = new Uint8Array(200)), (this.state32 = (0, s.u32)(this.state));
                  }
                  clone() {
                    return this._cloneInto();
                  }
                  keccak() {
                    (0, s.swap32IfBE)(this.state32),
                      w(this.state32, this.rounds),
                      (0, s.swap32IfBE)(this.state32),
                      (this.posOut = 0),
                      (this.pos = 0);
                  }
                  update(e) {
                    (0, s.aexists)(this), (e = (0, s.toBytes)(e)), (0, s.abytes)(e);
                    const { blockLen: t, state: n } = this,
                      r = e.length;
                    for (let s = 0; s < r; ) {
                      const o = Math.min(t - this.pos, r - s);
                      for (let t = 0; t < o; t++) n[this.pos++] ^= e[s++];
                      this.pos === t && this.keccak();
                    }
                    return this;
                  }
                  finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    const { state: e, suffix: t, pos: n, blockLen: r } = this;
                    (e[n] ^= t),
                      128 & t && n === r - 1 && this.keccak(),
                      (e[r - 1] ^= 128),
                      this.keccak();
                  }
                  writeInto(e) {
                    (0, s.aexists)(this, !1), (0, s.abytes)(e), this.finish();
                    const t = this.state,
                      { blockLen: n } = this;
                    for (let r = 0, s = e.length; r < s; ) {
                      this.posOut >= n && this.keccak();
                      const o = Math.min(n - this.posOut, s - r);
                      e.set(t.subarray(this.posOut, this.posOut + o), r),
                        (this.posOut += o),
                        (r += o);
                    }
                    return e;
                  }
                  xofInto(e) {
                    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');
                    return this.writeInto(e);
                  }
                  xof(e) {
                    return (0, s.anumber)(e), this.xofInto(new Uint8Array(e));
                  }
                  digestInto(e) {
                    if (((0, s.aoutput)(e, this), this.finished))
                      throw new Error('digest() was already called');
                    return this.writeInto(e), this.destroy(), e;
                  }
                  digest() {
                    return this.digestInto(new Uint8Array(this.outputLen));
                  }
                  destroy() {
                    (this.destroyed = !0), (0, s.clean)(this.state);
                  }
                  _cloneInto(e) {
                    const { blockLen: t, suffix: n, outputLen: r, rounds: s, enableXOF: o } = this;
                    return (
                      e || (e = new v(t, n, r, o, s)),
                      e.state32.set(this.state32),
                      (e.pos = this.pos),
                      (e.posOut = this.posOut),
                      (e.finished = this.finished),
                      (e.rounds = s),
                      (e.suffix = n),
                      (e.outputLen = r),
                      (e.enableXOF = o),
                      (e.destroyed = this.destroyed),
                      e
                    );
                  }
                }
                n.Keccak = v;
                const _ = (e, t, n) => (0, s.createHasher)(() => new v(t, e, n));
                (n.sha3_224 = _(6, 144, 28)),
                  (n.sha3_256 = _(6, 136, 32)),
                  (n.sha3_384 = _(6, 104, 48)),
                  (n.sha3_512 = _(6, 72, 64)),
                  (n.keccak_224 = _(1, 144, 28)),
                  (n.keccak_256 = _(1, 136, 32)),
                  (n.keccak_384 = _(1, 104, 48)),
                  (n.keccak_512 = _(1, 72, 64));
                const E = (e, t, n) =>
                  (0, s.createXOFer)(
                    (r = {}) => new v(t, e, r.dkLen === undefined ? n : r.dkLen, !0)
                  );
                (n.shake128 = E(31, 168, 16)), (n.shake256 = E(31, 136, 32));
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/sha3.js' },
    ],
    [
      3056,
      { './sha2.js': 3053 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha512_256 =
                    n.SHA512_256 =
                    n.sha512_224 =
                    n.SHA512_224 =
                    n.sha384 =
                    n.SHA384 =
                    n.sha512 =
                    n.SHA512 =
                      void 0);
                const r = e('./sha2.js');
                (n.SHA512 = r.SHA512),
                  (n.sha512 = r.sha512),
                  (n.SHA384 = r.SHA384),
                  (n.sha384 = r.sha384),
                  (n.SHA512_224 = r.SHA512_224),
                  (n.sha512_224 = r.sha512_224),
                  (n.SHA512_256 = r.SHA512_256),
                  (n.sha512_256 = r.sha512_256);
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/sha512.js' },
    ],
    [
      3057,
      { '@noble/hashes/crypto': 3047 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.wrapXOFConstructorWithOpts =
                    n.wrapConstructorWithOpts =
                    n.wrapConstructor =
                    n.Hash =
                    n.nextTick =
                    n.swap32IfBE =
                    n.byteSwapIfBE =
                    n.swap8IfBE =
                    n.isLE =
                      void 0),
                  (n.isBytes = s),
                  (n.anumber = o),
                  (n.abytes = i),
                  (n.ahash = function (e) {
                    if ('function' != typeof e || 'function' != typeof e.create)
                      throw new Error('Hash should be wrapped by utils.createHasher');
                    o(e.outputLen), o(e.blockLen);
                  }),
                  (n.aexists = function (e, t = !0) {
                    if (e.destroyed) throw new Error('Hash instance has been destroyed');
                    if (t && e.finished) throw new Error('Hash#digest() has already been called');
                  }),
                  (n.aoutput = function (e, t) {
                    i(e);
                    const n = t.outputLen;
                    if (e.length < n)
                      throw new Error('digestInto() expects output buffer of length at least ' + n);
                  }),
                  (n.u8 = function (e) {
                    return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                  }),
                  (n.u32 = function (e) {
                    return new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
                  }),
                  (n.clean = function (...e) {
                    for (let t = 0; t < e.length; t++) e[t].fill(0);
                  }),
                  (n.createView = function (e) {
                    return new DataView(e.buffer, e.byteOffset, e.byteLength);
                  }),
                  (n.rotr = function (e, t) {
                    return (e << (32 - t)) | (e >>> t);
                  }),
                  (n.rotl = function (e, t) {
                    return (e << t) | ((e >>> (32 - t)) >>> 0);
                  }),
                  (n.byteSwap = a),
                  (n.byteSwap32 = c),
                  (n.bytesToHex = function (e) {
                    if ((i(e), u)) return e.toHex();
                    let t = '';
                    for (let n = 0; n < e.length; n++) t += l[e[n]];
                    return t;
                  }),
                  (n.hexToBytes = function (e) {
                    if ('string' != typeof e)
                      throw new Error('hex string expected, got ' + typeof e);
                    if (u) return Uint8Array.fromHex(e);
                    const t = e.length,
                      n = t / 2;
                    if (t % 2)
                      throw new Error('hex string expected, got unpadded hex of length ' + t);
                    const r = new Uint8Array(n);
                    for (let t = 0, s = 0; t < n; t++, s += 2) {
                      const n = f(e.charCodeAt(s)),
                        o = f(e.charCodeAt(s + 1));
                      if (n === undefined || o === undefined) {
                        const t = e[s] + e[s + 1];
                        throw new Error(
                          'hex string expected, got non-hex character "' + t + '" at index ' + s
                        );
                      }
                      r[t] = 16 * n + o;
                    }
                    return r;
                  }),
                  (n.asyncLoop = async function (e, t, r) {
                    let s = Date.now();
                    for (let o = 0; o < e; o++) {
                      r(o);
                      const e = Date.now() - s;
                      (e >= 0 && e < t) || (await (0, n.nextTick)(), (s += e));
                    }
                  }),
                  (n.utf8ToBytes = h),
                  (n.bytesToUtf8 = function (e) {
                    return new TextDecoder().decode(e);
                  }),
                  (n.toBytes = p),
                  (n.kdfInputToBytes = function (e) {
                    'string' == typeof e && (e = h(e));
                    return i(e), e;
                  }),
                  (n.concatBytes = function (...e) {
                    let t = 0;
                    for (let n = 0; n < e.length; n++) {
                      const r = e[n];
                      i(r), (t += r.length);
                    }
                    const n = new Uint8Array(t);
                    for (let t = 0, r = 0; t < e.length; t++) {
                      const s = e[t];
                      n.set(s, r), (r += s.length);
                    }
                    return n;
                  }),
                  (n.checkOpts = function (e, t) {
                    if (t !== undefined && '[object Object]' !== {}.toString.call(t))
                      throw new Error('options should be object or undefined');
                    return Object.assign(e, t);
                  }),
                  (n.createHasher = m),
                  (n.createOptHasher = g),
                  (n.createXOFer = y),
                  (n.randomBytes = function (e = 32) {
                    if (r.crypto && 'function' == typeof r.crypto.getRandomValues)
                      return r.crypto.getRandomValues(new Uint8Array(e));
                    if (r.crypto && 'function' == typeof r.crypto.randomBytes)
                      return Uint8Array.from(r.crypto.randomBytes(e));
                    throw new Error('crypto.getRandomValues must be defined');
                  });
                const r = e('@noble/hashes/crypto');
                function s(e) {
                  return (
                    e instanceof Uint8Array ||
                    (ArrayBuffer.isView(e) && 'Uint8Array' === e.constructor.name)
                  );
                }
                function o(e) {
                  if (!Number.isSafeInteger(e) || e < 0)
                    throw new Error('positive integer expected, got ' + e);
                }
                function i(e, ...t) {
                  if (!s(e)) throw new Error('Uint8Array expected');
                  if (t.length > 0 && !t.includes(e.length))
                    throw new Error(
                      'Uint8Array expected of length ' + t + ', got length=' + e.length
                    );
                }
                function a(e) {
                  return (
                    ((e << 24) & 4278190080) |
                    ((e << 8) & 16711680) |
                    ((e >>> 8) & 65280) |
                    ((e >>> 24) & 255)
                  );
                }
                function c(e) {
                  for (let t = 0; t < e.length; t++) e[t] = a(e[t]);
                  return e;
                }
                (n.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]),
                  (n.swap8IfBE = n.isLE ? e => e : e => a(e)),
                  (n.byteSwapIfBE = n.swap8IfBE),
                  (n.swap32IfBE = n.isLE ? e => e : c);
                const u = (() =>
                    'function' == typeof Uint8Array.from([]).toHex &&
                    'function' == typeof Uint8Array.fromHex)(),
                  l = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                const d = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
                function f(e) {
                  return e >= d._0 && e <= d._9
                    ? e - d._0
                    : e >= d.A && e <= d.F
                      ? e - (d.A - 10)
                      : e >= d.a && e <= d.f
                        ? e - (d.a - 10)
                        : void 0;
                }
                function h(e) {
                  if ('string' != typeof e) throw new Error('string expected');
                  return new Uint8Array(new TextEncoder().encode(e));
                }
                function p(e) {
                  return 'string' == typeof e && (e = h(e)), i(e), e;
                }
                n.nextTick = async () => {};
                function m(e) {
                  const t = t => e().update(p(t)).digest(),
                    n = e();
                  return (
                    (t.outputLen = n.outputLen),
                    (t.blockLen = n.blockLen),
                    (t.create = () => e()),
                    t
                  );
                }
                function g(e) {
                  const t = (t, n) => e(n).update(p(t)).digest(),
                    n = e({});
                  return (
                    (t.outputLen = n.outputLen),
                    (t.blockLen = n.blockLen),
                    (t.create = t => e(t)),
                    t
                  );
                }
                function y(e) {
                  const t = (t, n) => e(n).update(p(t)).digest(),
                    n = e({});
                  return (
                    (t.outputLen = n.outputLen),
                    (t.blockLen = n.blockLen),
                    (t.create = t => e(t)),
                    t
                  );
                }
                (n.Hash = class {}),
                  (n.wrapConstructor = m),
                  (n.wrapConstructorWithOpts = g),
                  (n.wrapXOFConstructorWithOpts = y);
              };
            };
      },
      { package: '@noble/hashes', file: 'node_modules/@noble/hashes/utils.js' },
    ],
    [
      3062,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  var t = e.getBoundingClientRect();
                  return {
                    width: t.width,
                    height: t.height,
                    top: t.top,
                    right: t.right,
                    bottom: t.bottom,
                    left: t.left,
                    x: t.left,
                    y: t.top,
                  };
                }
                function s(e) {
                  if (null == e) return window;
                  if ('[object Window]' !== e.toString()) {
                    var t = e.ownerDocument;
                    return (t && t.defaultView) || window;
                  }
                  return e;
                }
                function o(e) {
                  var t = s(e);
                  return { scrollLeft: t.pageXOffset, scrollTop: t.pageYOffset };
                }
                function i(e) {
                  return e instanceof s(e).Element || e instanceof Element;
                }
                function a(e) {
                  return e instanceof s(e).HTMLElement || e instanceof HTMLElement;
                }
                function c(e) {
                  return (
                    'undefined' != typeof ShadowRoot &&
                    (e instanceof s(e).ShadowRoot || e instanceof ShadowRoot)
                  );
                }
                function u(e) {
                  return e ? (e.nodeName || '').toLowerCase() : null;
                }
                function l(e) {
                  return ((i(e) ? e.ownerDocument : e.document) || window.document).documentElement;
                }
                function d(e) {
                  return r(l(e)).left + o(e).scrollLeft;
                }
                function f(e) {
                  return s(e).getComputedStyle(e);
                }
                function h(e) {
                  var t = f(e),
                    n = t.overflow,
                    r = t.overflowX,
                    s = t.overflowY;
                  return /auto|scroll|overlay|hidden/.test(n + s + r);
                }
                function p(e, t, n) {
                  void 0 === n && (n = !1);
                  var i,
                    c,
                    f = l(t),
                    p = r(e),
                    m = a(t),
                    g = { scrollLeft: 0, scrollTop: 0 },
                    y = { x: 0, y: 0 };
                  return (
                    (m || (!m && !n)) &&
                      (('body' !== u(t) || h(f)) &&
                        (g =
                          (i = t) !== s(i) && a(i)
                            ? { scrollLeft: (c = i).scrollLeft, scrollTop: c.scrollTop }
                            : o(i)),
                      a(t)
                        ? (((y = r(t)).x += t.clientLeft), (y.y += t.clientTop))
                        : f && (y.x = d(f))),
                    {
                      x: p.left + g.scrollLeft - y.x,
                      y: p.top + g.scrollTop - y.y,
                      width: p.width,
                      height: p.height,
                    }
                  );
                }
                function m(e) {
                  var t = r(e),
                    n = e.offsetWidth,
                    s = e.offsetHeight;
                  return (
                    Math.abs(t.width - n) <= 1 && (n = t.width),
                    Math.abs(t.height - s) <= 1 && (s = t.height),
                    { x: e.offsetLeft, y: e.offsetTop, width: n, height: s }
                  );
                }
                function g(e) {
                  return 'html' === u(e)
                    ? e
                    : e.assignedSlot || e.parentNode || (c(e) ? e.host : null) || l(e);
                }
                function y(e) {
                  return ['html', 'body', '#document'].indexOf(u(e)) >= 0
                    ? e.ownerDocument.body
                    : a(e) && h(e)
                      ? e
                      : y(g(e));
                }
                function b(e, t) {
                  var n;
                  void 0 === t && (t = []);
                  var r = y(e),
                    o = r === (null == (n = e.ownerDocument) ? void 0 : n.body),
                    i = s(r),
                    a = o ? [i].concat(i.visualViewport || [], h(r) ? r : []) : r,
                    c = t.concat(a);
                  return o ? c : c.concat(b(g(a)));
                }
                function w(e) {
                  return ['table', 'td', 'th'].indexOf(u(e)) >= 0;
                }
                function v(e) {
                  return a(e) && 'fixed' !== f(e).position ? e.offsetParent : null;
                }
                function _(e) {
                  for (var t = s(e), n = v(e); n && w(n) && 'static' === f(n).position; ) n = v(n);
                  return n && ('html' === u(n) || ('body' === u(n) && 'static' === f(n).position))
                    ? t
                    : n ||
                        (function (e) {
                          var t = -1 !== navigator.userAgent.toLowerCase().indexOf('firefox');
                          if (
                            -1 !== navigator.userAgent.indexOf('Trident') &&
                            a(e) &&
                            'fixed' === f(e).position
                          )
                            return null;
                          for (var n = g(e); a(n) && ['html', 'body'].indexOf(u(n)) < 0; ) {
                            var r = f(n);
                            if (
                              'none' !== r.transform ||
                              'none' !== r.perspective ||
                              'paint' === r.contain ||
                              -1 !== ['transform', 'perspective'].indexOf(r.willChange) ||
                              (t && 'filter' === r.willChange) ||
                              (t && r.filter && 'none' !== r.filter)
                            )
                              return n;
                            n = n.parentNode;
                          }
                          return null;
                        })(e) ||
                        t;
                }
                Object.defineProperty(n, '__esModule', { value: !0 });
                var E = 'top',
                  S = 'bottom',
                  x = 'right',
                  T = 'left',
                  I = 'auto',
                  k = [E, S, x, T],
                  A = 'start',
                  C = 'end',
                  B = 'clippingParents',
                  O = 'viewport',
                  j = 'popper',
                  R = 'reference',
                  P = k.reduce(function (e, t) {
                    return e.concat([t + '-' + A, t + '-' + C]);
                  }, []),
                  N = [].concat(k, [I]).reduce(function (e, t) {
                    return e.concat([t, t + '-' + A, t + '-' + C]);
                  }, []),
                  L = [
                    'beforeRead',
                    'read',
                    'afterRead',
                    'beforeMain',
                    'main',
                    'afterMain',
                    'beforeWrite',
                    'write',
                    'afterWrite',
                  ];
                function M(e) {
                  var t = new Map(),
                    n = new Set(),
                    r = [];
                  function s(e) {
                    n.add(e.name),
                      [].concat(e.requires || [], e.requiresIfExists || []).forEach(function (e) {
                        if (!n.has(e)) {
                          var r = t.get(e);
                          r && s(r);
                        }
                      }),
                      r.push(e);
                  }
                  return (
                    e.forEach(function (e) {
                      t.set(e.name, e);
                    }),
                    e.forEach(function (e) {
                      n.has(e.name) || s(e);
                    }),
                    r
                  );
                }
                function D(e) {
                  return e.split('-')[0];
                }
                var F = Math.max,
                  H = Math.min,
                  U = Math.round;
                function W(e, t) {
                  var n = t.getRootNode && t.getRootNode();
                  if (e.contains(t)) return !0;
                  if (n && c(n)) {
                    var r = t;
                    do {
                      if (r && e.isSameNode(r)) return !0;
                      r = r.parentNode || r.host;
                    } while (r);
                  }
                  return !1;
                }
                function G(e) {
                  return Object.assign({}, e, {
                    left: e.x,
                    top: e.y,
                    right: e.x + e.width,
                    bottom: e.y + e.height,
                  });
                }
                function z(e, t) {
                  return t === O
                    ? G(
                        (function (e) {
                          var t = s(e),
                            n = l(e),
                            r = t.visualViewport,
                            o = n.clientWidth,
                            i = n.clientHeight,
                            a = 0,
                            c = 0;
                          return (
                            r &&
                              ((o = r.width),
                              (i = r.height),
                              /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ||
                                ((a = r.offsetLeft), (c = r.offsetTop))),
                            { width: o, height: i, x: a + d(e), y: c }
                          );
                        })(e)
                      )
                    : a(t)
                      ? (function (e) {
                          var t = r(e);
                          return (
                            (t.top = t.top + e.clientTop),
                            (t.left = t.left + e.clientLeft),
                            (t.bottom = t.top + e.clientHeight),
                            (t.right = t.left + e.clientWidth),
                            (t.width = e.clientWidth),
                            (t.height = e.clientHeight),
                            (t.x = t.left),
                            (t.y = t.top),
                            t
                          );
                        })(t)
                      : G(
                          (function (e) {
                            var t,
                              n = l(e),
                              r = o(e),
                              s = null == (t = e.ownerDocument) ? void 0 : t.body,
                              i = F(
                                n.scrollWidth,
                                n.clientWidth,
                                s ? s.scrollWidth : 0,
                                s ? s.clientWidth : 0
                              ),
                              a = F(
                                n.scrollHeight,
                                n.clientHeight,
                                s ? s.scrollHeight : 0,
                                s ? s.clientHeight : 0
                              ),
                              c = -r.scrollLeft + d(e),
                              u = -r.scrollTop;
                            return (
                              'rtl' === f(s || n).direction &&
                                (c += F(n.clientWidth, s ? s.clientWidth : 0) - i),
                              { width: i, height: a, x: c, y: u }
                            );
                          })(l(e))
                        );
                }
                function q(e, t, n) {
                  var r =
                      'clippingParents' === t
                        ? (function (e) {
                            var t = b(g(e)),
                              n =
                                ['absolute', 'fixed'].indexOf(f(e).position) >= 0 && a(e)
                                  ? _(e)
                                  : e;
                            return i(n)
                              ? t.filter(function (e) {
                                  return i(e) && W(e, n) && 'body' !== u(e);
                                })
                              : [];
                          })(e)
                        : [].concat(t),
                    s = [].concat(r, [n]),
                    o = s[0],
                    c = s.reduce(
                      function (t, n) {
                        var r = z(e, n);
                        return (
                          (t.top = F(r.top, t.top)),
                          (t.right = H(r.right, t.right)),
                          (t.bottom = H(r.bottom, t.bottom)),
                          (t.left = F(r.left, t.left)),
                          t
                        );
                      },
                      z(e, o)
                    );
                  return (
                    (c.width = c.right - c.left),
                    (c.height = c.bottom - c.top),
                    (c.x = c.left),
                    (c.y = c.top),
                    c
                  );
                }
                function $(e) {
                  return e.split('-')[1];
                }
                function V(e) {
                  return ['top', 'bottom'].indexOf(e) >= 0 ? 'x' : 'y';
                }
                function K(e) {
                  var t,
                    n = e.reference,
                    r = e.element,
                    s = e.placement,
                    o = s ? D(s) : null,
                    i = s ? $(s) : null,
                    a = n.x + n.width / 2 - r.width / 2,
                    c = n.y + n.height / 2 - r.height / 2;
                  switch (o) {
                    case E:
                      t = { x: a, y: n.y - r.height };
                      break;
                    case S:
                      t = { x: a, y: n.y + n.height };
                      break;
                    case x:
                      t = { x: n.x + n.width, y: c };
                      break;
                    case T:
                      t = { x: n.x - r.width, y: c };
                      break;
                    default:
                      t = { x: n.x, y: n.y };
                  }
                  var u = o ? V(o) : null;
                  if (null != u) {
                    var l = 'y' === u ? 'height' : 'width';
                    switch (i) {
                      case A:
                        t[u] = t[u] - (n[l] / 2 - r[l] / 2);
                        break;
                      case C:
                        t[u] = t[u] + (n[l] / 2 - r[l] / 2);
                    }
                  }
                  return t;
                }
                function X(e) {
                  return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, e);
                }
                function Y(e, t) {
                  return t.reduce(function (t, n) {
                    return (t[n] = e), t;
                  }, {});
                }
                function J(e, t) {
                  void 0 === t && (t = {});
                  var n = t,
                    s = n.placement,
                    o = void 0 === s ? e.placement : s,
                    a = n.boundary,
                    c = void 0 === a ? B : a,
                    u = n.rootBoundary,
                    d = void 0 === u ? O : u,
                    f = n.elementContext,
                    h = void 0 === f ? j : f,
                    p = n.altBoundary,
                    m = void 0 !== p && p,
                    g = n.padding,
                    y = void 0 === g ? 0 : g,
                    b = X('number' != typeof y ? y : Y(y, k)),
                    w = h === j ? R : j,
                    v = e.elements.reference,
                    _ = e.rects.popper,
                    T = e.elements[m ? w : h],
                    I = q(i(T) ? T : T.contextElement || l(e.elements.popper), c, d),
                    A = r(v),
                    C = K({ reference: A, element: _, strategy: 'absolute', placement: o }),
                    P = G(Object.assign({}, _, C)),
                    N = h === j ? P : A,
                    L = {
                      top: I.top - N.top + b.top,
                      bottom: N.bottom - I.bottom + b.bottom,
                      left: I.left - N.left + b.left,
                      right: N.right - I.right + b.right,
                    },
                    M = e.modifiersData.offset;
                  if (h === j && M) {
                    var D = M[o];
                    Object.keys(L).forEach(function (e) {
                      var t = [x, S].indexOf(e) >= 0 ? 1 : -1,
                        n = [E, S].indexOf(e) >= 0 ? 'y' : 'x';
                      L[e] += D[n] * t;
                    });
                  }
                  return L;
                }
                var Z = { placement: 'bottom', modifiers: [], strategy: 'absolute' };
                function Q() {
                  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                    t[n] = arguments[n];
                  return !t.some(function (e) {
                    return !(e && 'function' == typeof e.getBoundingClientRect);
                  });
                }
                function ee(e) {
                  void 0 === e && (e = {});
                  var t = e,
                    n = t.defaultModifiers,
                    r = void 0 === n ? [] : n,
                    s = t.defaultOptions,
                    o = void 0 === s ? Z : s;
                  return function (e, t, n) {
                    void 0 === n && (n = o);
                    var s,
                      a,
                      c = {
                        placement: 'bottom',
                        orderedModifiers: [],
                        options: Object.assign({}, Z, o),
                        modifiersData: {},
                        elements: { reference: e, popper: t },
                        attributes: {},
                        styles: {},
                      },
                      u = [],
                      l = !1,
                      d = {
                        state: c,
                        setOptions: function (n) {
                          f(),
                            (c.options = Object.assign({}, o, c.options, n)),
                            (c.scrollParents = {
                              reference: i(e) ? b(e) : e.contextElement ? b(e.contextElement) : [],
                              popper: b(t),
                            });
                          var s = (function (e) {
                            var t = M(e);
                            return L.reduce(function (e, n) {
                              return e.concat(
                                t.filter(function (e) {
                                  return e.phase === n;
                                })
                              );
                            }, []);
                          })(
                            (function (e) {
                              var t = e.reduce(function (e, t) {
                                var n = e[t.name];
                                return (
                                  (e[t.name] = n
                                    ? Object.assign({}, n, t, {
                                        options: Object.assign({}, n.options, t.options),
                                        data: Object.assign({}, n.data, t.data),
                                      })
                                    : t),
                                  e
                                );
                              }, {});
                              return Object.keys(t).map(function (e) {
                                return t[e];
                              });
                            })([].concat(r, c.options.modifiers))
                          );
                          return (
                            (c.orderedModifiers = s.filter(function (e) {
                              return e.enabled;
                            })),
                            c.orderedModifiers.forEach(function (e) {
                              var t = e.name,
                                n = e.options,
                                r = void 0 === n ? {} : n,
                                s = e.effect;
                              if ('function' == typeof s) {
                                var o = s({ state: c, name: t, instance: d, options: r }),
                                  i = function () {};
                                u.push(o || i);
                              }
                            }),
                            d.update()
                          );
                        },
                        forceUpdate: function () {
                          if (!l) {
                            var e = c.elements,
                              t = e.reference,
                              n = e.popper;
                            if (Q(t, n)) {
                              (c.rects = {
                                reference: p(t, _(n), 'fixed' === c.options.strategy),
                                popper: m(n),
                              }),
                                (c.reset = !1),
                                (c.placement = c.options.placement),
                                c.orderedModifiers.forEach(function (e) {
                                  return (c.modifiersData[e.name] = Object.assign({}, e.data));
                                });
                              for (var r = 0; r < c.orderedModifiers.length; r++)
                                if (!0 !== c.reset) {
                                  var s = c.orderedModifiers[r],
                                    o = s.fn,
                                    i = s.options,
                                    a = void 0 === i ? {} : i,
                                    u = s.name;
                                  'function' == typeof o &&
                                    (c = o({ state: c, options: a, name: u, instance: d }) || c);
                                } else (c.reset = !1), (r = -1);
                            }
                          }
                        },
                        update:
                          ((s = function () {
                            return new Promise(function (e) {
                              d.forceUpdate(), e(c);
                            });
                          }),
                          function () {
                            return (
                              a ||
                                (a = new Promise(function (e) {
                                  Promise.resolve().then(function () {
                                    (a = undefined), e(s());
                                  });
                                })),
                              a
                            );
                          }),
                        destroy: function () {
                          f(), (l = !0);
                        },
                      };
                    if (!Q(e, t)) return d;
                    function f() {
                      u.forEach(function (e) {
                        return e();
                      }),
                        (u = []);
                    }
                    return (
                      d.setOptions(n).then(function (e) {
                        !l && n.onFirstUpdate && n.onFirstUpdate(e);
                      }),
                      d
                    );
                  };
                }
                var te = { passive: !0 };
                var ne = {
                  name: 'eventListeners',
                  enabled: !0,
                  phase: 'write',
                  fn: function () {},
                  effect: function (e) {
                    var t = e.state,
                      n = e.instance,
                      r = e.options,
                      o = r.scroll,
                      i = void 0 === o || o,
                      a = r.resize,
                      c = void 0 === a || a,
                      u = s(t.elements.popper),
                      l = [].concat(t.scrollParents.reference, t.scrollParents.popper);
                    return (
                      i &&
                        l.forEach(function (e) {
                          e.addEventListener('scroll', n.update, te);
                        }),
                      c && u.addEventListener('resize', n.update, te),
                      function () {
                        i &&
                          l.forEach(function (e) {
                            e.removeEventListener('scroll', n.update, te);
                          }),
                          c && u.removeEventListener('resize', n.update, te);
                      }
                    );
                  },
                  data: {},
                };
                var re = {
                    name: 'popperOffsets',
                    enabled: !0,
                    phase: 'read',
                    fn: function (e) {
                      var t = e.state,
                        n = e.name;
                      t.modifiersData[n] = K({
                        reference: t.rects.reference,
                        element: t.rects.popper,
                        strategy: 'absolute',
                        placement: t.placement,
                      });
                    },
                    data: {},
                  },
                  se = { top: 'auto', right: 'auto', bottom: 'auto', left: 'auto' };
                function oe(e) {
                  var t,
                    n = e.popper,
                    r = e.popperRect,
                    o = e.placement,
                    i = e.offsets,
                    a = e.position,
                    c = e.gpuAcceleration,
                    u = e.adaptive,
                    d = e.roundOffsets,
                    h =
                      !0 === d
                        ? (function (e) {
                            var t = e.x,
                              n = e.y,
                              r = window.devicePixelRatio || 1;
                            return { x: U(U(t * r) / r) || 0, y: U(U(n * r) / r) || 0 };
                          })(i)
                        : 'function' == typeof d
                          ? d(i)
                          : i,
                    p = h.x,
                    m = void 0 === p ? 0 : p,
                    g = h.y,
                    y = void 0 === g ? 0 : g,
                    b = i.hasOwnProperty('x'),
                    w = i.hasOwnProperty('y'),
                    v = T,
                    I = E,
                    k = window;
                  if (u) {
                    var A = _(n),
                      C = 'clientHeight',
                      B = 'clientWidth';
                    A === s(n) &&
                      'static' !== f((A = l(n))).position &&
                      ((C = 'scrollHeight'), (B = 'scrollWidth')),
                      o === E && ((I = S), (y -= A[C] - r.height), (y *= c ? 1 : -1)),
                      o === T && ((v = x), (m -= A[B] - r.width), (m *= c ? 1 : -1));
                  }
                  var O,
                    j = Object.assign({ position: a }, u && se);
                  return c
                    ? Object.assign(
                        {},
                        j,
                        (((O = {})[I] = w ? '0' : ''),
                        (O[v] = b ? '0' : ''),
                        (O.transform =
                          (k.devicePixelRatio || 1) < 2
                            ? 'translate(' + m + 'px, ' + y + 'px)'
                            : 'translate3d(' + m + 'px, ' + y + 'px, 0)'),
                        O)
                      )
                    : Object.assign(
                        {},
                        j,
                        (((t = {})[I] = w ? y + 'px' : ''),
                        (t[v] = b ? m + 'px' : ''),
                        (t.transform = ''),
                        t)
                      );
                }
                var ie = {
                  name: 'computeStyles',
                  enabled: !0,
                  phase: 'beforeWrite',
                  fn: function (e) {
                    var t = e.state,
                      n = e.options,
                      r = n.gpuAcceleration,
                      s = void 0 === r || r,
                      o = n.adaptive,
                      i = void 0 === o || o,
                      a = n.roundOffsets,
                      c = void 0 === a || a,
                      u = {
                        placement: D(t.placement),
                        popper: t.elements.popper,
                        popperRect: t.rects.popper,
                        gpuAcceleration: s,
                      };
                    null != t.modifiersData.popperOffsets &&
                      (t.styles.popper = Object.assign(
                        {},
                        t.styles.popper,
                        oe(
                          Object.assign({}, u, {
                            offsets: t.modifiersData.popperOffsets,
                            position: t.options.strategy,
                            adaptive: i,
                            roundOffsets: c,
                          })
                        )
                      )),
                      null != t.modifiersData.arrow &&
                        (t.styles.arrow = Object.assign(
                          {},
                          t.styles.arrow,
                          oe(
                            Object.assign({}, u, {
                              offsets: t.modifiersData.arrow,
                              position: 'absolute',
                              adaptive: !1,
                              roundOffsets: c,
                            })
                          )
                        )),
                      (t.attributes.popper = Object.assign({}, t.attributes.popper, {
                        'data-popper-placement': t.placement,
                      }));
                  },
                  data: {},
                };
                var ae = {
                  name: 'applyStyles',
                  enabled: !0,
                  phase: 'write',
                  fn: function (e) {
                    var t = e.state;
                    Object.keys(t.elements).forEach(function (e) {
                      var n = t.styles[e] || {},
                        r = t.attributes[e] || {},
                        s = t.elements[e];
                      a(s) &&
                        u(s) &&
                        (Object.assign(s.style, n),
                        Object.keys(r).forEach(function (e) {
                          var t = r[e];
                          !1 === t ? s.removeAttribute(e) : s.setAttribute(e, !0 === t ? '' : t);
                        }));
                    });
                  },
                  effect: function (e) {
                    var t = e.state,
                      n = {
                        popper: { position: t.options.strategy, left: '0', top: '0', margin: '0' },
                        arrow: { position: 'absolute' },
                        reference: {},
                      };
                    return (
                      Object.assign(t.elements.popper.style, n.popper),
                      (t.styles = n),
                      t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow),
                      function () {
                        Object.keys(t.elements).forEach(function (e) {
                          var r = t.elements[e],
                            s = t.attributes[e] || {},
                            o = Object.keys(t.styles.hasOwnProperty(e) ? t.styles[e] : n[e]).reduce(
                              function (e, t) {
                                return (e[t] = ''), e;
                              },
                              {}
                            );
                          a(r) &&
                            u(r) &&
                            (Object.assign(r.style, o),
                            Object.keys(s).forEach(function (e) {
                              r.removeAttribute(e);
                            }));
                        });
                      }
                    );
                  },
                  requires: ['computeStyles'],
                };
                var ce = {
                    name: 'offset',
                    enabled: !0,
                    phase: 'main',
                    requires: ['popperOffsets'],
                    fn: function (e) {
                      var t = e.state,
                        n = e.options,
                        r = e.name,
                        s = n.offset,
                        o = void 0 === s ? [0, 0] : s,
                        i = N.reduce(function (e, n) {
                          return (
                            (e[n] = (function (e, t, n) {
                              var r = D(e),
                                s = [T, E].indexOf(r) >= 0 ? -1 : 1,
                                o =
                                  'function' == typeof n
                                    ? n(Object.assign({}, t, { placement: e }))
                                    : n,
                                i = o[0],
                                a = o[1];
                              return (
                                (i = i || 0),
                                (a = (a || 0) * s),
                                [T, x].indexOf(r) >= 0 ? { x: a, y: i } : { x: i, y: a }
                              );
                            })(n, t.rects, o)),
                            e
                          );
                        }, {}),
                        a = i[t.placement],
                        c = a.x,
                        u = a.y;
                      null != t.modifiersData.popperOffsets &&
                        ((t.modifiersData.popperOffsets.x += c),
                        (t.modifiersData.popperOffsets.y += u)),
                        (t.modifiersData[r] = i);
                    },
                  },
                  ue = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
                function le(e) {
                  return e.replace(/left|right|bottom|top/g, function (e) {
                    return ue[e];
                  });
                }
                var de = { start: 'end', end: 'start' };
                function fe(e) {
                  return e.replace(/start|end/g, function (e) {
                    return de[e];
                  });
                }
                function he(e, t) {
                  void 0 === t && (t = {});
                  var n = t,
                    r = n.placement,
                    s = n.boundary,
                    o = n.rootBoundary,
                    i = n.padding,
                    a = n.flipVariations,
                    c = n.allowedAutoPlacements,
                    u = void 0 === c ? N : c,
                    l = $(r),
                    d = l
                      ? a
                        ? P
                        : P.filter(function (e) {
                            return $(e) === l;
                          })
                      : k,
                    f = d.filter(function (e) {
                      return u.indexOf(e) >= 0;
                    });
                  0 === f.length && (f = d);
                  var h = f.reduce(function (t, n) {
                    return (
                      (t[n] = J(e, { placement: n, boundary: s, rootBoundary: o, padding: i })[
                        D(n)
                      ]),
                      t
                    );
                  }, {});
                  return Object.keys(h).sort(function (e, t) {
                    return h[e] - h[t];
                  });
                }
                var pe = {
                  name: 'flip',
                  enabled: !0,
                  phase: 'main',
                  fn: function (e) {
                    var t = e.state,
                      n = e.options,
                      r = e.name;
                    if (!t.modifiersData[r]._skip) {
                      for (
                        var s = n.mainAxis,
                          o = void 0 === s || s,
                          i = n.altAxis,
                          a = void 0 === i || i,
                          c = n.fallbackPlacements,
                          u = n.padding,
                          l = n.boundary,
                          d = n.rootBoundary,
                          f = n.altBoundary,
                          h = n.flipVariations,
                          p = void 0 === h || h,
                          m = n.allowedAutoPlacements,
                          g = t.options.placement,
                          y = D(g),
                          b =
                            c ||
                            (y === g || !p
                              ? [le(g)]
                              : (function (e) {
                                  if (D(e) === I) return [];
                                  var t = le(e);
                                  return [fe(e), t, fe(t)];
                                })(g)),
                          w = [g].concat(b).reduce(function (e, n) {
                            return e.concat(
                              D(n) === I
                                ? he(t, {
                                    placement: n,
                                    boundary: l,
                                    rootBoundary: d,
                                    padding: u,
                                    flipVariations: p,
                                    allowedAutoPlacements: m,
                                  })
                                : n
                            );
                          }, []),
                          v = t.rects.reference,
                          _ = t.rects.popper,
                          k = new Map(),
                          C = !0,
                          B = w[0],
                          O = 0;
                        O < w.length;
                        O++
                      ) {
                        var j = w[O],
                          R = D(j),
                          P = $(j) === A,
                          N = [E, S].indexOf(R) >= 0,
                          L = N ? 'width' : 'height',
                          M = J(t, {
                            placement: j,
                            boundary: l,
                            rootBoundary: d,
                            altBoundary: f,
                            padding: u,
                          }),
                          F = N ? (P ? x : T) : P ? S : E;
                        v[L] > _[L] && (F = le(F));
                        var H = le(F),
                          U = [];
                        if (
                          (o && U.push(M[R] <= 0),
                          a && U.push(M[F] <= 0, M[H] <= 0),
                          U.every(function (e) {
                            return e;
                          }))
                        ) {
                          (B = j), (C = !1);
                          break;
                        }
                        k.set(j, U);
                      }
                      if (C)
                        for (
                          var W = function (e) {
                              var t = w.find(function (t) {
                                var n = k.get(t);
                                if (n)
                                  return n.slice(0, e).every(function (e) {
                                    return e;
                                  });
                              });
                              if (t) return (B = t), 'break';
                            },
                            G = p ? 3 : 1;
                          G > 0;
                          G--
                        ) {
                          if ('break' === W(G)) break;
                        }
                      t.placement !== B &&
                        ((t.modifiersData[r]._skip = !0), (t.placement = B), (t.reset = !0));
                    }
                  },
                  requiresIfExists: ['offset'],
                  data: { _skip: !1 },
                };
                function me(e, t, n) {
                  return F(e, H(t, n));
                }
                var ge = {
                  name: 'preventOverflow',
                  enabled: !0,
                  phase: 'main',
                  fn: function (e) {
                    var t = e.state,
                      n = e.options,
                      r = e.name,
                      s = n.mainAxis,
                      o = void 0 === s || s,
                      i = n.altAxis,
                      a = void 0 !== i && i,
                      c = n.boundary,
                      u = n.rootBoundary,
                      l = n.altBoundary,
                      d = n.padding,
                      f = n.tether,
                      h = void 0 === f || f,
                      p = n.tetherOffset,
                      g = void 0 === p ? 0 : p,
                      y = J(t, { boundary: c, rootBoundary: u, padding: d, altBoundary: l }),
                      b = D(t.placement),
                      w = $(t.placement),
                      v = !w,
                      I = V(b),
                      k = 'x' === I ? 'y' : 'x',
                      C = t.modifiersData.popperOffsets,
                      B = t.rects.reference,
                      O = t.rects.popper,
                      j =
                        'function' == typeof g
                          ? g(Object.assign({}, t.rects, { placement: t.placement }))
                          : g,
                      R = { x: 0, y: 0 };
                    if (C) {
                      if (o || a) {
                        var P = 'y' === I ? E : T,
                          N = 'y' === I ? S : x,
                          L = 'y' === I ? 'height' : 'width',
                          M = C[I],
                          U = C[I] + y[P],
                          W = C[I] - y[N],
                          G = h ? -O[L] / 2 : 0,
                          z = w === A ? B[L] : O[L],
                          q = w === A ? -O[L] : -B[L],
                          K = t.elements.arrow,
                          X = h && K ? m(K) : { width: 0, height: 0 },
                          Y = t.modifiersData['arrow#persistent']
                            ? t.modifiersData['arrow#persistent'].padding
                            : { top: 0, right: 0, bottom: 0, left: 0 },
                          Z = Y[P],
                          Q = Y[N],
                          ee = me(0, B[L], X[L]),
                          te = v ? B[L] / 2 - G - ee - Z - j : z - ee - Z - j,
                          ne = v ? -B[L] / 2 + G + ee + Q + j : q + ee + Q + j,
                          re = t.elements.arrow && _(t.elements.arrow),
                          se = re ? ('y' === I ? re.clientTop || 0 : re.clientLeft || 0) : 0,
                          oe = t.modifiersData.offset ? t.modifiersData.offset[t.placement][I] : 0,
                          ie = C[I] + te - oe - se,
                          ae = C[I] + ne - oe;
                        if (o) {
                          var ce = me(h ? H(U, ie) : U, M, h ? F(W, ae) : W);
                          (C[I] = ce), (R[I] = ce - M);
                        }
                        if (a) {
                          var ue = 'x' === I ? E : T,
                            le = 'x' === I ? S : x,
                            de = C[k],
                            fe = de + y[ue],
                            he = de - y[le],
                            pe = me(h ? H(fe, ie) : fe, de, h ? F(he, ae) : he);
                          (C[k] = pe), (R[k] = pe - de);
                        }
                      }
                      t.modifiersData[r] = R;
                    }
                  },
                  requiresIfExists: ['offset'],
                };
                var ye = {
                  name: 'arrow',
                  enabled: !0,
                  phase: 'main',
                  fn: function (e) {
                    var t,
                      n = e.state,
                      r = e.name,
                      s = e.options,
                      o = n.elements.arrow,
                      i = n.modifiersData.popperOffsets,
                      a = D(n.placement),
                      c = V(a),
                      u = [T, x].indexOf(a) >= 0 ? 'height' : 'width';
                    if (o && i) {
                      var l = (function (e, t) {
                          return X(
                            'number' !=
                              typeof (e =
                                'function' == typeof e
                                  ? e(Object.assign({}, t.rects, { placement: t.placement }))
                                  : e)
                              ? e
                              : Y(e, k)
                          );
                        })(s.padding, n),
                        d = m(o),
                        f = 'y' === c ? E : T,
                        h = 'y' === c ? S : x,
                        p = n.rects.reference[u] + n.rects.reference[c] - i[c] - n.rects.popper[u],
                        g = i[c] - n.rects.reference[c],
                        y = _(o),
                        b = y ? ('y' === c ? y.clientHeight || 0 : y.clientWidth || 0) : 0,
                        w = p / 2 - g / 2,
                        v = l[f],
                        I = b - d[u] - l[h],
                        A = b / 2 - d[u] / 2 + w,
                        C = me(v, A, I),
                        B = c;
                      n.modifiersData[r] = (((t = {})[B] = C), (t.centerOffset = C - A), t);
                    }
                  },
                  effect: function (e) {
                    var t = e.state,
                      n = e.options.element,
                      r = void 0 === n ? '[data-popper-arrow]' : n;
                    null != r &&
                      ('string' != typeof r || (r = t.elements.popper.querySelector(r))) &&
                      W(t.elements.popper, r) &&
                      (t.elements.arrow = r);
                  },
                  requires: ['popperOffsets'],
                  requiresIfExists: ['preventOverflow'],
                };
                function be(e, t, n) {
                  return (
                    void 0 === n && (n = { x: 0, y: 0 }),
                    {
                      top: e.top - t.height - n.y,
                      right: e.right - t.width + n.x,
                      bottom: e.bottom - t.height + n.y,
                      left: e.left - t.width - n.x,
                    }
                  );
                }
                function we(e) {
                  return [E, x, S, T].some(function (t) {
                    return e[t] >= 0;
                  });
                }
                var ve = {
                    name: 'hide',
                    enabled: !0,
                    phase: 'main',
                    requiresIfExists: ['preventOverflow'],
                    fn: function (e) {
                      var t = e.state,
                        n = e.name,
                        r = t.rects.reference,
                        s = t.rects.popper,
                        o = t.modifiersData.preventOverflow,
                        i = J(t, { elementContext: 'reference' }),
                        a = J(t, { altBoundary: !0 }),
                        c = be(i, r),
                        u = be(a, s, o),
                        l = we(c),
                        d = we(u);
                      (t.modifiersData[n] = {
                        referenceClippingOffsets: c,
                        popperEscapeOffsets: u,
                        isReferenceHidden: l,
                        hasPopperEscaped: d,
                      }),
                        (t.attributes.popper = Object.assign({}, t.attributes.popper, {
                          'data-popper-reference-hidden': l,
                          'data-popper-escaped': d,
                        }));
                    },
                  },
                  _e = ee({ defaultModifiers: [ne, re, ie, ae] }),
                  Ee = [ne, re, ie, ae, ce, pe, ge, ye, ve],
                  Se = ee({ defaultModifiers: Ee });
                (n.applyStyles = ae),
                  (n.arrow = ye),
                  (n.computeStyles = ie),
                  (n.createPopper = Se),
                  (n.createPopperLite = _e),
                  (n.defaultModifiers = Ee),
                  (n.detectOverflow = J),
                  (n.eventListeners = ne),
                  (n.flip = pe),
                  (n.hide = ve),
                  (n.offset = ce),
                  (n.popperGenerator = ee),
                  (n.popperOffsets = re),
                  (n.preventOverflow = ge);
              };
            };
      },
      { package: '@popperjs/core', file: 'node_modules/@popperjs/core/dist/cjs/popper.js' },
    ],
    [
      3063,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = function (e, t) {
                  var n = new Array(arguments.length - 1),
                    r = 0,
                    s = 2,
                    o = !0;
                  for (; s < arguments.length; ) n[r++] = arguments[s++];
                  return new Promise(function (s, i) {
                    n[r] = function (e) {
                      if (o)
                        if (((o = !1), e)) i(e);
                        else {
                          for (var t = new Array(arguments.length - 1), n = 0; n < t.length; )
                            t[n++] = arguments[n];
                          s.apply(null, t);
                        }
                    };
                    try {
                      e.apply(t || null, n);
                    } catch (e) {
                      o && ((o = !1), i(e));
                    }
                  });
                };
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/aspromise',
        file: 'node_modules/@protobufjs/aspromise/index.js',
      },
    ],
    [
      3064,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r = n;
                r.length = function (e) {
                  var t = e.length;
                  if (!t) return 0;
                  for (var n = 0; --t % 4 > 1 && '=' === e.charAt(t); ) ++n;
                  return Math.ceil(3 * e.length) / 4 - n;
                };
                for (var s = new Array(64), o = new Array(123), i = 0; i < 64; )
                  o[(s[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : (i - 59) | 43)] =
                    i++;
                r.encode = function (e, t, n) {
                  for (var r, o = null, i = [], a = 0, c = 0; t < n; ) {
                    var u = e[t++];
                    switch (c) {
                      case 0:
                        (i[a++] = s[u >> 2]), (r = (3 & u) << 4), (c = 1);
                        break;
                      case 1:
                        (i[a++] = s[r | (u >> 4)]), (r = (15 & u) << 2), (c = 2);
                        break;
                      case 2:
                        (i[a++] = s[r | (u >> 6)]), (i[a++] = s[63 & u]), (c = 0);
                    }
                    a > 8191 &&
                      ((o || (o = [])).push(String.fromCharCode.apply(String, i)), (a = 0));
                  }
                  return (
                    c && ((i[a++] = s[r]), (i[a++] = 61), 1 === c && (i[a++] = 61)),
                    o
                      ? (a && o.push(String.fromCharCode.apply(String, i.slice(0, a))), o.join(''))
                      : String.fromCharCode.apply(String, i.slice(0, a))
                  );
                };
                var a = 'invalid encoding';
                (r.decode = function (e, t, n) {
                  for (var r, s = n, i = 0, c = 0; c < e.length; ) {
                    var u = e.charCodeAt(c++);
                    if (61 === u && i > 1) break;
                    if ((u = o[u]) === undefined) throw Error(a);
                    switch (i) {
                      case 0:
                        (r = u), (i = 1);
                        break;
                      case 1:
                        (t[n++] = (r << 2) | ((48 & u) >> 4)), (r = u), (i = 2);
                        break;
                      case 2:
                        (t[n++] = ((15 & r) << 4) | ((60 & u) >> 2)), (r = u), (i = 3);
                        break;
                      case 3:
                        (t[n++] = ((3 & r) << 6) | u), (i = 0);
                    }
                  }
                  if (1 === i) throw Error(a);
                  return n - s;
                }),
                  (r.test = function (e) {
                    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(
                      e
                    );
                  });
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/base64',
        file: 'node_modules/@protobufjs/base64/index.js',
      },
    ],
    [
      3065,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e, t) {
                  'string' == typeof e && ((t = e), (e = undefined));
                  var n = [];
                  function s(e) {
                    if ('string' != typeof e) {
                      var t = o();
                      if ((r.verbose && console.log('codegen: ' + t), (t = 'return ' + t), e)) {
                        for (
                          var i = Object.keys(e),
                            a = new Array(i.length + 1),
                            c = new Array(i.length),
                            u = 0;
                          u < i.length;

                        )
                          (a[u] = i[u]), (c[u] = e[i[u++]]);
                        return (a[u] = t), Function.apply(null, a).apply(null, c);
                      }
                      return Function(t)();
                    }
                    for (var l = new Array(arguments.length - 1), d = 0; d < l.length; )
                      l[d] = arguments[++d];
                    if (
                      ((d = 0),
                      (e = e.replace(/%([%dfijs])/g, function (e, t) {
                        var n = l[d++];
                        switch (t) {
                          case 'd':
                          case 'f':
                            return String(Number(n));
                          case 'i':
                            return String(Math.floor(n));
                          case 'j':
                            return JSON.stringify(n);
                          case 's':
                            return String(n);
                        }
                        return '%';
                      })),
                      d !== l.length)
                    )
                      throw Error('parameter count mismatch');
                    return n.push(e), s;
                  }
                  function o(r) {
                    return (
                      'function ' +
                      (r || t || '') +
                      '(' +
                      ((e && e.join(',')) || '') +
                      '){\n  ' +
                      n.join('\n  ') +
                      '\n}'
                    );
                  }
                  return (s.toString = o), s;
                }
                (t.exports = r), (r.verbose = !1);
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/codegen',
        file: 'node_modules/@protobufjs/codegen/index.js',
      },
    ],
    [
      3066,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r() {
                  this._listeners = {};
                }
                (t.exports = r),
                  (r.prototype.on = function (e, t, n) {
                    return (
                      (this._listeners[e] || (this._listeners[e] = [])).push({
                        fn: t,
                        ctx: n || this,
                      }),
                      this
                    );
                  }),
                  (r.prototype.off = function (e, t) {
                    if (e === undefined) this._listeners = {};
                    else if (t === undefined) this._listeners[e] = [];
                    else
                      for (var n = this._listeners[e], r = 0; r < n.length; )
                        n[r].fn === t ? n.splice(r, 1) : ++r;
                    return this;
                  }),
                  (r.prototype.emit = function (e) {
                    var t = this._listeners[e];
                    if (t) {
                      for (var n = [], r = 1; r < arguments.length; ) n.push(arguments[r++]);
                      for (r = 0; r < t.length; ) t[r].fn.apply(t[r++].ctx, n);
                    }
                    return this;
                  });
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/eventemitter',
        file: 'node_modules/@protobufjs/eventemitter/index.js',
      },
    ],
    [
      3067,
      { '@protobufjs/aspromise': 3063, '@protobufjs/inquire': 3069 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = o;
                var r = e('@protobufjs/aspromise'),
                  s = e('@protobufjs/inquire')('fs');
                function o(e, t, n) {
                  return (
                    'function' == typeof t ? ((n = t), (t = {})) : t || (t = {}),
                    n
                      ? !t.xhr && s && s.readFile
                        ? s.readFile(e, function (r, s) {
                            return r && 'undefined' != typeof XMLHttpRequest
                              ? o.xhr(e, t, n)
                              : r
                                ? n(r)
                                : n(null, t.binary ? s : s.toString('utf8'));
                          })
                        : o.xhr(e, t, n)
                      : r(o, this, e, t)
                  );
                }
                o.xhr = function (e, t, n) {
                  var r = new XMLHttpRequest();
                  (r.onreadystatechange = function () {
                    if (4 !== r.readyState) return undefined;
                    if (0 !== r.status && 200 !== r.status) return n(Error('status ' + r.status));
                    if (t.binary) {
                      var e = r.response;
                      if (!e) {
                        e = [];
                        for (var s = 0; s < r.responseText.length; ++s)
                          e.push(255 & r.responseText.charCodeAt(s));
                      }
                      return n(null, 'undefined' != typeof Uint8Array ? new Uint8Array(e) : e);
                    }
                    return n(null, r.responseText);
                  }),
                    t.binary &&
                      ('overrideMimeType' in r &&
                        r.overrideMimeType('text/plain; charset=x-user-defined'),
                      (r.responseType = 'arraybuffer')),
                    r.open('GET', e),
                    r.send();
                };
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/fetch',
        file: 'node_modules/@protobufjs/fetch/index.js',
      },
    ],
    [
      3068,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  return (
                    'undefined' != typeof Float32Array
                      ? (function () {
                          var t = new Float32Array([-0]),
                            n = new Uint8Array(t.buffer),
                            r = 128 === n[3];
                          function s(e, r, s) {
                            (t[0] = e),
                              (r[s] = n[0]),
                              (r[s + 1] = n[1]),
                              (r[s + 2] = n[2]),
                              (r[s + 3] = n[3]);
                          }
                          function o(e, r, s) {
                            (t[0] = e),
                              (r[s] = n[3]),
                              (r[s + 1] = n[2]),
                              (r[s + 2] = n[1]),
                              (r[s + 3] = n[0]);
                          }
                          function i(e, r) {
                            return (
                              (n[0] = e[r]),
                              (n[1] = e[r + 1]),
                              (n[2] = e[r + 2]),
                              (n[3] = e[r + 3]),
                              t[0]
                            );
                          }
                          function a(e, r) {
                            return (
                              (n[3] = e[r]),
                              (n[2] = e[r + 1]),
                              (n[1] = e[r + 2]),
                              (n[0] = e[r + 3]),
                              t[0]
                            );
                          }
                          (e.writeFloatLE = r ? s : o),
                            (e.writeFloatBE = r ? o : s),
                            (e.readFloatLE = r ? i : a),
                            (e.readFloatBE = r ? a : i);
                        })()
                      : (function () {
                          function t(e, t, n, r) {
                            var s = t < 0 ? 1 : 0;
                            if ((s && (t = -t), 0 === t)) e(1 / t > 0 ? 0 : 2147483648, n, r);
                            else if (isNaN(t)) e(2143289344, n, r);
                            else if (t > 34028234663852886e22)
                              e(((s << 31) | 2139095040) >>> 0, n, r);
                            else if (t < 11754943508222875e-54)
                              e(((s << 31) | Math.round(t / 1401298464324817e-60)) >>> 0, n, r);
                            else {
                              var o = Math.floor(Math.log(t) / Math.LN2);
                              e(
                                ((s << 31) |
                                  ((o + 127) << 23) |
                                  (8388607 & Math.round(t * Math.pow(2, -o) * 8388608))) >>>
                                  0,
                                n,
                                r
                              );
                            }
                          }
                          function n(e, t, n) {
                            var r = e(t, n),
                              s = 2 * (r >> 31) + 1,
                              o = (r >>> 23) & 255,
                              i = 8388607 & r;
                            return 255 === o
                              ? i
                                ? NaN
                                : s * Infinity
                              : 0 === o
                                ? 1401298464324817e-60 * s * i
                                : s * Math.pow(2, o - 150) * (i + 8388608);
                          }
                          (e.writeFloatLE = t.bind(null, s)),
                            (e.writeFloatBE = t.bind(null, o)),
                            (e.readFloatLE = n.bind(null, i)),
                            (e.readFloatBE = n.bind(null, a));
                        })(),
                    'undefined' != typeof Float64Array
                      ? (function () {
                          var t = new Float64Array([-0]),
                            n = new Uint8Array(t.buffer),
                            r = 128 === n[7];
                          function s(e, r, s) {
                            (t[0] = e),
                              (r[s] = n[0]),
                              (r[s + 1] = n[1]),
                              (r[s + 2] = n[2]),
                              (r[s + 3] = n[3]),
                              (r[s + 4] = n[4]),
                              (r[s + 5] = n[5]),
                              (r[s + 6] = n[6]),
                              (r[s + 7] = n[7]);
                          }
                          function o(e, r, s) {
                            (t[0] = e),
                              (r[s] = n[7]),
                              (r[s + 1] = n[6]),
                              (r[s + 2] = n[5]),
                              (r[s + 3] = n[4]),
                              (r[s + 4] = n[3]),
                              (r[s + 5] = n[2]),
                              (r[s + 6] = n[1]),
                              (r[s + 7] = n[0]);
                          }
                          function i(e, r) {
                            return (
                              (n[0] = e[r]),
                              (n[1] = e[r + 1]),
                              (n[2] = e[r + 2]),
                              (n[3] = e[r + 3]),
                              (n[4] = e[r + 4]),
                              (n[5] = e[r + 5]),
                              (n[6] = e[r + 6]),
                              (n[7] = e[r + 7]),
                              t[0]
                            );
                          }
                          function a(e, r) {
                            return (
                              (n[7] = e[r]),
                              (n[6] = e[r + 1]),
                              (n[5] = e[r + 2]),
                              (n[4] = e[r + 3]),
                              (n[3] = e[r + 4]),
                              (n[2] = e[r + 5]),
                              (n[1] = e[r + 6]),
                              (n[0] = e[r + 7]),
                              t[0]
                            );
                          }
                          (e.writeDoubleLE = r ? s : o),
                            (e.writeDoubleBE = r ? o : s),
                            (e.readDoubleLE = r ? i : a),
                            (e.readDoubleBE = r ? a : i);
                        })()
                      : (function () {
                          function t(e, t, n, r, s, o) {
                            var i = r < 0 ? 1 : 0;
                            if ((i && (r = -r), 0 === r))
                              e(0, s, o + t), e(1 / r > 0 ? 0 : 2147483648, s, o + n);
                            else if (isNaN(r)) e(0, s, o + t), e(2146959360, s, o + n);
                            else if (r > 17976931348623157e292)
                              e(0, s, o + t), e(((i << 31) | 2146435072) >>> 0, s, o + n);
                            else {
                              var a;
                              if (r < 22250738585072014e-324)
                                e((a = r / 5e-324) >>> 0, s, o + t),
                                  e(((i << 31) | (a / 4294967296)) >>> 0, s, o + n);
                              else {
                                var c = Math.floor(Math.log(r) / Math.LN2);
                                1024 === c && (c = 1023),
                                  e((4503599627370496 * (a = r * Math.pow(2, -c))) >>> 0, s, o + t),
                                  e(
                                    ((i << 31) | ((c + 1023) << 20) | ((1048576 * a) & 1048575)) >>>
                                      0,
                                    s,
                                    o + n
                                  );
                              }
                            }
                          }
                          function n(e, t, n, r, s) {
                            var o = e(r, s + t),
                              i = e(r, s + n),
                              a = 2 * (i >> 31) + 1,
                              c = (i >>> 20) & 2047,
                              u = 4294967296 * (1048575 & i) + o;
                            return 2047 === c
                              ? u
                                ? NaN
                                : a * Infinity
                              : 0 === c
                                ? 5e-324 * a * u
                                : a * Math.pow(2, c - 1075) * (u + 4503599627370496);
                          }
                          (e.writeDoubleLE = t.bind(null, s, 0, 4)),
                            (e.writeDoubleBE = t.bind(null, o, 4, 0)),
                            (e.readDoubleLE = n.bind(null, i, 0, 4)),
                            (e.readDoubleBE = n.bind(null, a, 4, 0));
                        })(),
                    e
                  );
                }
                function s(e, t, n) {
                  (t[n] = 255 & e),
                    (t[n + 1] = (e >>> 8) & 255),
                    (t[n + 2] = (e >>> 16) & 255),
                    (t[n + 3] = e >>> 24);
                }
                function o(e, t, n) {
                  (t[n] = e >>> 24),
                    (t[n + 1] = (e >>> 16) & 255),
                    (t[n + 2] = (e >>> 8) & 255),
                    (t[n + 3] = 255 & e);
                }
                function i(e, t) {
                  return (e[t] | (e[t + 1] << 8) | (e[t + 2] << 16) | (e[t + 3] << 24)) >>> 0;
                }
                function a(e, t) {
                  return ((e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]) >>> 0;
                }
                t.exports = r(r);
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/float',
        file: 'node_modules/@protobufjs/float/index.js',
      },
    ],
    [
      3069,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = function (e) {
                  try {
                    var t = (0, eval)('quire'.replace(/^/, 're'))(e);
                    if (t && (t.length || Object.keys(t).length)) return t;
                  } catch (e) {}
                  return null;
                };
              };
            };
      },
      {
        package:
          '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/inquire',
        file: 'node_modules/@protobufjs/inquire/index.js',
      },
    ],
    [
      3070,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r = n,
                  s = (r.isAbsolute = function (e) {
                    return /^(?:\/|\w+:)/.test(e);
                  }),
                  o = (r.normalize = function (e) {
                    var t = (e = e.replace(/\\/g, '/').replace(/\/{2,}/g, '/')).split('/'),
                      n = s(e),
                      r = '';
                    n && (r = t.shift() + '/');
                    for (var o = 0; o < t.length; )
                      '..' === t[o]
                        ? o > 0 && '..' !== t[o - 1]
                          ? t.splice(--o, 2)
                          : n
                            ? t.splice(o, 1)
                            : ++o
                        : '.' === t[o]
                          ? t.splice(o, 1)
                          : ++o;
                    return r + t.join('/');
                  });
                r.resolve = function (e, t, n) {
                  return (
                    n || (t = o(t)),
                    s(t)
                      ? t
                      : (n || (e = o(e)),
                        (e = e.replace(/(?:\/|^)[^/]+$/, '')).length ? o(e + '/' + t) : t)
                  );
                };
              };
            };
      },
      {
        package: '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/path',
        file: 'node_modules/@protobufjs/path/index.js',
      },
    ],
    [
      3071,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = function (e, t, n) {
                  var r = n || 8192,
                    s = r >>> 1,
                    o = null,
                    i = r;
                  return function (n) {
                    if (n < 1 || n > s) return e(n);
                    i + n > r && ((o = e(r)), (i = 0));
                    var a = t.call(o, i, (i += n));
                    return 7 & i && (i = 1 + (7 | i)), a;
                  };
                };
              };
            };
      },
      {
        package: '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/pool',
        file: 'node_modules/@protobufjs/pool/index.js',
      },
    ],
    [
      3072,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var r = n;
                (r.length = function (e) {
                  for (var t = 0, n = 0, r = 0; r < e.length; ++r)
                    (n = e.charCodeAt(r)) < 128
                      ? (t += 1)
                      : n < 2048
                        ? (t += 2)
                        : 55296 == (64512 & n) && 56320 == (64512 & e.charCodeAt(r + 1))
                          ? (++r, (t += 4))
                          : (t += 3);
                  return t;
                }),
                  (r.read = function (e, t, n) {
                    if (n - t < 1) return '';
                    for (var r, s = null, o = [], i = 0; t < n; )
                      (r = e[t++]) < 128
                        ? (o[i++] = r)
                        : r > 191 && r < 224
                          ? (o[i++] = ((31 & r) << 6) | (63 & e[t++]))
                          : r > 239 && r < 365
                            ? ((r =
                                (((7 & r) << 18) |
                                  ((63 & e[t++]) << 12) |
                                  ((63 & e[t++]) << 6) |
                                  (63 & e[t++])) -
                                65536),
                              (o[i++] = 55296 + (r >> 10)),
                              (o[i++] = 56320 + (1023 & r)))
                            : (o[i++] = ((15 & r) << 12) | ((63 & e[t++]) << 6) | (63 & e[t++])),
                        i > 8191 &&
                          ((s || (s = [])).push(String.fromCharCode.apply(String, o)), (i = 0));
                    return s
                      ? (i && s.push(String.fromCharCode.apply(String, o.slice(0, i))), s.join(''))
                      : String.fromCharCode.apply(String, o.slice(0, i));
                  }),
                  (r.write = function (e, t, n) {
                    for (var r, s, o = n, i = 0; i < e.length; ++i)
                      (r = e.charCodeAt(i)) < 128
                        ? (t[n++] = r)
                        : r < 2048
                          ? ((t[n++] = (r >> 6) | 192), (t[n++] = (63 & r) | 128))
                          : 55296 == (64512 & r) && 56320 == (64512 & (s = e.charCodeAt(i + 1)))
                            ? ((r = 65536 + ((1023 & r) << 10) + (1023 & s)),
                              ++i,
                              (t[n++] = (r >> 18) | 240),
                              (t[n++] = ((r >> 12) & 63) | 128),
                              (t[n++] = ((r >> 6) & 63) | 128),
                              (t[n++] = (63 & r) | 128))
                            : ((t[n++] = (r >> 12) | 224),
                              (t[n++] = ((r >> 6) & 63) | 128),
                              (t[n++] = (63 & r) | 128));
                    return n - o;
                  });
              };
            };
      },
      {
        package: '@trezor/connect-web>@trezor/connect>@trezor/protobuf>protobufjs>@protobufjs/utf8',
        file: 'node_modules/@protobufjs/utf8/index.js',
      },
    ],
    [
      3073,
      { './redux-toolkit.cjs.development.js': 3074 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                t.exports = e('./redux-toolkit.cjs.development.js');
              };
            };
      },
      { package: '@reduxjs/toolkit', file: 'node_modules/@reduxjs/toolkit/dist/index.js' },
    ],
    [
      3074,
      { _process: 5077, immer: 4715, redux: 5346, 'redux-thunk': 5345, reselect: 3076 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                (function (t) {
                  (function () {
                    var r,
                      s =
                        (this && this.__define) ||
                        function (e, t, n) {
                          return (
                            Object.defineProperty(e, t, {
                              value: n,
                              enumerable: !0,
                              configurable: !0,
                              writable: !0,
                            }),
                            e[t]
                          );
                        },
                      o =
                        (this && this.__extends) ||
                        ((r = function (e, t) {
                          return (
                            (r =
                              Object.setPrototypeOf ||
                              ({ __proto__: [] } instanceof Array &&
                                function (e, t) {
                                  e.__proto__ = t;
                                }) ||
                              function (e, t) {
                                for (var n in t)
                                  Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                              }),
                            r(e, t)
                          );
                        }),
                        function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Class extends value ' + String(t) + ' is not a constructor or null'
                            );
                          function n() {
                            s(this, constructor, e);
                          }
                          r(e, t),
                            (e.prototype =
                              null === t
                                ? Object.create(t)
                                : ((n.prototype = t.prototype), new n()));
                        }),
                      i =
                        (this && this.__generator) ||
                        function (e, t) {
                          var n,
                            r,
                            s,
                            o,
                            i = {
                              label: 0,
                              sent: function () {
                                if (1 & s[0]) throw s[1];
                                return s[1];
                              },
                              trys: [],
                              ops: [],
                            };
                          return (
                            (o = { next: a(0), throw: a(1), return: a(2) }),
                            'function' == typeof Symbol &&
                              (o[Symbol.iterator] = function () {
                                return this;
                              }),
                            o
                          );
                          function a(o) {
                            return function (a) {
                              return (function (o) {
                                if (n) throw new TypeError('Generator is already executing.');
                                for (; i; )
                                  try {
                                    if (
                                      ((n = 1),
                                      r &&
                                        (s =
                                          2 & o[0]
                                            ? r.return
                                            : o[0]
                                              ? r.throw || ((s = r.return) && s.call(r), 0)
                                              : r.next) &&
                                        !(s = s.call(r, o[1])).done)
                                    )
                                      return s;
                                    switch (((r = 0), s && (o = [2 & o[0], s.value]), o[0])) {
                                      case 0:
                                      case 1:
                                        s = o;
                                        break;
                                      case 4:
                                        return i.label++, { value: o[1], done: !1 };
                                      case 5:
                                        i.label++, (r = o[1]), (o = [0]);
                                        continue;
                                      case 7:
                                        (o = i.ops.pop()), i.trys.pop();
                                        continue;
                                      default:
                                        if (
                                          !((s = i.trys),
                                          (s = s.length > 0 && s[s.length - 1]) ||
                                            (6 !== o[0] && 2 !== o[0]))
                                        ) {
                                          i = 0;
                                          continue;
                                        }
                                        if (3 === o[0] && (!s || (o[1] > s[0] && o[1] < s[3]))) {
                                          i.label = o[1];
                                          break;
                                        }
                                        if (6 === o[0] && i.label < s[1]) {
                                          (i.label = s[1]), (s = o);
                                          break;
                                        }
                                        if (s && i.label < s[2]) {
                                          (i.label = s[2]), i.ops.push(o);
                                          break;
                                        }
                                        s[2] && i.ops.pop(), i.trys.pop();
                                        continue;
                                    }
                                    o = t.call(e, i);
                                  } catch (e) {
                                    (o = [6, e]), (r = 0);
                                  } finally {
                                    n = s = 0;
                                  }
                                if (5 & o[0]) throw o[1];
                                return { value: o[0] ? o[1] : void 0, done: !0 };
                              })([o, a]);
                            };
                          }
                        },
                      a =
                        (this && this.__spreadArray) ||
                        function (e, t) {
                          for (var n = 0, r = t.length, s = e.length; n < r; n++, s++) e[s] = t[n];
                          return e;
                        },
                      c = Object.create,
                      u = Object.defineProperty,
                      l = Object.defineProperties,
                      d = Object.getOwnPropertyDescriptor,
                      f = Object.getOwnPropertyDescriptors,
                      h = Object.getOwnPropertyNames,
                      p = Object.getOwnPropertySymbols,
                      m = Object.getPrototypeOf,
                      g = Object.prototype.hasOwnProperty,
                      y = Object.prototype.propertyIsEnumerable,
                      b = function (e, t, n) {
                        return t in e
                          ? u(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
                          : (e[t] = n);
                      },
                      w = function (e, t) {
                        for (var n in t || (t = {})) g.call(t, n) && b(e, n, t[n]);
                        if (p)
                          for (var r = 0, s = p(t); r < s.length; r++) {
                            n = s[r];
                            y.call(t, n) && b(e, n, t[n]);
                          }
                        return e;
                      },
                      v = function (e, t) {
                        return l(e, f(t));
                      },
                      _ = function (e) {
                        return u(e, '__esModule', { value: !0 });
                      },
                      E = function (e, t, n) {
                        if ((t && 'object' == typeof t) || 'function' == typeof t)
                          for (
                            var r = function (r) {
                                g.call(e, r) ||
                                  'default' === r ||
                                  u(e, r, {
                                    get: function () {
                                      return t[r];
                                    },
                                    enumerable: !(n = d(t, r)) || n.enumerable,
                                  });
                              },
                              s = 0,
                              o = h(t);
                            s < o.length;
                            s++
                          ) {
                            r(o[s]);
                          }
                        return e;
                      },
                      S = function (e) {
                        return E(
                          _(
                            u(
                              null != e ? c(m(e)) : {},
                              'default',
                              e && e.__esModule && 'default' in e
                                ? {
                                    get: function () {
                                      return e.default;
                                    },
                                    enumerable: !0,
                                  }
                                : { value: e, enumerable: !0 }
                            )
                          ),
                          e
                        );
                      },
                      x = function (e, t, n) {
                        return new Promise(function (r, s) {
                          var o = function (e) {
                              try {
                                a(n.next(e));
                              } catch (e) {
                                s(e);
                              }
                            },
                            i = function (e) {
                              try {
                                a(n.throw(e));
                              } catch (e) {
                                s(e);
                              }
                            },
                            a = function (e) {
                              return e.done ? r(e.value) : Promise.resolve(e.value).then(o, i);
                            };
                          a((n = n.apply(e, t)).next());
                        });
                      };
                    _(n),
                      (function (e, t) {
                        for (var n in t) u(e, n, { get: t[n], enumerable: !0 });
                      })(n, {
                        EnhancerArray: function () {
                          return V;
                        },
                        MiddlewareArray: function () {
                          return $;
                        },
                        SHOULD_AUTOBATCH: function () {
                          return _t;
                        },
                        TaskAbortError: function () {
                          return et;
                        },
                        addListener: function () {
                          return mt;
                        },
                        autoBatchEnhancer: function () {
                          return It;
                        },
                        clearAllListeners: function () {
                          return gt;
                        },
                        configureStore: function () {
                          return de;
                        },
                        createAction: function () {
                          return M;
                        },
                        createActionCreatorInvariantMiddleware: function () {
                          return G;
                        },
                        createAsyncThunk: function () {
                          return Be;
                        },
                        createDraftSafeSelector: function () {
                          return B;
                        },
                        createEntityAdapter: function () {
                          return xe;
                        },
                        createImmutableStateInvariantMiddleware: function () {
                          return re;
                        },
                        createListenerMiddleware: function () {
                          return wt;
                        },
                        createNextState: function () {
                          return I.default;
                        },
                        createReducer: function () {
                          return me;
                        },
                        createSelector: function () {
                          return k.createSelector;
                        },
                        createSerializableStateInvariantMiddleware: function () {
                          return ae;
                        },
                        createSlice: function () {
                          return ye;
                        },
                        current: function () {
                          return I.current;
                        },
                        findNonSerializableValue: function () {
                          return oe;
                        },
                        freeze: function () {
                          return I.freeze;
                        },
                        getDefaultMiddleware: function () {
                          return ue;
                        },
                        getType: function () {
                          return W;
                        },
                        isAction: function () {
                          return D;
                        },
                        isActionCreator: function () {
                          return F;
                        },
                        isAllOf: function () {
                          return Pe;
                        },
                        isAnyOf: function () {
                          return Re;
                        },
                        isAsyncThunkAction: function () {
                          return Ue;
                        },
                        isDraft: function () {
                          return I.isDraft;
                        },
                        isFluxStandardAction: function () {
                          return H;
                        },
                        isFulfilled: function () {
                          return He;
                        },
                        isImmutableDefault: function () {
                          return Q;
                        },
                        isPending: function () {
                          return Me;
                        },
                        isPlain: function () {
                          return se;
                        },
                        isPlainObject: function () {
                          return P;
                        },
                        isRejected: function () {
                          return De;
                        },
                        isRejectedWithValue: function () {
                          return Fe;
                        },
                        miniSerializeError: function () {
                          return Ce;
                        },
                        nanoid: function () {
                          return Te;
                        },
                        original: function () {
                          return I.original;
                        },
                        prepareAutoBatched: function () {
                          return Et;
                        },
                        removeListener: function () {
                          return yt;
                        },
                        unwrapResult: function () {
                          return Oe;
                        },
                      });
                    var T = S(e('immer'));
                    E(n, S(e('redux')));
                    var I = S(e('immer')),
                      k = S(e('reselect')),
                      A = S(e('immer')),
                      C = S(e('reselect')),
                      B = function () {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        var n = C.createSelector.apply(void 0, e);
                        return function (e) {
                          for (var t = [], r = 1; r < arguments.length; r++)
                            t[r - 1] = arguments[r];
                          return n.apply(void 0, a([(0, A.isDraft)(e) ? (0, A.current)(e) : e], t));
                        };
                      },
                      O = S(e('redux')),
                      j = S(e('redux')),
                      R =
                        'undefined' != typeof window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
                          ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
                          : function () {
                              if (0 !== arguments.length)
                                return 'object' == typeof arguments[0]
                                  ? j.compose
                                  : j.compose.apply(null, arguments);
                            };
                    'undefined' != typeof window &&
                      window.__REDUX_DEVTOOLS_EXTENSION__ &&
                      window.__REDUX_DEVTOOLS_EXTENSION__;
                    function P(e) {
                      if ('object' != typeof e || null === e) return !1;
                      var t = Object.getPrototypeOf(e);
                      if (null === t) return !0;
                      for (var n = t; null !== Object.getPrototypeOf(n); )
                        n = Object.getPrototypeOf(n);
                      return t === n;
                    }
                    var N = S(e('redux-thunk')),
                      L = function (e) {
                        return e && 'function' == typeof e.match;
                      };
                    function M(e, t) {
                      function n() {
                        for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
                        if (t) {
                          var s = t.apply(void 0, n);
                          if (!s) throw new Error('prepareAction did not return an object');
                          return w(
                            w({ type: e, payload: s.payload }, 'meta' in s && { meta: s.meta }),
                            'error' in s && { error: s.error }
                          );
                        }
                        return { type: e, payload: n[0] };
                      }
                      return (
                        (n.toString = function () {
                          return '' + e;
                        }),
                        (n.type = e),
                        (n.match = function (t) {
                          return t.type === e;
                        }),
                        n
                      );
                    }
                    function D(e) {
                      return P(e) && 'type' in e;
                    }
                    function F(e) {
                      return 'function' == typeof e && 'type' in e && L(e);
                    }
                    function H(e) {
                      return D(e) && 'string' == typeof e.type && Object.keys(e).every(U);
                    }
                    function U(e) {
                      return ['type', 'payload', 'error', 'meta'].indexOf(e) > -1;
                    }
                    function W(e) {
                      return '' + e;
                    }
                    function G(e) {
                      void 0 === e && (e = {});
                      var t = e.isActionCreator,
                        n = void 0 === t ? F : t;
                      return function () {
                        return function (e) {
                          return function (t) {
                            var r, s, o;
                            return (
                              n(t) &&
                                console.warn(
                                  ((r = t.type),
                                  (s = r ? ('' + r).split('/') : []),
                                  (o = s[s.length - 1] || 'actionCreator'),
                                  'Detected an action creator with type "' +
                                    (r || 'unknown') +
                                    '" being dispatched. \nMake sure you\'re calling the action creator before dispatching, i.e. `dispatch(' +
                                    o +
                                    '())` instead of `dispatch(' +
                                    o +
                                    ')`. This is necessary even if the action has no payload.')
                                ),
                              e(t)
                            );
                          };
                        };
                      };
                    }
                    var z = S(e('immer'));
                    function q(e, t) {
                      var n = 0;
                      return {
                        measureTime: function (e) {
                          var t = Date.now();
                          try {
                            return e();
                          } finally {
                            var r = Date.now();
                            n += r - t;
                          }
                        },
                        warnIfExceeded: function () {
                          n > e &&
                            console.warn(
                              t +
                                ' took ' +
                                n +
                                'ms, which is more than the warning threshold of ' +
                                e +
                                "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that."
                            );
                        },
                      };
                    }
                    var $ = (function (e) {
                        function t() {
                          for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
                          var s = e.apply(this, n) || this;
                          return Object.setPrototypeOf(s, t.prototype), s;
                        }
                        return (
                          o(t, e),
                          Object.defineProperty(t, Symbol.species, {
                            get: function () {
                              return t;
                            },
                            enumerable: !1,
                            configurable: !0,
                          }),
                          s(t.prototype, 'concat', function () {
                            for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                            return e.prototype.concat.apply(this, t);
                          }),
                          s(t.prototype, 'prepend', function () {
                            for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
                            return 1 === e.length && Array.isArray(e[0])
                              ? new (t.bind.apply(t, a([void 0], e[0].concat(this))))()
                              : new (t.bind.apply(t, a([void 0], e.concat(this))))();
                          }),
                          t
                        );
                      })(Array),
                      V = (function (e) {
                        function t() {
                          for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
                          var s = e.apply(this, n) || this;
                          return Object.setPrototypeOf(s, t.prototype), s;
                        }
                        return (
                          o(t, e),
                          Object.defineProperty(t, Symbol.species, {
                            get: function () {
                              return t;
                            },
                            enumerable: !1,
                            configurable: !0,
                          }),
                          s(t.prototype, 'concat', function () {
                            for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                            return e.prototype.concat.apply(this, t);
                          }),
                          s(t.prototype, 'prepend', function () {
                            for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
                            return 1 === e.length && Array.isArray(e[0])
                              ? new (t.bind.apply(t, a([void 0], e[0].concat(this))))()
                              : new (t.bind.apply(t, a([void 0], e.concat(this))))();
                          }),
                          t
                        );
                      })(Array);
                    function K(e) {
                      return (0, z.isDraftable)(e) ? (0, z.default)(e, function () {}) : e;
                    }
                    var X = !1,
                      Y = 'Invariant failed';
                    function J(e, t) {
                      if (!e) {
                        if (X) throw new Error(Y);
                        throw new Error(Y + ': ' + (t || ''));
                      }
                    }
                    function Z(e, t, n, r) {
                      return JSON.stringify(
                        e,
                        (function (e, t) {
                          var n = [],
                            r = [];
                          t ||
                            (t = function (e, t) {
                              return n[0] === t
                                ? '[Circular ~]'
                                : '[Circular ~.' + r.slice(0, n.indexOf(t)).join('.') + ']';
                            });
                          return function (s, o) {
                            if (n.length > 0) {
                              var i = n.indexOf(this);
                              ~i ? n.splice(i + 1) : n.push(this),
                                ~i ? r.splice(i, Infinity, s) : r.push(s),
                                ~n.indexOf(o) && (o = t.call(this, s, o));
                            } else n.push(o);
                            return null == e ? o : e.call(this, s, o);
                          };
                        })(t, r),
                        n
                      );
                    }
                    function Q(e) {
                      return 'object' != typeof e || null == e || Object.isFrozen(e);
                    }
                    function ee(e, t, n) {
                      var r = te(e, t, n);
                      return {
                        detectMutations: function () {
                          return ne(e, t, r, n);
                        },
                      };
                    }
                    function te(e, t, n, r, s) {
                      void 0 === t && (t = []),
                        void 0 === r && (r = ''),
                        void 0 === s && (s = new Set());
                      var o = { value: n };
                      if (!e(n) && !s.has(n))
                        for (var i in (s.add(n), (o.children = {}), n)) {
                          var a = r ? r + '.' + i : i;
                          (t.length && -1 !== t.indexOf(a)) || (o.children[i] = te(e, t, n[i], a));
                        }
                      return o;
                    }
                    function ne(e, t, n, r, s, o) {
                      void 0 === t && (t = []), void 0 === s && (s = !1), void 0 === o && (o = '');
                      var i = n ? n.value : void 0,
                        a = i === r;
                      if (s && !a && !Number.isNaN(r)) return { wasMutated: !0, path: o };
                      if (e(i) || e(r)) return { wasMutated: !1 };
                      var c = {};
                      for (var u in n.children) c[u] = !0;
                      for (var u in r) c[u] = !0;
                      var l = t.length > 0,
                        d = function (s) {
                          var i = o ? o + '.' + s : s;
                          if (
                            l &&
                            t.some(function (e) {
                              return e instanceof RegExp ? e.test(i) : i === e;
                            })
                          )
                            return 'continue';
                          var c = ne(e, t, n.children[s], r[s], a, i);
                          if (c.wasMutated) return { value: c };
                        };
                      for (var u in c) {
                        var f = d(u);
                        if ('object' == typeof f) return f.value;
                      }
                      return { wasMutated: !1 };
                    }
                    function re(e) {
                      void 0 === e && (e = {});
                      var t = e.isImmutable,
                        n = void 0 === t ? Q : t,
                        r = e.ignoredPaths,
                        s = e.warnAfter,
                        o = void 0 === s ? 32 : s,
                        i = e.ignore;
                      r = r || i;
                      var a = ee.bind(null, n, r);
                      return function (e) {
                        var t,
                          n = e.getState,
                          r = n(),
                          s = a(r);
                        return function (e) {
                          return function (i) {
                            var c = q(o, 'ImmutableStateInvariantMiddleware');
                            c.measureTime(function () {
                              (r = n()),
                                (t = s.detectMutations()),
                                (s = a(r)),
                                J(
                                  !t.wasMutated,
                                  "A state mutation was detected between dispatches, in the path '" +
                                    (t.path || '') +
                                    "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)"
                                );
                            });
                            var u = e(i);
                            return (
                              c.measureTime(function () {
                                (r = n()),
                                  (t = s.detectMutations()),
                                  (s = a(r)),
                                  t.wasMutated &&
                                    J(
                                      !t.wasMutated,
                                      'A state mutation was detected inside a dispatch, in the path: ' +
                                        (t.path || '') +
                                        '. Take a look at the reducer(s) handling the action ' +
                                        Z(i) +
                                        '. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)'
                                    );
                              }),
                              c.warnIfExceeded(),
                              u
                            );
                          };
                        };
                      };
                    }
                    function se(e) {
                      var t = typeof e;
                      return (
                        null == e ||
                        'string' === t ||
                        'boolean' === t ||
                        'number' === t ||
                        Array.isArray(e) ||
                        P(e)
                      );
                    }
                    function oe(e, t, n, r, s, o) {
                      var i;
                      if (
                        (void 0 === t && (t = ''),
                        void 0 === n && (n = se),
                        void 0 === s && (s = []),
                        !n(e))
                      )
                        return { keyPath: t || '<root>', value: e };
                      if ('object' != typeof e || null === e) return !1;
                      if (null == o ? void 0 : o.has(e)) return !1;
                      for (
                        var a = null != r ? r(e) : Object.entries(e),
                          c = s.length > 0,
                          u = function (e, a) {
                            var u = t ? t + '.' + e : e;
                            if (
                              c &&
                              s.some(function (e) {
                                return e instanceof RegExp ? e.test(u) : u === e;
                              })
                            )
                              return 'continue';
                            return n(a)
                              ? 'object' == typeof a && (i = oe(a, u, n, r, s, o))
                                ? { value: i }
                                : void 0
                              : { value: { keyPath: u, value: a } };
                          },
                          l = 0,
                          d = a;
                        l < d.length;
                        l++
                      ) {
                        var f = d[l],
                          h = u(f[0], f[1]);
                        if ('object' == typeof h) return h.value;
                      }
                      return o && ie(e) && o.add(e), !1;
                    }
                    function ie(e) {
                      if (!Object.isFrozen(e)) return !1;
                      for (var t = 0, n = Object.values(e); t < n.length; t++) {
                        var r = n[t];
                        if ('object' == typeof r && null !== r && !ie(r)) return !1;
                      }
                      return !0;
                    }
                    function ae(e) {
                      void 0 === e && (e = {});
                      var t = e.isSerializable,
                        n = void 0 === t ? se : t,
                        r = e.getEntries,
                        s = e.ignoredActions,
                        o = void 0 === s ? [] : s,
                        i = e.ignoredActionPaths,
                        a = void 0 === i ? ['meta.arg', 'meta.baseQueryMeta'] : i,
                        c = e.ignoredPaths,
                        u = void 0 === c ? [] : c,
                        l = e.warnAfter,
                        d = void 0 === l ? 32 : l,
                        f = e.ignoreState,
                        h = void 0 !== f && f,
                        p = e.ignoreActions,
                        m = void 0 !== p && p,
                        g = e.disableCache,
                        y = !(void 0 !== g && g) && WeakSet ? new WeakSet() : void 0;
                      return function (e) {
                        return function (t) {
                          return function (s) {
                            var i = t(s),
                              c = q(d, 'SerializableStateInvariantMiddleware');
                            return (
                              m ||
                                (o.length && -1 !== o.indexOf(s.type)) ||
                                c.measureTime(function () {
                                  var e = oe(s, '', n, r, a, y);
                                  if (e) {
                                    var t = e.keyPath,
                                      o = e.value;
                                    console.error(
                                      'A non-serializable value was detected in an action, in the path: `' +
                                        t +
                                        '`. Value:',
                                      o,
                                      '\nTake a look at the logic that dispatched this action: ',
                                      s,
                                      '\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)',
                                      '\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)'
                                    );
                                  }
                                }),
                              h ||
                                (c.measureTime(function () {
                                  var t = oe(e.getState(), '', n, r, u, y);
                                  if (t) {
                                    var o = t.keyPath,
                                      i = t.value;
                                    console.error(
                                      'A non-serializable value was detected in the state, in the path: `' +
                                        o +
                                        '`. Value:',
                                      i,
                                      '\nTake a look at the reducer(s) handling this action type: ' +
                                        s.type +
                                        '.\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)'
                                    );
                                  }
                                }),
                                c.warnIfExceeded()),
                              i
                            );
                          };
                        };
                      };
                    }
                    function ce(e) {
                      return 'boolean' == typeof e;
                    }
                    function ue(e) {
                      void 0 === e && (e = {});
                      var t = e.thunk,
                        n = void 0 === t || t,
                        r = e.immutableCheck,
                        s = void 0 === r || r,
                        o = e.serializableCheck,
                        i = void 0 === o || o,
                        a = e.actionCreatorCheck,
                        c = void 0 === a || a,
                        u = new $();
                      if (
                        (n &&
                          (ce(n)
                            ? u.push(N.default)
                            : u.push(N.default.withExtraArgument(n.extraArgument))),
                        s)
                      ) {
                        var l = {};
                        ce(s) || (l = s), u.unshift(re(l));
                      }
                      if (i) {
                        var d = {};
                        ce(i) || (d = i), u.push(ae(d));
                      }
                      if (c) {
                        var f = {};
                        ce(c) || (f = c), u.unshift(G(f));
                      }
                      return u;
                    }
                    var le = !1;
                    function de(e) {
                      var t,
                        n = function (e) {
                          return ue(e);
                        },
                        r = e || {},
                        s = r.reducer,
                        o = void 0 === s ? void 0 : s,
                        i = r.middleware,
                        c = void 0 === i ? n() : i,
                        u = r.devTools,
                        l = void 0 === u || u,
                        d = r.preloadedState,
                        f = void 0 === d ? void 0 : d,
                        h = r.enhancers,
                        p = void 0 === h ? void 0 : h;
                      if ('function' == typeof o) t = o;
                      else {
                        if (!P(o))
                          throw new Error(
                            '"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'
                          );
                        t = (0, O.combineReducers)(o);
                      }
                      var m = c;
                      if ('function' == typeof m && ((m = m(n)), !le && !Array.isArray(m)))
                        throw new Error(
                          'when using a middleware builder function, an array of middleware must be returned'
                        );
                      if (
                        !le &&
                        m.some(function (e) {
                          return 'function' != typeof e;
                        })
                      )
                        throw new Error(
                          'each middleware provided to configureStore must be a function'
                        );
                      var g = O.applyMiddleware.apply(void 0, m),
                        y = O.compose;
                      l && (y = R(w({ trace: !le }, 'object' == typeof l && l)));
                      var b = new V(g),
                        v = b;
                      Array.isArray(p) ? (v = a([g], p)) : 'function' == typeof p && (v = p(b));
                      var _ = y.apply(void 0, v);
                      return (0, O.createStore)(t, f, _);
                    }
                    var fe = S(e('immer'));
                    function he(e) {
                      var t,
                        n = {},
                        r = [],
                        s = {
                          addCase: function (e, o) {
                            if (r.length > 0)
                              throw new Error(
                                '`builder.addCase` should only be called before calling `builder.addMatcher`'
                              );
                            if (t)
                              throw new Error(
                                '`builder.addCase` should only be called before calling `builder.addDefaultCase`'
                              );
                            var i = 'string' == typeof e ? e : e.type;
                            if (!i)
                              throw new Error(
                                '`builder.addCase` cannot be called with an empty action type'
                              );
                            if (i in n)
                              throw new Error(
                                '`builder.addCase` cannot be called with two reducers for the same action type'
                              );
                            return (n[i] = o), s;
                          },
                          addMatcher: function (e, n) {
                            if (t)
                              throw new Error(
                                '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'
                              );
                            return r.push({ matcher: e, reducer: n }), s;
                          },
                          addDefaultCase: function (e) {
                            if (t)
                              throw new Error('`builder.addDefaultCase` can only be called once');
                            return (t = e), s;
                          },
                        };
                      return e(s), [n, r, t];
                    }
                    var pe = !1;
                    function me(e, t, n, r) {
                      void 0 === n && (n = []),
                        'object' == typeof t &&
                          (pe ||
                            ((pe = !0),
                            console.warn(
                              "The object notation for `createReducer` is deprecated, and will be removed in RTK 2.0. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer"
                            )));
                      var s,
                        o = 'function' == typeof t ? he(t) : [t, n, r],
                        i = o[0],
                        c = o[1],
                        u = o[2];
                      if ('function' == typeof e)
                        s = function () {
                          return K(e());
                        };
                      else {
                        var l = K(e);
                        s = function () {
                          return l;
                        };
                      }
                      function d(e, t) {
                        void 0 === e && (e = s());
                        var n = a(
                          [i[t.type]],
                          c
                            .filter(function (e) {
                              return (0, e.matcher)(t);
                            })
                            .map(function (e) {
                              return e.reducer;
                            })
                        );
                        return (
                          0 ===
                            n.filter(function (e) {
                              return !!e;
                            }).length && (n = [u]),
                          n.reduce(function (e, n) {
                            if (n) {
                              var r;
                              if ((0, fe.isDraft)(e)) return void 0 === (r = n(e, t)) ? e : r;
                              if ((0, fe.isDraftable)(e))
                                return (0, fe.default)(e, function (e) {
                                  return n(e, t);
                                });
                              if (void 0 === (r = n(e, t))) {
                                if (null === e) return e;
                                throw Error(
                                  'A case reducer on a non-draftable value must not return undefined'
                                );
                              }
                              return r;
                            }
                            return e;
                          }, e)
                        );
                      }
                      return (d.getInitialState = s), d;
                    }
                    var ge = !1;
                    function ye(e) {
                      var n = e.name;
                      if (!n) throw new Error('`name` is a required option for createSlice');
                      void 0 !== t &&
                        void 0 === e.initialState &&
                        console.error(
                          'You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`'
                        );
                      var r,
                        s =
                          'function' == typeof e.initialState ? e.initialState : K(e.initialState),
                        o = e.reducers || {},
                        i = Object.keys(o),
                        a = {},
                        c = {},
                        u = {};
                      function l() {
                        'object' == typeof e.extraReducers &&
                          (ge ||
                            ((ge = !0),
                            console.warn(
                              "The object notation for `createSlice.extraReducers` is deprecated, and will be removed in RTK 2.0. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice"
                            )));
                        var t =
                            'function' == typeof e.extraReducers
                              ? he(e.extraReducers)
                              : [e.extraReducers],
                          n = t[0],
                          r = void 0 === n ? {} : n,
                          o = t[1],
                          i = void 0 === o ? [] : o,
                          a = t[2],
                          u = void 0 === a ? void 0 : a,
                          l = w(w({}, r), c);
                        return me(s, function (e) {
                          for (var t in l) e.addCase(t, l[t]);
                          for (var n = 0, r = i; n < r.length; n++) {
                            var s = r[n];
                            e.addMatcher(s.matcher, s.reducer);
                          }
                          u && e.addDefaultCase(u);
                        });
                      }
                      return (
                        i.forEach(function (e) {
                          var t,
                            r,
                            s = o[e],
                            i = n + '/' + e;
                          'reducer' in s ? ((t = s.reducer), (r = s.prepare)) : (t = s),
                            (a[e] = t),
                            (c[i] = t),
                            (u[e] = r ? M(i, r) : M(i));
                        }),
                        {
                          name: n,
                          reducer: function (e, t) {
                            return r || (r = l()), r(e, t);
                          },
                          actions: u,
                          caseReducers: a,
                          getInitialState: function () {
                            return r || (r = l()), r.getInitialState();
                          },
                        }
                      );
                    }
                    var be = S(e('immer'));
                    function we(e) {
                      return function (t, n) {
                        var r = function (t) {
                          H(n) ? e(n.payload, t) : e(n, t);
                        };
                        return (0, be.isDraft)(t) ? (r(t), t) : (0, be.default)(t, r);
                      };
                    }
                    function ve(e, t) {
                      var n = t(e);
                      return (
                        void 0 === n &&
                          console.warn(
                            'The entity passed to the `selectId` implementation returned undefined.',
                            'You should probably provide your own `selectId` implementation.',
                            'The entity that was passed:',
                            e,
                            'The `selectId` implementation:',
                            t.toString()
                          ),
                        n
                      );
                    }
                    function _e(e) {
                      return Array.isArray(e) || (e = Object.values(e)), e;
                    }
                    function Ee(e, t, n) {
                      for (var r = [], s = [], o = 0, i = (e = _e(e)); o < i.length; o++) {
                        var a = i[o],
                          c = ve(a, t);
                        c in n.entities ? s.push({ id: c, changes: a }) : r.push(a);
                      }
                      return [r, s];
                    }
                    function Se(e) {
                      function t(t, n) {
                        var r = ve(t, e);
                        r in n.entities || (n.ids.push(r), (n.entities[r] = t));
                      }
                      function n(e, n) {
                        for (var r = 0, s = (e = _e(e)); r < s.length; r++) {
                          t(s[r], n);
                        }
                      }
                      function r(t, n) {
                        var r = ve(t, e);
                        r in n.entities || n.ids.push(r), (n.entities[r] = t);
                      }
                      function s(e, t) {
                        var n = !1;
                        e.forEach(function (e) {
                          e in t.entities && (delete t.entities[e], (n = !0));
                        }),
                          n &&
                            (t.ids = t.ids.filter(function (e) {
                              return e in t.entities;
                            }));
                      }
                      function o(t, n) {
                        var r = {},
                          s = {};
                        if (
                          (t.forEach(function (e) {
                            e.id in n.entities &&
                              (s[e.id] = {
                                id: e.id,
                                changes: w(w({}, s[e.id] ? s[e.id].changes : null), e.changes),
                              });
                          }),
                          (t = Object.values(s)).length > 0)
                        ) {
                          var o =
                            t.filter(function (t) {
                              return (function (t, n, r) {
                                var s = r.entities[n.id],
                                  o = Object.assign({}, s, n.changes),
                                  i = ve(o, e),
                                  a = i !== n.id;
                                return (
                                  a && ((t[n.id] = i), delete r.entities[n.id]),
                                  (r.entities[i] = o),
                                  a
                                );
                              })(r, t, n);
                            }).length > 0;
                          o && (n.ids = Object.keys(n.entities));
                        }
                      }
                      function i(t, r) {
                        var s = Ee(t, e, r),
                          i = s[0];
                        o(s[1], r), n(i, r);
                      }
                      return {
                        removeAll:
                          ((a = function (e) {
                            Object.assign(e, { ids: [], entities: {} });
                          }),
                          (c = we(function (e, t) {
                            return a(t);
                          })),
                          function (e) {
                            return c(e, void 0);
                          }),
                        addOne: we(t),
                        addMany: we(n),
                        setOne: we(r),
                        setMany: we(function (e, t) {
                          for (var n = 0, s = (e = _e(e)); n < s.length; n++) {
                            r(s[n], t);
                          }
                        }),
                        setAll: we(function (e, t) {
                          (e = _e(e)), (t.ids = []), (t.entities = {}), n(e, t);
                        }),
                        updateOne: we(function (e, t) {
                          return o([e], t);
                        }),
                        updateMany: we(o),
                        upsertOne: we(function (e, t) {
                          return i([e], t);
                        }),
                        upsertMany: we(i),
                        removeOne: we(function (e, t) {
                          return s([e], t);
                        }),
                        removeMany: we(s),
                      };
                      var a, c;
                    }
                    function xe(e) {
                      void 0 === e && (e = {});
                      var t = w(
                          {
                            sortComparer: !1,
                            selectId: function (e) {
                              return e.id;
                            },
                          },
                          e
                        ),
                        n = t.selectId,
                        r = t.sortComparer,
                        s = {
                          getInitialState: function (e) {
                            return (
                              void 0 === e && (e = {}), Object.assign({ ids: [], entities: {} }, e)
                            );
                          },
                        },
                        o = {
                          getSelectors: function (e) {
                            var t = function (e) {
                                return e.ids;
                              },
                              n = function (e) {
                                return e.entities;
                              },
                              r = B(t, n, function (e, t) {
                                return e.map(function (e) {
                                  return t[e];
                                });
                              }),
                              s = function (e, t) {
                                return t;
                              },
                              o = function (e, t) {
                                return e[t];
                              },
                              i = B(t, function (e) {
                                return e.length;
                              });
                            if (!e)
                              return {
                                selectIds: t,
                                selectEntities: n,
                                selectAll: r,
                                selectTotal: i,
                                selectById: B(n, s, o),
                              };
                            var a = B(e, n);
                            return {
                              selectIds: B(e, t),
                              selectEntities: a,
                              selectAll: B(e, r),
                              selectTotal: B(e, i),
                              selectById: B(a, s, o),
                            };
                          },
                        },
                        i = r
                          ? (function (e, t) {
                              var n = Se(e);
                              function r(t, n) {
                                var r = (t = _e(t)).filter(function (t) {
                                  return !(ve(t, e) in n.entities);
                                });
                                0 !== r.length && a(r, n);
                              }
                              function s(e, t) {
                                0 !== (e = _e(e)).length && a(e, t);
                              }
                              function o(t, n) {
                                for (var r = !1, s = 0, o = t; s < o.length; s++) {
                                  var i = o[s],
                                    a = n.entities[i.id];
                                  if (a) {
                                    (r = !0), Object.assign(a, i.changes);
                                    var u = e(a);
                                    i.id !== u && (delete n.entities[i.id], (n.entities[u] = a));
                                  }
                                }
                                r && c(n);
                              }
                              function i(t, n) {
                                var s = Ee(t, e, n),
                                  i = s[0];
                                o(s[1], n), r(i, n);
                              }
                              function a(t, n) {
                                t.forEach(function (t) {
                                  n.entities[e(t)] = t;
                                }),
                                  c(n);
                              }
                              function c(n) {
                                var r = Object.values(n.entities);
                                r.sort(t);
                                var s = r.map(e);
                                (function (e, t) {
                                  if (e.length !== t.length) return !1;
                                  for (var n = 0; n < e.length && n < t.length; n++)
                                    if (e[n] !== t[n]) return !1;
                                  return !0;
                                })(n.ids, s) || (n.ids = s);
                              }
                              return {
                                removeOne: n.removeOne,
                                removeMany: n.removeMany,
                                removeAll: n.removeAll,
                                addOne: we(function (e, t) {
                                  return r([e], t);
                                }),
                                updateOne: we(function (e, t) {
                                  return o([e], t);
                                }),
                                upsertOne: we(function (e, t) {
                                  return i([e], t);
                                }),
                                setOne: we(function (e, t) {
                                  return s([e], t);
                                }),
                                setMany: we(s),
                                setAll: we(function (e, t) {
                                  (e = _e(e)), (t.entities = {}), (t.ids = []), r(e, t);
                                }),
                                addMany: we(r),
                                updateMany: we(o),
                                upsertMany: we(i),
                              };
                            })(n, r)
                          : Se(n);
                      return w(w(w({ selectId: n, sortComparer: r }, s), o), i);
                    }
                    var Te = function (e) {
                        void 0 === e && (e = 21);
                        for (var t = '', n = e; n--; )
                          t += 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'[
                            (64 * Math.random()) | 0
                          ];
                        return t;
                      },
                      Ie = ['name', 'message', 'stack', 'code'],
                      ke = function (e, t) {
                        (this.payload = e), (this.meta = t);
                      },
                      Ae = function (e, t) {
                        (this.payload = e), (this.meta = t);
                      },
                      Ce = function (e) {
                        if ('object' == typeof e && null !== e) {
                          for (var t = {}, n = 0, r = Ie; n < r.length; n++) {
                            var s = r[n];
                            'string' == typeof e[s] && (t[s] = e[s]);
                          }
                          return t;
                        }
                        return { message: String(e) };
                      },
                      Be = (function () {
                        function e(e, t, n) {
                          var r = M(e + '/fulfilled', function (e, t, n, r) {
                              return {
                                payload: e,
                                meta: v(w({}, r || {}), {
                                  arg: n,
                                  requestId: t,
                                  requestStatus: 'fulfilled',
                                }),
                              };
                            }),
                            s = M(e + '/pending', function (e, t, n) {
                              return {
                                payload: void 0,
                                meta: v(w({}, n || {}), {
                                  arg: t,
                                  requestId: e,
                                  requestStatus: 'pending',
                                }),
                              };
                            }),
                            o = M(e + '/rejected', function (e, t, r, s, o) {
                              return {
                                payload: s,
                                error: ((n && n.serializeError) || Ce)(e || 'Rejected'),
                                meta: v(w({}, o || {}), {
                                  arg: r,
                                  requestId: t,
                                  rejectedWithValue: !!s,
                                  requestStatus: 'rejected',
                                  aborted: 'AbortError' === (null == e ? void 0 : e.name),
                                  condition: 'ConditionError' === (null == e ? void 0 : e.name),
                                }),
                              };
                            }),
                            a = !1,
                            c =
                              'undefined' != typeof AbortController
                                ? AbortController
                                : (function () {
                                    function e() {
                                      this.signal = {
                                        aborted: !1,
                                        addEventListener: function () {},
                                        dispatchEvent: function () {
                                          return !1;
                                        },
                                        onabort: function () {},
                                        removeEventListener: function () {},
                                        reason: void 0,
                                        throwIfAborted: function () {},
                                      };
                                    }
                                    return (
                                      (e.prototype.abort = function () {
                                        a ||
                                          ((a = !0),
                                          console.info(
                                            "This platform does not implement AbortController. \nIf you want to use the AbortController to react to `abort` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'."
                                          ));
                                      }),
                                      e
                                    );
                                  })();
                          return Object.assign(
                            function (e) {
                              return function (a, u, l) {
                                var d,
                                  f = (null == n ? void 0 : n.idGenerator)
                                    ? n.idGenerator(e)
                                    : Te(),
                                  h = new c();
                                function p(e) {
                                  (d = e), h.abort();
                                }
                                var m = (function () {
                                  return x(this, null, function () {
                                    var c, m, g, y, b, w;
                                    return i(this, function (i) {
                                      switch (i.label) {
                                        case 0:
                                          return (
                                            i.trys.push([0, 4, , 5]),
                                            (y =
                                              null == (c = null == n ? void 0 : n.condition)
                                                ? void 0
                                                : c.call(n, e, { getState: u, extra: l })),
                                            null === (v = y) ||
                                            'object' != typeof v ||
                                            'function' != typeof v.then
                                              ? [3, 2]
                                              : [4, y]
                                          );
                                        case 1:
                                          (y = i.sent()), (i.label = 2);
                                        case 2:
                                          if (!1 === y || h.signal.aborted)
                                            throw {
                                              name: 'ConditionError',
                                              message:
                                                'Aborted due to condition callback returning false.',
                                            };
                                          return (
                                            !0,
                                            (b = new Promise(function (e, t) {
                                              return h.signal.addEventListener(
                                                'abort',
                                                function () {
                                                  return t({
                                                    name: 'AbortError',
                                                    message: d || 'Aborted',
                                                  });
                                                }
                                              );
                                            })),
                                            a(
                                              s(
                                                f,
                                                e,
                                                null == (m = null == n ? void 0 : n.getPendingMeta)
                                                  ? void 0
                                                  : m.call(
                                                      n,
                                                      { requestId: f, arg: e },
                                                      { getState: u, extra: l }
                                                    )
                                              )
                                            ),
                                            [
                                              4,
                                              Promise.race([
                                                b,
                                                Promise.resolve(
                                                  t(e, {
                                                    dispatch: a,
                                                    getState: u,
                                                    extra: l,
                                                    requestId: f,
                                                    signal: h.signal,
                                                    abort: p,
                                                    rejectWithValue: function (e, t) {
                                                      return new ke(e, t);
                                                    },
                                                    fulfillWithValue: function (e, t) {
                                                      return new Ae(e, t);
                                                    },
                                                  })
                                                ).then(function (t) {
                                                  if (t instanceof ke) throw t;
                                                  return t instanceof Ae
                                                    ? r(t.payload, f, e, t.meta)
                                                    : r(t, f, e);
                                                }),
                                              ]),
                                            ]
                                          );
                                        case 3:
                                          return (g = i.sent()), [3, 5];
                                        case 4:
                                          return (
                                            (w = i.sent()),
                                            (g =
                                              w instanceof ke
                                                ? o(null, f, e, w.payload, w.meta)
                                                : o(w, f, e)),
                                            [3, 5]
                                          );
                                        case 5:
                                          return (
                                            (n &&
                                              !n.dispatchConditionRejection &&
                                              o.match(g) &&
                                              g.meta.condition) ||
                                              a(g),
                                            [2, g]
                                          );
                                      }
                                      var v;
                                    });
                                  });
                                })();
                                return Object.assign(m, {
                                  abort: p,
                                  requestId: f,
                                  arg: e,
                                  unwrap: function () {
                                    return m.then(Oe);
                                  },
                                });
                              };
                            },
                            { pending: s, rejected: o, fulfilled: r, typePrefix: e }
                          );
                        }
                        return (
                          (e.withTypes = function () {
                            return e;
                          }),
                          e
                        );
                      })();
                    function Oe(e) {
                      if (e.meta && e.meta.rejectedWithValue) throw e.payload;
                      if (e.error) throw e.error;
                      return e.payload;
                    }
                    var je = function (e, t) {
                      return L(e) ? e.match(t) : e(t);
                    };
                    function Re() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return function (t) {
                        return e.some(function (e) {
                          return je(e, t);
                        });
                      };
                    }
                    function Pe() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return function (t) {
                        return e.every(function (e) {
                          return je(e, t);
                        });
                      };
                    }
                    function Ne(e, t) {
                      if (!e || !e.meta) return !1;
                      var n = 'string' == typeof e.meta.requestId,
                        r = t.indexOf(e.meta.requestStatus) > -1;
                      return n && r;
                    }
                    function Le(e) {
                      return (
                        'function' == typeof e[0] &&
                        'pending' in e[0] &&
                        'fulfilled' in e[0] &&
                        'rejected' in e[0]
                      );
                    }
                    function Me() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return 0 === e.length
                        ? function (e) {
                            return Ne(e, ['pending']);
                          }
                        : Le(e)
                          ? function (t) {
                              var n = e.map(function (e) {
                                return e.pending;
                              });
                              return Re.apply(void 0, n)(t);
                            }
                          : Me()(e[0]);
                    }
                    function De() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return 0 === e.length
                        ? function (e) {
                            return Ne(e, ['rejected']);
                          }
                        : Le(e)
                          ? function (t) {
                              var n = e.map(function (e) {
                                return e.rejected;
                              });
                              return Re.apply(void 0, n)(t);
                            }
                          : De()(e[0]);
                    }
                    function Fe() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      var n = function (e) {
                        return e && e.meta && e.meta.rejectedWithValue;
                      };
                      return 0 === e.length || Le(e)
                        ? function (t) {
                            return Pe(De.apply(void 0, e), n)(t);
                          }
                        : Fe()(e[0]);
                    }
                    function He() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return 0 === e.length
                        ? function (e) {
                            return Ne(e, ['fulfilled']);
                          }
                        : Le(e)
                          ? function (t) {
                              var n = e.map(function (e) {
                                return e.fulfilled;
                              });
                              return Re.apply(void 0, n)(t);
                            }
                          : He()(e[0]);
                    }
                    function Ue() {
                      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                      return 0 === e.length
                        ? function (e) {
                            return Ne(e, ['pending', 'fulfilled', 'rejected']);
                          }
                        : Le(e)
                          ? function (t) {
                              for (var n = [], r = 0, s = e; r < s.length; r++) {
                                var o = s[r];
                                n.push(o.pending, o.rejected, o.fulfilled);
                              }
                              return Re.apply(void 0, n)(t);
                            }
                          : Ue()(e[0]);
                    }
                    var We = function (e, t) {
                        if ('function' != typeof e) throw new TypeError(t + ' is not a function');
                      },
                      Ge = function () {},
                      ze = function (e, t) {
                        return void 0 === t && (t = Ge), e.catch(t), e;
                      },
                      qe = function (e, t) {
                        return (
                          e.addEventListener('abort', t, { once: !0 }),
                          function () {
                            return e.removeEventListener('abort', t);
                          }
                        );
                      },
                      $e = function (e, t) {
                        var n = e.signal;
                        n.aborted ||
                          ('reason' in n ||
                            Object.defineProperty(n, 'reason', {
                              enumerable: !0,
                              value: t,
                              configurable: !0,
                              writable: !0,
                            }),
                          e.abort(t));
                      },
                      Ve = 'listener',
                      Ke = 'completed',
                      Xe = 'cancelled',
                      Ye = 'task-' + Xe,
                      Je = 'task-' + Ke,
                      Ze = Ve + '-' + Xe,
                      Qe = Ve + '-' + Ke,
                      et = function (e) {
                        (this.code = e),
                          (this.name = 'TaskAbortError'),
                          (this.message = 'task ' + Xe + ' (reason: ' + e + ')');
                      },
                      tt = function (e) {
                        if (e.aborted) throw new et(e.reason);
                      };
                    function nt(e, t) {
                      var n = Ge;
                      return new Promise(function (r, s) {
                        var o = function () {
                          return s(new et(e.reason));
                        };
                        e.aborted
                          ? o()
                          : ((n = qe(e, o)),
                            t
                              .finally(function () {
                                return n();
                              })
                              .then(r, s));
                      }).finally(function () {
                        n = Ge;
                      });
                    }
                    var rt = function (e) {
                        return function (t) {
                          return ze(
                            nt(e, t).then(function (t) {
                              return tt(e), t;
                            })
                          );
                        };
                      },
                      st = function (e) {
                        var t = rt(e);
                        return function (e) {
                          return t(
                            new Promise(function (t) {
                              return setTimeout(t, e);
                            })
                          );
                        };
                      },
                      ot = Object.assign,
                      it = {},
                      at = 'listenerMiddleware',
                      ct = function (e, t) {
                        return function (n, r) {
                          We(n, 'taskExecutor');
                          var s,
                            o = new AbortController();
                          (s = o),
                            qe(e, function () {
                              return $e(s, e.reason);
                            });
                          var a,
                            c,
                            u =
                              ((a = function () {
                                return x(void 0, null, function () {
                                  var t;
                                  return i(this, function (r) {
                                    switch (r.label) {
                                      case 0:
                                        return (
                                          tt(e),
                                          tt(o.signal),
                                          [
                                            4,
                                            n({
                                              pause: rt(o.signal),
                                              delay: st(o.signal),
                                              signal: o.signal,
                                            }),
                                          ]
                                        );
                                      case 1:
                                        return (t = r.sent()), tt(o.signal), [2, t];
                                    }
                                  });
                                });
                              }),
                              (c = function () {
                                return $e(o, Je);
                              }),
                              x(void 0, null, function () {
                                var e;
                                return i(this, function (t) {
                                  switch (t.label) {
                                    case 0:
                                      return t.trys.push([0, 3, 4, 5]), [4, Promise.resolve()];
                                    case 1:
                                      return t.sent(), [4, a()];
                                    case 2:
                                      return [2, { status: 'ok', value: t.sent() }];
                                    case 3:
                                      return [
                                        2,
                                        {
                                          status:
                                            (e = t.sent()) instanceof et ? 'cancelled' : 'rejected',
                                          error: e,
                                        },
                                      ];
                                    case 4:
                                      return null == c || c(), [7];
                                    case 5:
                                      return [2];
                                  }
                                });
                              }));
                          return (
                            (null == r ? void 0 : r.autoJoin) && t.push(u),
                            {
                              result: rt(e)(u),
                              cancel: function () {
                                $e(o, Ye);
                              },
                            }
                          );
                        };
                      },
                      ut = function (e, t) {
                        return function (n, r) {
                          return ze(
                            (function (n, r) {
                              return x(void 0, null, function () {
                                var s, o, a, c;
                                return i(this, function (i) {
                                  switch (i.label) {
                                    case 0:
                                      tt(t),
                                        (s = function () {}),
                                        (o = new Promise(function (t, r) {
                                          var o = e({
                                            predicate: n,
                                            effect: function (e, n) {
                                              n.unsubscribe(),
                                                t([e, n.getState(), n.getOriginalState()]);
                                            },
                                          });
                                          s = function () {
                                            o(), r();
                                          };
                                        })),
                                        (a = [o]),
                                        null != r &&
                                          a.push(
                                            new Promise(function (e) {
                                              return setTimeout(e, r, null);
                                            })
                                          ),
                                        (i.label = 1);
                                    case 1:
                                      return i.trys.push([1, , 3, 4]), [4, nt(t, Promise.race(a))];
                                    case 2:
                                      return (c = i.sent()), tt(t), [2, c];
                                    case 3:
                                      return s(), [7];
                                    case 4:
                                      return [2];
                                  }
                                });
                              });
                            })(n, r)
                          );
                        };
                      },
                      lt = function (e) {
                        var t = e.type,
                          n = e.actionCreator,
                          r = e.matcher,
                          s = e.predicate,
                          o = e.effect;
                        if (t) s = M(t).match;
                        else if (n) (t = n.type), (s = n.match);
                        else if (r) s = r;
                        else if (!s)
                          throw new Error(
                            'Creating or removing a listener requires one of the known fields for matching an action'
                          );
                        return We(o, 'options.listener'), { predicate: s, type: t, effect: o };
                      },
                      dt = function (e) {
                        var t = lt(e),
                          n = t.type,
                          r = t.predicate,
                          s = t.effect;
                        return {
                          id: Te(),
                          effect: s,
                          type: n,
                          predicate: r,
                          pending: new Set(),
                          unsubscribe: function () {
                            throw new Error('Unsubscribe not initialized');
                          },
                        };
                      },
                      ft = function (e) {
                        e.pending.forEach(function (e) {
                          $e(e, Ze);
                        });
                      },
                      ht = function (e) {
                        return function () {
                          e.forEach(ft), e.clear();
                        };
                      },
                      pt = function (e, t, n) {
                        try {
                          e(t, n);
                        } catch (e) {
                          setTimeout(function () {
                            throw e;
                          }, 0);
                        }
                      },
                      mt = M(at + '/add'),
                      gt = M(at + '/removeAll'),
                      yt = M(at + '/remove'),
                      bt = function () {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        console.error.apply(console, a([at + '/error'], e));
                      };
                    function wt(e) {
                      var t = this;
                      void 0 === e && (e = {});
                      var n = new Map(),
                        r = e.extra,
                        s = e.onError,
                        o = void 0 === s ? bt : s;
                      We(o, 'onError');
                      var a = function (e) {
                          for (var t = 0, r = Array.from(n.values()); t < r.length; t++) {
                            var s = r[t];
                            if (e(s)) return s;
                          }
                        },
                        c = function (e) {
                          var t = a(function (t) {
                            return t.effect === e.effect;
                          });
                          return (
                            t || (t = dt(e)),
                            (function (e) {
                              return (
                                (e.unsubscribe = function () {
                                  return n.delete(e.id);
                                }),
                                n.set(e.id, e),
                                function (t) {
                                  e.unsubscribe(), (null == t ? void 0 : t.cancelActive) && ft(e);
                                }
                              );
                            })(t)
                          );
                        },
                        u = function (e) {
                          var t = lt(e),
                            n = t.type,
                            r = t.effect,
                            s = t.predicate,
                            o = a(function (e) {
                              return (
                                ('string' == typeof n ? e.type === n : e.predicate === s) &&
                                e.effect === r
                              );
                            });
                          return o && (o.unsubscribe(), e.cancelActive && ft(o)), !!o;
                        },
                        l = function (e, s, a, u) {
                          return x(t, null, function () {
                            var t, l, d, f;
                            return i(this, function (i) {
                              switch (i.label) {
                                case 0:
                                  (t = new AbortController()),
                                    (l = ut(c, t.signal)),
                                    (d = []),
                                    (i.label = 1);
                                case 1:
                                  return (
                                    i.trys.push([1, 3, 4, 6]),
                                    e.pending.add(t),
                                    [
                                      4,
                                      Promise.resolve(
                                        e.effect(
                                          s,
                                          ot({}, a, {
                                            getOriginalState: u,
                                            condition: function (e, t) {
                                              return l(e, t).then(Boolean);
                                            },
                                            take: l,
                                            delay: st(t.signal),
                                            pause: rt(t.signal),
                                            extra: r,
                                            signal: t.signal,
                                            fork: ct(t.signal, d),
                                            unsubscribe: e.unsubscribe,
                                            subscribe: function () {
                                              n.set(e.id, e);
                                            },
                                            cancelActiveListeners: function () {
                                              e.pending.forEach(function (e, n, r) {
                                                e !== t && ($e(e, Ze), r.delete(e));
                                              });
                                            },
                                          })
                                        )
                                      ),
                                    ]
                                  );
                                case 2:
                                  return i.sent(), [3, 6];
                                case 3:
                                  return (
                                    (f = i.sent()) instanceof et ||
                                      pt(o, f, { raisedBy: 'effect' }),
                                    [3, 6]
                                  );
                                case 4:
                                  return [4, Promise.allSettled(d)];
                                case 5:
                                  return i.sent(), $e(t, Qe), e.pending.delete(t), [7];
                                case 6:
                                  return [2];
                              }
                            });
                          });
                        },
                        d = ht(n);
                      return {
                        middleware: function (e) {
                          return function (t) {
                            return function (r) {
                              if (!D(r)) return t(r);
                              if (mt.match(r)) return c(r.payload);
                              if (!gt.match(r)) {
                                if (yt.match(r)) return u(r.payload);
                                var s,
                                  i = e.getState(),
                                  a = function () {
                                    if (i === it)
                                      throw new Error(
                                        at + ': getOriginalState can only be called synchronously'
                                      );
                                    return i;
                                  };
                                try {
                                  if (((s = t(r)), n.size > 0))
                                    for (
                                      var f = e.getState(),
                                        h = Array.from(n.values()),
                                        p = 0,
                                        m = h;
                                      p < m.length;
                                      p++
                                    ) {
                                      var g = m[p],
                                        y = !1;
                                      try {
                                        y = g.predicate(r, f, i);
                                      } catch (e) {
                                        (y = !1), pt(o, e, { raisedBy: 'predicate' });
                                      }
                                      y && l(g, r, e, a);
                                    }
                                } finally {
                                  i = it;
                                }
                                return s;
                              }
                              d();
                            };
                          };
                        },
                        startListening: c,
                        stopListening: u,
                        clearListeners: d,
                      };
                    }
                    var vt,
                      _t = 'RTK_autoBatch',
                      Et = function () {
                        return function (e) {
                          var t;
                          return { payload: e, meta: ((t = {}), (t[_t] = !0), t) };
                        };
                      },
                      St =
                        'function' == typeof queueMicrotask
                          ? queueMicrotask.bind(
                              'undefined' != typeof window
                                ? window
                                : 'undefined' != typeof global
                                  ? global
                                  : globalThis
                            )
                          : function (e) {
                              return (vt || (vt = Promise.resolve())).then(e).catch(function (e) {
                                return setTimeout(function () {
                                  throw e;
                                }, 0);
                              });
                            },
                      xt = function (e) {
                        return function (t) {
                          setTimeout(t, e);
                        };
                      },
                      Tt =
                        'undefined' != typeof window && window.requestAnimationFrame
                          ? window.requestAnimationFrame
                          : xt(10),
                      It = function (e) {
                        return (
                          void 0 === e && (e = { type: 'raf' }),
                          function (t) {
                            return function () {
                              for (var n = [], r = 0; r < arguments.length; r++)
                                n[r] = arguments[r];
                              var s = t.apply(void 0, n),
                                o = !0,
                                i = !1,
                                a = !1,
                                c = new Set(),
                                u =
                                  'tick' === e.type
                                    ? St
                                    : 'raf' === e.type
                                      ? Tt
                                      : 'callback' === e.type
                                        ? e.queueNotification
                                        : xt(e.timeout),
                                l = function () {
                                  (a = !1),
                                    i &&
                                      ((i = !1),
                                      c.forEach(function (e) {
                                        return e();
                                      }));
                                };
                              return Object.assign({}, s, {
                                subscribe: function (e) {
                                  var t = s.subscribe(function () {
                                    return o && e();
                                  });
                                  return (
                                    c.add(e),
                                    function () {
                                      t(), c.delete(e);
                                    }
                                  );
                                },
                                dispatch: function (e) {
                                  var t;
                                  try {
                                    return (
                                      (o = !(null == (t = null == e ? void 0 : e.meta)
                                        ? void 0
                                        : t[_t])),
                                      (i = !o) && (a || ((a = !0), u(l))),
                                      s.dispatch(e)
                                    );
                                  } finally {
                                    o = !0;
                                  }
                                },
                              });
                            };
                          }
                        );
                      };
                    (0, T.enableES5)();
                  }).call(this);
                }).call(this, e('_process'));
              };
            };
      },
      {
        package: '@reduxjs/toolkit',
        file: 'node_modules/@reduxjs/toolkit/dist/redux-toolkit.cjs.development.js',
      },
    ],
    [
      3075,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.createCacheKeyComparator = o),
                  (n.defaultEqualityCheck = void 0),
                  (n.defaultMemoize = function (e, t) {
                    var n = 'object' == typeof t ? t : { equalityCheck: t },
                      i = n.equalityCheck,
                      a = void 0 === i ? s : i,
                      c = n.maxSize,
                      u = void 0 === c ? 1 : c,
                      l = n.resultEqualityCheck,
                      d = o(a),
                      f =
                        1 === u
                          ? ((h = d),
                            {
                              get: function (e) {
                                return p && h(p.key, e) ? p.value : r;
                              },
                              put: function (e, t) {
                                p = { key: e, value: t };
                              },
                              getEntries: function () {
                                return p ? [p] : [];
                              },
                              clear: function () {
                                p = undefined;
                              },
                            })
                          : (function (e, t) {
                              var n = [];
                              function s(e) {
                                var s = n.findIndex(function (n) {
                                  return t(e, n.key);
                                });
                                if (s > -1) {
                                  var o = n[s];
                                  return s > 0 && (n.splice(s, 1), n.unshift(o)), o.value;
                                }
                                return r;
                              }
                              function o(t, o) {
                                s(t) === r &&
                                  (n.unshift({ key: t, value: o }), n.length > e && n.pop());
                              }
                              function i() {
                                return n;
                              }
                              function a() {
                                n = [];
                              }
                              return { get: s, put: o, getEntries: i, clear: a };
                            })(u, d);
                    var h, p;
                    function m() {
                      var t = f.get(arguments);
                      if (t === r) {
                        if (((t = e.apply(null, arguments)), l)) {
                          var n = f.getEntries().find(function (e) {
                            return l(e.value, t);
                          });
                          n && (t = n.value);
                        }
                        f.put(arguments, t);
                      }
                      return t;
                    }
                    return (
                      (m.clearCache = function () {
                        return f.clear();
                      }),
                      m
                    );
                  });
                var r = 'NOT_FOUND';
                var s = function (e, t) {
                  return e === t;
                };
                function o(e) {
                  return function (t, n) {
                    if (null === t || null === n || t.length !== n.length) return !1;
                    for (var r = t.length, s = 0; s < r; s++) if (!e(t[s], n[s])) return !1;
                    return !0;
                  };
                }
                n.defaultEqualityCheck = s;
              };
            };
      },
      {
        package: '@reduxjs/toolkit>reselect',
        file: 'node_modules/@reduxjs/toolkit/node_modules/reselect/lib/defaultMemoize.js',
      },
    ],
    [
      3076,
      { './defaultMemoize': 3075 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.createSelector = void 0),
                  (n.createSelectorCreator = s),
                  (n.createStructuredSelector = void 0),
                  Object.defineProperty(n, 'defaultEqualityCheck', {
                    enumerable: !0,
                    get: function () {
                      return r.defaultEqualityCheck;
                    },
                  }),
                  Object.defineProperty(n, 'defaultMemoize', {
                    enumerable: !0,
                    get: function () {
                      return r.defaultMemoize;
                    },
                  });
                var r = e('./defaultMemoize');
                function s(e) {
                  for (
                    var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
                    r < t;
                    r++
                  )
                    n[r - 1] = arguments[r];
                  return function () {
                    for (var t = arguments.length, r = new Array(t), s = 0; s < t; s++)
                      r[s] = arguments[s];
                    var o,
                      i = 0,
                      a = { memoizeOptions: undefined },
                      c = r.pop();
                    if (('object' == typeof c && ((a = c), (c = r.pop())), 'function' != typeof c))
                      throw new Error(
                        'createSelector expects an output function after the inputs, but received: [' +
                          typeof c +
                          ']'
                      );
                    var u = a.memoizeOptions,
                      l = void 0 === u ? n : u,
                      d = Array.isArray(l) ? l : [l],
                      f = (function (e) {
                        var t = Array.isArray(e[0]) ? e[0] : e;
                        if (
                          !t.every(function (e) {
                            return 'function' == typeof e;
                          })
                        ) {
                          var n = t
                            .map(function (e) {
                              return 'function' == typeof e
                                ? 'function ' + (e.name || 'unnamed') + '()'
                                : typeof e;
                            })
                            .join(', ');
                          throw new Error(
                            'createSelector expects all input-selectors to be functions, but received the following types: [' +
                              n +
                              ']'
                          );
                        }
                        return t;
                      })(r),
                      h = e.apply(
                        void 0,
                        [
                          function () {
                            return i++, c.apply(null, arguments);
                          },
                        ].concat(d)
                      ),
                      p = e(function () {
                        for (var e = [], t = f.length, n = 0; n < t; n++)
                          e.push(f[n].apply(null, arguments));
                        return (o = h.apply(null, e));
                      });
                    return (
                      Object.assign(p, {
                        resultFunc: c,
                        memoizedResultFunc: h,
                        dependencies: f,
                        lastResult: function () {
                          return o;
                        },
                        recomputations: function () {
                          return i;
                        },
                        resetRecomputations: function () {
                          return (i = 0);
                        },
                      }),
                      p
                    );
                  };
                }
                var o = s(r.defaultMemoize);
                n.createSelector = o;
                n.createStructuredSelector = function (e, t) {
                  if ((void 0 === t && (t = o), 'object' != typeof e))
                    throw new Error(
                      'createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ' +
                        typeof e
                    );
                  var n = Object.keys(e),
                    r = t(
                      n.map(function (t) {
                        return e[t];
                      }),
                      function () {
                        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
                          t[r] = arguments[r];
                        return t.reduce(function (e, t, r) {
                          return (e[n[r]] = t), e;
                        }, {});
                      }
                    );
                  return r;
                };
              };
            };
      },
      {
        package: '@reduxjs/toolkit>reselect',
        file: 'node_modules/@reduxjs/toolkit/node_modules/reselect/lib/index.js',
      },
    ],
    [
      3078,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  return (
                    e instanceof Uint8Array ||
                    (ArrayBuffer.isView(e) && 'Uint8Array' === e.constructor.name)
                  );
                }
                function s(e, ...t) {
                  if (!r(e)) throw new Error('Uint8Array expected');
                  if (t.length > 0 && !t.includes(e.length))
                    throw new Error(
                      'Uint8Array expected of length ' + t + ', got length=' + e.length
                    );
                }
                function o(e, t) {
                  return (
                    !!Array.isArray(t) &&
                    (0 === t.length ||
                      (e
                        ? t.every(e => 'string' == typeof e)
                        : t.every(e => Number.isSafeInteger(e))))
                  );
                }
                function i(e) {
                  if ('function' != typeof e) throw new Error('function expected');
                  return !0;
                }
                function a(e, t) {
                  if ('string' != typeof t) throw new Error(`${e}: string expected`);
                  return !0;
                }
                function c(e) {
                  if (!Number.isSafeInteger(e)) throw new Error(`invalid integer: ${e}`);
                }
                function u(e) {
                  if (!Array.isArray(e)) throw new Error('array expected');
                }
                function l(e, t) {
                  if (!o(!0, t)) throw new Error(`${e}: array of strings expected`);
                }
                function d(e, t) {
                  if (!o(!1, t)) throw new Error(`${e}: array of numbers expected`);
                }
                function f(...e) {
                  const t = e => e,
                    n = (e, t) => n => e(t(n));
                  return {
                    encode: e.map(e => e.encode).reduceRight(n, t),
                    decode: e.map(e => e.decode).reduce(n, t),
                  };
                }
                function h(e) {
                  const t = 'string' == typeof e ? e.split('') : e,
                    n = t.length;
                  l('alphabet', t);
                  const r = new Map(t.map((e, t) => [e, t]));
                  return {
                    encode: r => (
                      u(r),
                      r.map(r => {
                        if (!Number.isSafeInteger(r) || r < 0 || r >= n)
                          throw new Error(
                            `alphabet.encode: digit index outside alphabet "${r}". Allowed: ${e}`
                          );
                        return t[r];
                      })
                    ),
                    decode: t => (
                      u(t),
                      t.map(t => {
                        a('alphabet.decode', t);
                        const n = r.get(t);
                        if (n === undefined)
                          throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);
                        return n;
                      })
                    ),
                  };
                }
                function p(e = '') {
                  return (
                    a('join', e),
                    {
                      encode: t => (l('join.decode', t), t.join(e)),
                      decode: t => (a('join.decode', t), t.split(e)),
                    }
                  );
                }
                function m(e, t = '=') {
                  return (
                    c(e),
                    a('padding', t),
                    {
                      encode(n) {
                        for (l('padding.encode', n); (n.length * e) % 8; ) n.push(t);
                        return n;
                      },
                      decode(n) {
                        l('padding.decode', n);
                        let r = n.length;
                        if ((r * e) % 8)
                          throw new Error(
                            'padding: invalid, string should have whole number of bytes'
                          );
                        for (; r > 0 && n[r - 1] === t; r--) {
                          if (((r - 1) * e) % 8 == 0)
                            throw new Error('padding: invalid, string has too much padding');
                        }
                        return n.slice(0, r);
                      },
                    }
                  );
                }
                function g(e) {
                  return i(e), { encode: e => e, decode: t => e(t) };
                }
                function y(e, t, n) {
                  if (t < 2)
                    throw new Error(`convertRadix: invalid from=${t}, base cannot be less than 2`);
                  if (n < 2)
                    throw new Error(`convertRadix: invalid to=${n}, base cannot be less than 2`);
                  if ((u(e), !e.length)) return [];
                  let r = 0;
                  const s = [],
                    o = Array.from(e, e => {
                      if ((c(e), e < 0 || e >= t)) throw new Error(`invalid integer: ${e}`);
                      return e;
                    }),
                    i = o.length;
                  for (;;) {
                    let e = 0,
                      a = !0;
                    for (let s = r; s < i; s++) {
                      const i = o[s],
                        c = t * e,
                        u = c + i;
                      if (!Number.isSafeInteger(u) || c / t !== e || u - i !== c)
                        throw new Error('convertRadix: carry overflow');
                      const l = u / n;
                      e = u % n;
                      const d = Math.floor(l);
                      if (((o[s] = d), !Number.isSafeInteger(d) || d * n + e !== u))
                        throw new Error('convertRadix: carry overflow');
                      a && (d ? (a = !1) : (r = s));
                    }
                    if ((s.push(e), a)) break;
                  }
                  for (let t = 0; t < e.length - 1 && 0 === e[t]; t++) s.push(0);
                  return s.reverse();
                }
                /*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.bytes =
                    n.stringToBytes =
                    n.str =
                    n.bytesToString =
                    n.hex =
                    n.utf8 =
                    n.bech32m =
                    n.bech32 =
                    n.base58check =
                    n.createBase58check =
                    n.base58xmr =
                    n.base58xrp =
                    n.base58flickr =
                    n.base58 =
                    n.base64urlnopad =
                    n.base64url =
                    n.base64nopad =
                    n.base64 =
                    n.base32crockford =
                    n.base32hexnopad =
                    n.base32hex =
                    n.base32nopad =
                    n.base32 =
                    n.base16 =
                    n.utils =
                      void 0);
                const b = (e, t) => (0 === t ? e : b(t, e % t)),
                  w = (e, t) => e + (t - b(e, t)),
                  v = (() => {
                    let e = [];
                    for (let t = 0; t < 40; t++) e.push(2 ** t);
                    return e;
                  })();
                function _(e, t, n, r) {
                  if ((u(e), t <= 0 || t > 32)) throw new Error(`convertRadix2: wrong from=${t}`);
                  if (n <= 0 || n > 32) throw new Error(`convertRadix2: wrong to=${n}`);
                  if (w(t, n) > 32)
                    throw new Error(
                      `convertRadix2: carry overflow from=${t} to=${n} carryBits=${w(t, n)}`
                    );
                  let s = 0,
                    o = 0;
                  const i = v[t],
                    a = v[n] - 1,
                    l = [];
                  for (const r of e) {
                    if ((c(r), r >= i))
                      throw new Error(`convertRadix2: invalid data word=${r} from=${t}`);
                    if (((s = (s << t) | r), o + t > 32))
                      throw new Error(`convertRadix2: carry overflow pos=${o} from=${t}`);
                    for (o += t; o >= n; o -= n) l.push(((s >> (o - n)) & a) >>> 0);
                    const e = v[o];
                    if (e === undefined) throw new Error('invalid carry');
                    s &= e - 1;
                  }
                  if (((s = (s << (n - o)) & a), !r && o >= t)) throw new Error('Excess padding');
                  if (!r && s > 0) throw new Error(`Non-zero padding: ${s}`);
                  return r && o > 0 && l.push(s >>> 0), l;
                }
                function E(e) {
                  c(e);
                  return {
                    encode: t => {
                      if (!r(t)) throw new Error('radix.encode input should be Uint8Array');
                      return y(Array.from(t), 256, e);
                    },
                    decode: t => (d('radix.decode', t), Uint8Array.from(y(t, e, 256))),
                  };
                }
                function S(e, t = !1) {
                  if ((c(e), e <= 0 || e > 32))
                    throw new Error('radix2: bits should be in (0..32]');
                  if (w(8, e) > 32 || w(e, 8) > 32) throw new Error('radix2: carry overflow');
                  return {
                    encode: n => {
                      if (!r(n)) throw new Error('radix2.encode input should be Uint8Array');
                      return _(Array.from(n), 8, e, !t);
                    },
                    decode: n => (d('radix2.decode', n), Uint8Array.from(_(n, e, 8, t))),
                  };
                }
                function x(e) {
                  return (
                    i(e),
                    function (...t) {
                      try {
                        return e.apply(null, t);
                      } catch (e) {}
                    }
                  );
                }
                function T(e, t) {
                  return (
                    c(e),
                    i(t),
                    {
                      encode(n) {
                        if (!r(n)) throw new Error('checksum.encode: input should be Uint8Array');
                        const s = t(n).slice(0, e),
                          o = new Uint8Array(n.length + e);
                        return o.set(n), o.set(s, n.length), o;
                      },
                      decode(n) {
                        if (!r(n)) throw new Error('checksum.decode: input should be Uint8Array');
                        const s = n.slice(0, -e),
                          o = n.slice(-e),
                          i = t(s).slice(0, e);
                        for (let t = 0; t < e; t++)
                          if (i[t] !== o[t]) throw new Error('Invalid checksum');
                        return s;
                      },
                    }
                  );
                }
                (n.utils = {
                  alphabet: h,
                  chain: f,
                  checksum: T,
                  convertRadix: y,
                  convertRadix2: _,
                  radix: E,
                  radix2: S,
                  join: p,
                  padding: m,
                }),
                  (n.base16 = f(S(4), h('0123456789ABCDEF'), p(''))),
                  (n.base32 = f(S(5), h('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), m(5), p(''))),
                  (n.base32nopad = f(S(5), h('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), p(''))),
                  (n.base32hex = f(S(5), h('0123456789ABCDEFGHIJKLMNOPQRSTUV'), m(5), p(''))),
                  (n.base32hexnopad = f(S(5), h('0123456789ABCDEFGHIJKLMNOPQRSTUV'), p(''))),
                  (n.base32crockford = f(
                    S(5),
                    h('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),
                    p(''),
                    g(e => e.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))
                  ));
                const I = (() =>
                  'function' == typeof Uint8Array.from([]).toBase64 &&
                  'function' == typeof Uint8Array.fromBase64)();
                (n.base64 = I
                  ? {
                      encode: e => (s(e), e.toBase64()),
                      decode: e => (
                        a('base64', e), Uint8Array.fromBase64(e, { lastChunkHandling: 'strict' })
                      ),
                    }
                  : f(
                      S(6),
                      h('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),
                      m(6),
                      p('')
                    )),
                  (n.base64nopad = f(
                    S(6),
                    h('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),
                    p('')
                  )),
                  (n.base64url = I
                    ? {
                        encode: e => (s(e), e.toBase64({ alphabet: 'base64url' })),
                        decode: e => (
                          a('base64', e), Uint8Array.fromBase64(e, { alphabet: 'base64url' })
                        ),
                      }
                    : f(
                        S(6),
                        h('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),
                        m(6),
                        p('')
                      )),
                  (n.base64urlnopad = f(
                    S(6),
                    h('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),
                    p('')
                  ));
                const k = e => f(E(58), h(e), p(''));
                (n.base58 = k('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz')),
                  (n.base58flickr = k(
                    '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
                  )),
                  (n.base58xrp = k('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'));
                const A = [0, 2, 3, 5, 6, 7, 9, 10, 11];
                n.base58xmr = {
                  encode(e) {
                    let t = '';
                    for (let r = 0; r < e.length; r += 8) {
                      const s = e.subarray(r, r + 8);
                      t += n.base58.encode(s).padStart(A[s.length], '1');
                    }
                    return t;
                  },
                  decode(e) {
                    let t = [];
                    for (let r = 0; r < e.length; r += 11) {
                      const s = e.slice(r, r + 11),
                        o = A.indexOf(s.length),
                        i = n.base58.decode(s);
                      for (let e = 0; e < i.length - o; e++)
                        if (0 !== i[e]) throw new Error('base58xmr: wrong padding');
                      t = t.concat(Array.from(i.slice(i.length - o)));
                    }
                    return Uint8Array.from(t);
                  },
                };
                (n.createBase58check = e =>
                  f(
                    T(4, t => e(e(t))),
                    n.base58
                  )),
                  (n.base58check = n.createBase58check);
                const C = f(h('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), p('')),
                  B = [996825010, 642813549, 513874426, 1027748829, 705979059];
                function O(e) {
                  const t = e >> 25;
                  let n = (33554431 & e) << 5;
                  for (let e = 0; e < B.length; e++) 1 == ((t >> e) & 1) && (n ^= B[e]);
                  return n;
                }
                function j(e, t, n = 1) {
                  const r = e.length;
                  let s = 1;
                  for (let t = 0; t < r; t++) {
                    const n = e.charCodeAt(t);
                    if (n < 33 || n > 126) throw new Error(`Invalid prefix (${e})`);
                    s = O(s) ^ (n >> 5);
                  }
                  s = O(s);
                  for (let t = 0; t < r; t++) s = O(s) ^ (31 & e.charCodeAt(t));
                  for (let e of t) s = O(s) ^ e;
                  for (let e = 0; e < 6; e++) s = O(s);
                  return (s ^= n), C.encode(_([s % v[30]], 30, 5, !1));
                }
                function R(e) {
                  const t = 'bech32' === e ? 1 : 734539939,
                    n = S(5),
                    s = n.decode,
                    o = n.encode,
                    i = x(s);
                  function c(e, n, s = 90) {
                    a('bech32.encode prefix', e),
                      r(n) && (n = Array.from(n)),
                      d('bech32.encode', n);
                    const o = e.length;
                    if (0 === o) throw new TypeError(`Invalid prefix length ${o}`);
                    const i = o + 7 + n.length;
                    if (!1 !== s && i > s) throw new TypeError(`Length ${i} exceeds limit ${s}`);
                    const c = e.toLowerCase(),
                      u = j(c, n, t);
                    return `${c}1${C.encode(n)}${u}`;
                  }
                  function u(e, n = 90) {
                    a('bech32.decode input', e);
                    const r = e.length;
                    if (r < 8 || (!1 !== n && r > n))
                      throw new TypeError(`invalid string length: ${r} (${e}). Expected (8..${n})`);
                    const s = e.toLowerCase();
                    if (e !== s && e !== e.toUpperCase())
                      throw new Error('String must be lowercase or uppercase');
                    const o = s.lastIndexOf('1');
                    if (0 === o || -1 === o)
                      throw new Error('Letter "1" must be present between prefix and data only');
                    const i = s.slice(0, o),
                      c = s.slice(o + 1);
                    if (c.length < 6) throw new Error('Data must be at least 6 characters long');
                    const u = C.decode(c).slice(0, -6),
                      l = j(i, u, t);
                    if (!c.endsWith(l))
                      throw new Error(`Invalid checksum in ${e}: expected "${l}"`);
                    return { prefix: i, words: u };
                  }
                  return {
                    encode: c,
                    decode: u,
                    encodeFromBytes: function (e, t) {
                      return c(e, o(t));
                    },
                    decodeToBytes: function (e) {
                      const { prefix: t, words: n } = u(e, !1);
                      return { prefix: t, words: n, bytes: s(n) };
                    },
                    decodeUnsafe: x(u),
                    fromWords: s,
                    fromWordsUnsafe: i,
                    toWords: o,
                  };
                }
                (n.bech32 = R('bech32')),
                  (n.bech32m = R('bech32m')),
                  (n.utf8 = {
                    encode: e => new TextDecoder().decode(e),
                    decode: e => new TextEncoder().encode(e),
                  });
                const P = (() =>
                    'function' == typeof Uint8Array.from([]).toHex &&
                    'function' == typeof Uint8Array.fromHex)(),
                  N = {
                    encode: e => (s(e), e.toHex()),
                    decode: e => (a('hex', e), Uint8Array.fromHex(e)),
                  };
                n.hex = P
                  ? N
                  : f(
                      S(4),
                      h('0123456789abcdef'),
                      p(''),
                      g(e => {
                        if ('string' != typeof e || e.length % 2 != 0)
                          throw new TypeError(
                            `hex.decode: expected string, got ${typeof e} with length ${e.length}`
                          );
                        return e.toLowerCase();
                      })
                    );
                const L = {
                    utf8: n.utf8,
                    hex: n.hex,
                    base16: n.base16,
                    base32: n.base32,
                    base64: n.base64,
                    base64url: n.base64url,
                    base58: n.base58,
                    base58xmr: n.base58xmr,
                  },
                  M =
                    'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
                (n.bytesToString = (e, t) => {
                  if ('string' != typeof e || !L.hasOwnProperty(e)) throw new TypeError(M);
                  if (!r(t)) throw new TypeError('bytesToString() expects Uint8Array');
                  return L[e].encode(t);
                }),
                  (n.str = n.bytesToString);
                (n.stringToBytes = (e, t) => {
                  if (!L.hasOwnProperty(e)) throw new TypeError(M);
                  if ('string' != typeof t) throw new TypeError('stringToBytes() expects string');
                  return L[e].decode(t);
                }),
                  (n.bytes = n.stringToBytes);
              };
            };
      },
      { package: '@metamask/utils>@scure/base', file: 'node_modules/@scure/base/lib/index.js' },
    ],
    [
      3079,
      {
        '@noble/curves/abstract/modular': 3083,
        '@noble/curves/secp256k1': 3086,
        '@noble/hashes/_assert': 3087,
        '@noble/hashes/hmac': 3091,
        '@noble/hashes/ripemd160': 3092,
        '@noble/hashes/sha256': 3093,
        '@noble/hashes/sha512': 3094,
        '@noble/hashes/utils': 3095,
        '@scure/base': 3096,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.HDKey = n.HARDENED_OFFSET = void 0);
                /*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/hmac'),
                  s = e('@noble/hashes/ripemd160'),
                  o = e('@noble/hashes/sha256'),
                  i = e('@noble/hashes/sha512'),
                  a = e('@noble/hashes/_assert'),
                  c = e('@noble/hashes/utils'),
                  u = e('@noble/curves/secp256k1'),
                  l = e('@noble/curves/abstract/modular'),
                  d = e('@scure/base'),
                  f = u.secp256k1.ProjectivePoint,
                  h = (0, d.createBase58check)(o.sha256);
                function p(e) {
                  return BigInt(`0x${(0, c.bytesToHex)(e)}`);
                }
                const m = (0, c.utf8ToBytes)('Bitcoin seed'),
                  g = { private: 76066276, public: 76067358 };
                n.HARDENED_OFFSET = 2147483648;
                const y = e => {
                  if (!Number.isSafeInteger(e) || e < 0 || e > 2 ** 32 - 1)
                    throw new Error(`Invalid number=${e}. Should be from 0 to 2 ** 32 - 1`);
                  const t = new Uint8Array(4);
                  return (0, c.createView)(t).setUint32(0, e, !1), t;
                };
                class b {
                  get fingerprint() {
                    if (!this.pubHash) throw new Error('No publicKey set!');
                    return (e = this.pubHash), (0, c.createView)(e).getUint32(0, !1);
                    var e;
                  }
                  get identifier() {
                    return this.pubHash;
                  }
                  get pubKeyHash() {
                    return this.pubHash;
                  }
                  get privateKey() {
                    return this.privKeyBytes || null;
                  }
                  get publicKey() {
                    return this.pubKey || null;
                  }
                  get privateExtendedKey() {
                    const e = this.privateKey;
                    if (!e) throw new Error('No private key');
                    return h.encode(
                      this.serialize(
                        this.versions.private,
                        (0, c.concatBytes)(new Uint8Array([0]), e)
                      )
                    );
                  }
                  get publicExtendedKey() {
                    if (!this.pubKey) throw new Error('No public key');
                    return h.encode(this.serialize(this.versions.public, this.pubKey));
                  }
                  static fromMasterSeed(e, t = g) {
                    if (((0, a.bytes)(e), 8 * e.length < 128 || 8 * e.length > 512))
                      throw new Error(
                        `HDKey: wrong seed length=${e.length}. Should be between 128 and 512 bits; 256 bits is advised)`
                      );
                    const n = (0, r.hmac)(i.sha512, m, e);
                    return new b({
                      versions: t,
                      chainCode: n.slice(32),
                      privateKey: n.slice(0, 32),
                    });
                  }
                  static fromExtendedKey(e, t = g) {
                    const n = h.decode(e),
                      r = (0, c.createView)(n),
                      s = r.getUint32(0, !1),
                      o = {
                        versions: t,
                        depth: n[4],
                        parentFingerprint: r.getUint32(5, !1),
                        index: r.getUint32(9, !1),
                        chainCode: n.slice(13, 45),
                      },
                      i = n.slice(45),
                      a = 0 === i[0];
                    if (s !== t[a ? 'private' : 'public']) throw new Error('Version mismatch');
                    return new b(a ? { ...o, privateKey: i.slice(1) } : { ...o, publicKey: i });
                  }
                  static fromJSON(e) {
                    return b.fromExtendedKey(e.xpriv);
                  }
                  constructor(e) {
                    if (
                      ((this.depth = 0),
                      (this.index = 0),
                      (this.chainCode = null),
                      (this.parentFingerprint = 0),
                      !e || 'object' != typeof e)
                    )
                      throw new Error('HDKey.constructor must not be called directly');
                    if (
                      ((this.versions = e.versions || g),
                      (this.depth = e.depth || 0),
                      (this.chainCode = e.chainCode || null),
                      (this.index = e.index || 0),
                      (this.parentFingerprint = e.parentFingerprint || 0),
                      !this.depth && (this.parentFingerprint || this.index))
                    )
                      throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');
                    if (e.publicKey && e.privateKey)
                      throw new Error('HDKey: publicKey and privateKey at same time.');
                    if (e.privateKey) {
                      if (!u.secp256k1.utils.isValidPrivateKey(e.privateKey))
                        throw new Error('Invalid private key');
                      (this.privKey =
                        'bigint' == typeof e.privateKey ? e.privateKey : p(e.privateKey)),
                        (this.privKeyBytes =
                          ((t = this.privKey),
                          (0, c.hexToBytes)(t.toString(16).padStart(64, '0')))),
                        (this.pubKey = u.secp256k1.getPublicKey(e.privateKey, !0));
                    } else {
                      if (!e.publicKey) throw new Error('HDKey: no public or private key provided');
                      this.pubKey = f.fromHex(e.publicKey).toRawBytes(!0);
                    }
                    var t, n;
                    this.pubHash = ((n = this.pubKey), (0, s.ripemd160)((0, o.sha256)(n)));
                  }
                  derive(e) {
                    if (!/^[mM]'?/.test(e)) throw new Error('Path must start with "m" or "M"');
                    if (/^[mM]'?$/.test(e)) return this;
                    const t = e.replace(/^[mM]'?\//, '').split('/');
                    let r = this;
                    for (const e of t) {
                      const t = /^(\d+)('?)$/.exec(e),
                        s = t && t[1];
                      if (!t || 3 !== t.length || 'string' != typeof s)
                        throw new Error(`Invalid child index: ${e}`);
                      let o = +s;
                      if (!Number.isSafeInteger(o) || o >= n.HARDENED_OFFSET)
                        throw new Error('Invalid index');
                      "'" === t[2] && (o += n.HARDENED_OFFSET), (r = r.deriveChild(o));
                    }
                    return r;
                  }
                  deriveChild(e) {
                    if (!this.pubKey || !this.chainCode)
                      throw new Error('No publicKey or chainCode set');
                    let t = y(e);
                    if (e >= n.HARDENED_OFFSET) {
                      const e = this.privateKey;
                      if (!e) throw new Error('Could not derive hardened child key');
                      t = (0, c.concatBytes)(new Uint8Array([0]), e, t);
                    } else t = (0, c.concatBytes)(this.pubKey, t);
                    const s = (0, r.hmac)(i.sha512, this.chainCode, t),
                      o = p(s.slice(0, 32)),
                      a = s.slice(32);
                    if (!u.secp256k1.utils.isValidPrivateKey(o))
                      throw new Error('Tweak bigger than curve order');
                    const d = {
                      versions: this.versions,
                      chainCode: a,
                      depth: this.depth + 1,
                      parentFingerprint: this.fingerprint,
                      index: e,
                    };
                    try {
                      if (this.privateKey) {
                        const e = (0, l.mod)(this.privKey + o, u.secp256k1.CURVE.n);
                        if (!u.secp256k1.utils.isValidPrivateKey(e))
                          throw new Error(
                            'The tweak was out of range or the resulted private key is invalid'
                          );
                        d.privateKey = e;
                      } else {
                        const e = f.fromHex(this.pubKey).add(f.fromPrivateKey(o));
                        if (e.equals(f.ZERO))
                          throw new Error(
                            'The tweak was equal to negative P, which made the result key invalid'
                          );
                        d.publicKey = e.toRawBytes(!0);
                      }
                      return new b(d);
                    } catch (t) {
                      return this.deriveChild(e + 1);
                    }
                  }
                  sign(e) {
                    if (!this.privateKey) throw new Error('No privateKey set!');
                    return (
                      (0, a.bytes)(e, 32), u.secp256k1.sign(e, this.privKey).toCompactRawBytes()
                    );
                  }
                  verify(e, t) {
                    if (((0, a.bytes)(e, 32), (0, a.bytes)(t, 64), !this.publicKey))
                      throw new Error('No publicKey set!');
                    let n;
                    try {
                      n = u.secp256k1.Signature.fromCompact(t);
                    } catch (e) {
                      return !1;
                    }
                    return u.secp256k1.verify(n, e, this.publicKey);
                  }
                  wipePrivateData() {
                    return (
                      (this.privKey = undefined),
                      this.privKeyBytes &&
                        (this.privKeyBytes.fill(0), (this.privKeyBytes = undefined)),
                      this
                    );
                  }
                  toJSON() {
                    return { xpriv: this.privateExtendedKey, xpub: this.publicExtendedKey };
                  }
                  serialize(e, t) {
                    if (!this.chainCode) throw new Error('No chainCode set');
                    return (
                      (0, a.bytes)(t, 33),
                      (0, c.concatBytes)(
                        y(e),
                        new Uint8Array([this.depth]),
                        y(this.parentFingerprint),
                        y(this.index),
                        this.chainCode,
                        t
                      )
                    );
                  }
                }
                n.HDKey = b;
              };
            };
      },
      { package: 'viem>@scure/bip32', file: 'node_modules/@scure/bip32/lib/index.js' },
    ],
    [
      3080,
      {
        './abstract/weierstrass.js': 3085,
        '@noble/hashes/hmac': 3091,
        '@noble/hashes/utils': 3095,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.getHash = i),
                  (n.createCurve = function (e, t) {
                    const n = t => (0, o.weierstrass)({ ...e, ...i(t) });
                    return Object.freeze({ ...n(t), create: n });
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/hmac'),
                  s = e('@noble/hashes/utils'),
                  o = e('./abstract/weierstrass.js');
                function i(e) {
                  return {
                    hash: e,
                    hmac: (t, ...n) => (0, r.hmac)(e, t, (0, s.concatBytes)(...n)),
                    randomBytes: s.randomBytes,
                  };
                }
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/_shortw_utils.js',
      },
    ],
    [
      3081,
      { './modular.js': 3083, './utils.js': 3084 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.wNAF = function (e, t) {
                    const n = (e, t) => {
                        const n = t.negate();
                        return e ? n : t;
                      },
                      r = e => ({ windows: Math.ceil(t / e) + 1, windowSize: 2 ** (e - 1) });
                    return {
                      constTimeNegate: n,
                      unsafeLadder(t, n) {
                        let r = e.ZERO,
                          s = t;
                        for (; n > o; ) n & i && (r = r.add(s)), (s = s.double()), (n >>= i);
                        return r;
                      },
                      precomputeWindow(e, t) {
                        const { windows: n, windowSize: s } = r(t),
                          o = [];
                        let i = e,
                          a = i;
                        for (let e = 0; e < n; e++) {
                          (a = i), o.push(a);
                          for (let e = 1; e < s; e++) (a = a.add(i)), o.push(a);
                          i = a.double();
                        }
                        return o;
                      },
                      wNAF(t, s, o) {
                        const { windows: a, windowSize: c } = r(t);
                        let u = e.ZERO,
                          l = e.BASE;
                        const d = BigInt(2 ** t - 1),
                          f = 2 ** t,
                          h = BigInt(t);
                        for (let e = 0; e < a; e++) {
                          const t = e * c;
                          let r = Number(o & d);
                          (o >>= h), r > c && ((r -= f), (o += i));
                          const a = t,
                            p = t + Math.abs(r) - 1,
                            m = e % 2 != 0,
                            g = r < 0;
                          0 === r ? (l = l.add(n(m, s[a]))) : (u = u.add(n(g, s[p])));
                        }
                        return { p: u, f: l };
                      },
                      wNAFCached(e, t, n, r) {
                        const s = e._WINDOW_SIZE || 1;
                        let o = t.get(e);
                        return (
                          o || ((o = this.precomputeWindow(e, s)), 1 !== s && t.set(e, r(o))),
                          this.wNAF(s, o, n)
                        );
                      },
                    };
                  }),
                  (n.validateBasic = function (e) {
                    return (
                      (0, r.validateField)(e.Fp),
                      (0, s.validateObject)(
                        e,
                        { n: 'bigint', h: 'bigint', Gx: 'field', Gy: 'field' },
                        { nBitLength: 'isSafeInteger', nByteLength: 'isSafeInteger' }
                      ),
                      Object.freeze({ ...(0, r.nLength)(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
                    );
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./modular.js'),
                  s = e('./utils.js'),
                  o = BigInt(0),
                  i = BigInt(1);
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/abstract/curve.js',
      },
    ],
    [
      3082,
      { './modular.js': 3083, './utils.js': 3084 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.expand_message_xmd = u),
                  (n.expand_message_xof = l),
                  (n.hash_to_field = d),
                  (n.isogenyMap = function (e, t) {
                    const n = t.map(e => Array.from(e).reverse());
                    return (t, r) => {
                      const [s, o, i, a] = n.map(n => n.reduce((n, r) => e.add(e.mul(n, t), r)));
                      return (t = e.div(s, o)), (r = e.mul(r, e.div(i, a))), { x: t, y: r };
                    };
                  }),
                  (n.createHasher = function (e, t, n) {
                    if ('function' != typeof t) throw new Error('mapToCurve() must be defined');
                    return {
                      hashToCurve(r, s) {
                        const o = d(r, 2, { ...n, DST: n.DST, ...s }),
                          i = e.fromAffine(t(o[0])),
                          a = e.fromAffine(t(o[1])),
                          c = i.add(a).clearCofactor();
                        return c.assertValidity(), c;
                      },
                      encodeToCurve(r, s) {
                        const o = d(r, 1, { ...n, DST: n.encodeDST, ...s }),
                          i = e.fromAffine(t(o[0])).clearCofactor();
                        return i.assertValidity(), i;
                      },
                      mapToCurve(n) {
                        if (!Array.isArray(n))
                          throw new Error('mapToCurve: expected array of bigints');
                        for (const e of n)
                          if ('bigint' != typeof e)
                            throw new Error(
                              `mapToCurve: expected array of bigints, got ${e} in array`
                            );
                        const r = e.fromAffine(t(n)).clearCofactor();
                        return r.assertValidity(), r;
                      },
                    };
                  });
                const r = e('./modular.js'),
                  s = e('./utils.js'),
                  o = s.bytesToNumberBE;
                function i(e, t) {
                  if (e < 0 || e >= 1 << (8 * t))
                    throw new Error(`bad I2OSP call: value=${e} length=${t}`);
                  const n = Array.from({ length: t }).fill(0);
                  for (let r = t - 1; r >= 0; r--) (n[r] = 255 & e), (e >>>= 8);
                  return new Uint8Array(n);
                }
                function a(e, t) {
                  const n = new Uint8Array(e.length);
                  for (let r = 0; r < e.length; r++) n[r] = e[r] ^ t[r];
                  return n;
                }
                function c(e) {
                  if (!Number.isSafeInteger(e)) throw new Error('number expected');
                }
                function u(e, t, n, r) {
                  (0, s.abytes)(e),
                    (0, s.abytes)(t),
                    c(n),
                    t.length > 255 &&
                      (t = r((0, s.concatBytes)((0, s.utf8ToBytes)('H2C-OVERSIZE-DST-'), t)));
                  const { outputLen: o, blockLen: u } = r,
                    l = Math.ceil(n / o);
                  if (l > 255) throw new Error('Invalid xmd length');
                  const d = (0, s.concatBytes)(t, i(t.length, 1)),
                    f = i(0, u),
                    h = i(n, 2),
                    p = new Array(l),
                    m = r((0, s.concatBytes)(f, e, h, i(0, 1), d));
                  p[0] = r((0, s.concatBytes)(m, i(1, 1), d));
                  for (let e = 1; e <= l; e++) {
                    const t = [a(m, p[e - 1]), i(e + 1, 1), d];
                    p[e] = r((0, s.concatBytes)(...t));
                  }
                  return (0, s.concatBytes)(...p).slice(0, n);
                }
                function l(e, t, n, r, o) {
                  if (((0, s.abytes)(e), (0, s.abytes)(t), c(n), t.length > 255)) {
                    const e = Math.ceil((2 * r) / 8);
                    t = o
                      .create({ dkLen: e })
                      .update((0, s.utf8ToBytes)('H2C-OVERSIZE-DST-'))
                      .update(t)
                      .digest();
                  }
                  if (n > 65535 || t.length > 255)
                    throw new Error('expand_message_xof: invalid lenInBytes');
                  return o
                    .create({ dkLen: n })
                    .update(e)
                    .update(i(n, 2))
                    .update(t)
                    .update(i(t.length, 1))
                    .digest();
                }
                function d(e, t, n) {
                  (0, s.validateObject)(n, {
                    DST: 'stringOrUint8Array',
                    p: 'bigint',
                    m: 'isSafeInteger',
                    k: 'isSafeInteger',
                    hash: 'hash',
                  });
                  const { p: i, k: a, m: d, hash: f, expand: h, DST: p } = n;
                  (0, s.abytes)(e), c(t);
                  const m = 'string' == typeof p ? (0, s.utf8ToBytes)(p) : p,
                    g = i.toString(2).length,
                    y = Math.ceil((g + a) / 8),
                    b = t * d * y;
                  let w;
                  if ('xmd' === h) w = u(e, m, b, f);
                  else if ('xof' === h) w = l(e, m, b, a, f);
                  else {
                    if ('_internal_pass' !== h) throw new Error('expand must be "xmd" or "xof"');
                    w = e;
                  }
                  const v = new Array(t);
                  for (let e = 0; e < t; e++) {
                    const t = new Array(d);
                    for (let n = 0; n < d; n++) {
                      const s = y * (n + e * d),
                        a = w.subarray(s, s + y);
                      t[n] = (0, r.mod)(o(a), i);
                    }
                    v[e] = t;
                  }
                  return v;
                }
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/abstract/hash-to-curve.js',
      },
    ],
    [
      3083,
      { './utils.js': 3084 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.isNegativeLE = void 0),
                  (n.mod = d),
                  (n.pow = f),
                  (n.pow2 = function (e, t, n) {
                    let r = e;
                    for (; t-- > s; ) (r *= r), (r %= n);
                    return r;
                  }),
                  (n.invert = h),
                  (n.tonelliShanks = p),
                  (n.FpSqrt = m),
                  (n.validateField = function (e) {
                    const t = g.reduce((e, t) => ((e[t] = 'function'), e), {
                      ORDER: 'bigint',
                      MASK: 'bigint',
                      BYTES: 'isSafeInteger',
                      BITS: 'isSafeInteger',
                    });
                    return (0, r.validateObject)(e, t);
                  }),
                  (n.FpPow = y),
                  (n.FpInvertBatch = b),
                  (n.FpDiv = function (e, t, n) {
                    return e.mul(t, 'bigint' == typeof n ? h(n, e.ORDER) : e.inv(n));
                  }),
                  (n.FpIsSquare = function (e) {
                    const t = (e.ORDER - o) / i;
                    return n => {
                      const r = e.pow(n, t);
                      return e.eql(r, e.ZERO) || e.eql(r, e.ONE);
                    };
                  }),
                  (n.nLength = w),
                  (n.Field = function (e, t, n = !1, i = {}) {
                    if (e <= s) throw new Error(`Expected Field ORDER > 0, got ${e}`);
                    const { nBitLength: a, nByteLength: c } = w(e, t);
                    if (c > 2048)
                      throw new Error('Field lengths over 2048 bytes are not supported');
                    const u = m(e),
                      l = Object.freeze({
                        ORDER: e,
                        BITS: a,
                        BYTES: c,
                        MASK: (0, r.bitMask)(a),
                        ZERO: s,
                        ONE: o,
                        create: t => d(t, e),
                        isValid: t => {
                          if ('bigint' != typeof t)
                            throw new Error(
                              'Invalid field element: expected bigint, got ' + typeof t
                            );
                          return s <= t && t < e;
                        },
                        is0: e => e === s,
                        isOdd: e => (e & o) === o,
                        neg: t => d(-t, e),
                        eql: (e, t) => e === t,
                        sqr: t => d(t * t, e),
                        add: (t, n) => d(t + n, e),
                        sub: (t, n) => d(t - n, e),
                        mul: (t, n) => d(t * n, e),
                        pow: (e, t) => y(l, e, t),
                        div: (t, n) => d(t * h(n, e), e),
                        sqrN: e => e * e,
                        addN: (e, t) => e + t,
                        subN: (e, t) => e - t,
                        mulN: (e, t) => e * t,
                        inv: t => h(t, e),
                        sqrt: i.sqrt || (e => u(l, e)),
                        invertBatch: e => b(l, e),
                        cmov: (e, t, n) => (n ? t : e),
                        toBytes: e =>
                          n ? (0, r.numberToBytesLE)(e, c) : (0, r.numberToBytesBE)(e, c),
                        fromBytes: e => {
                          if (e.length !== c)
                            throw new Error(`Fp.fromBytes: expected ${c}, got ${e.length}`);
                          return n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e);
                        },
                      });
                    return Object.freeze(l);
                  }),
                  (n.FpSqrtOdd = function (e, t) {
                    if (!e.isOdd) throw new Error("Field doesn't have isOdd");
                    const n = e.sqrt(t);
                    return e.isOdd(n) ? n : e.neg(n);
                  }),
                  (n.FpSqrtEven = function (e, t) {
                    if (!e.isOdd) throw new Error("Field doesn't have isOdd");
                    const n = e.sqrt(t);
                    return e.isOdd(n) ? e.neg(n) : n;
                  }),
                  (n.hashToPrivateScalar = function (e, t, n = !1) {
                    const s = (e = (0, r.ensureBytes)('privateHash', e)).length,
                      i = w(t).nByteLength + 8;
                    if (i < 24 || s < i || s > 1024)
                      throw new Error(
                        `hashToPrivateScalar: expected ${i}-1024 bytes of input, got ${s}`
                      );
                    return d(n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e), t - o) + o;
                  }),
                  (n.getFieldBytesLength = v),
                  (n.getMinHashLength = _),
                  (n.mapHashToField = function (e, t, n = !1) {
                    const s = e.length,
                      i = v(t),
                      a = _(t);
                    if (s < 16 || s < a || s > 1024)
                      throw new Error(`expected ${a}-1024 bytes of input, got ${s}`);
                    const c =
                      d(n ? (0, r.bytesToNumberBE)(e) : (0, r.bytesToNumberLE)(e), t - o) + o;
                    return n ? (0, r.numberToBytesLE)(c, i) : (0, r.numberToBytesBE)(c, i);
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./utils.js'),
                  s = BigInt(0),
                  o = BigInt(1),
                  i = BigInt(2),
                  a = BigInt(3),
                  c = BigInt(4),
                  u = BigInt(5),
                  l = BigInt(8);
                BigInt(9), BigInt(16);
                function d(e, t) {
                  const n = e % t;
                  return n >= s ? n : t + n;
                }
                function f(e, t, n) {
                  if (n <= s || t < s) throw new Error('Expected power/modulo > 0');
                  if (n === o) return s;
                  let r = o;
                  for (; t > s; ) t & o && (r = (r * e) % n), (e = (e * e) % n), (t >>= o);
                  return r;
                }
                function h(e, t) {
                  if (e === s || t <= s)
                    throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                  let n = d(e, t),
                    r = t,
                    i = s,
                    a = o,
                    c = o,
                    u = s;
                  for (; n !== s; ) {
                    const e = r / n,
                      t = r % n,
                      s = i - c * e,
                      o = a - u * e;
                    (r = n), (n = t), (i = c), (a = u), (c = s), (u = o);
                  }
                  if (r !== o) throw new Error('invert: does not exist');
                  return d(i, t);
                }
                function p(e) {
                  const t = (e - o) / i;
                  let n, r, a;
                  for (n = e - o, r = 0; n % i === s; n /= i, r++);
                  for (a = i; a < e && f(a, t, e) !== e - o; a++);
                  if (1 === r) {
                    const t = (e + o) / c;
                    return function (e, n) {
                      const r = e.pow(n, t);
                      if (!e.eql(e.sqr(r), n)) throw new Error('Cannot find square root');
                      return r;
                    };
                  }
                  const u = (n + o) / i;
                  return function (e, s) {
                    if (e.pow(s, t) === e.neg(e.ONE)) throw new Error('Cannot find square root');
                    let i = r,
                      c = e.pow(e.mul(e.ONE, a), n),
                      l = e.pow(s, u),
                      d = e.pow(s, n);
                    for (; !e.eql(d, e.ONE); ) {
                      if (e.eql(d, e.ZERO)) return e.ZERO;
                      let t = 1;
                      for (let n = e.sqr(d); t < i && !e.eql(n, e.ONE); t++) n = e.sqr(n);
                      const n = e.pow(c, o << BigInt(i - t - 1));
                      (c = e.sqr(n)), (l = e.mul(l, n)), (d = e.mul(d, c)), (i = t);
                    }
                    return l;
                  };
                }
                function m(e) {
                  if (e % c === a) {
                    const t = (e + o) / c;
                    return function (e, n) {
                      const r = e.pow(n, t);
                      if (!e.eql(e.sqr(r), n)) throw new Error('Cannot find square root');
                      return r;
                    };
                  }
                  if (e % l === u) {
                    const t = (e - u) / l;
                    return function (e, n) {
                      const r = e.mul(n, i),
                        s = e.pow(r, t),
                        o = e.mul(n, s),
                        a = e.mul(e.mul(o, i), s),
                        c = e.mul(o, e.sub(a, e.ONE));
                      if (!e.eql(e.sqr(c), n)) throw new Error('Cannot find square root');
                      return c;
                    };
                  }
                  return p(e);
                }
                n.isNegativeLE = (e, t) => (d(e, t) & o) === o;
                const g = [
                  'create',
                  'isValid',
                  'is0',
                  'neg',
                  'inv',
                  'sqrt',
                  'sqr',
                  'eql',
                  'add',
                  'sub',
                  'mul',
                  'pow',
                  'div',
                  'addN',
                  'subN',
                  'mulN',
                  'sqrN',
                ];
                function y(e, t, n) {
                  if (n < s) throw new Error('Expected power > 0');
                  if (n === s) return e.ONE;
                  if (n === o) return t;
                  let r = e.ONE,
                    i = t;
                  for (; n > s; ) n & o && (r = e.mul(r, i)), (i = e.sqr(i)), (n >>= o);
                  return r;
                }
                function b(e, t) {
                  const n = new Array(t.length),
                    r = t.reduce((t, r, s) => (e.is0(r) ? t : ((n[s] = t), e.mul(t, r))), e.ONE),
                    s = e.inv(r);
                  return (
                    t.reduceRight(
                      (t, r, s) => (e.is0(r) ? t : ((n[s] = e.mul(t, n[s])), e.mul(t, r))),
                      s
                    ),
                    n
                  );
                }
                function w(e, t) {
                  const n = t !== undefined ? t : e.toString(2).length;
                  return { nBitLength: n, nByteLength: Math.ceil(n / 8) };
                }
                function v(e) {
                  if ('bigint' != typeof e) throw new Error('field order must be bigint');
                  const t = e.toString(2).length;
                  return Math.ceil(t / 8);
                }
                function _(e) {
                  const t = v(e);
                  return t + Math.ceil(t / 2);
                }
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/abstract/modular.js',
      },
    ],
    [
      3084,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.bitMask = void 0),
                  (n.isBytes = i),
                  (n.abytes = a),
                  (n.bytesToHex = u),
                  (n.numberToHexUnpadded = l),
                  (n.hexToNumber = d),
                  (n.hexToBytes = p),
                  (n.bytesToNumberBE = function (e) {
                    return d(u(e));
                  }),
                  (n.bytesToNumberLE = function (e) {
                    return a(e), d(u(Uint8Array.from(e).reverse()));
                  }),
                  (n.numberToBytesBE = m),
                  (n.numberToBytesLE = function (e, t) {
                    return m(e, t).reverse();
                  }),
                  (n.numberToVarBytesBE = function (e) {
                    return p(l(e));
                  }),
                  (n.ensureBytes = function (e, t, n) {
                    let r;
                    if ('string' == typeof t)
                      try {
                        r = p(t);
                      } catch (n) {
                        throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${n}`);
                      }
                    else {
                      if (!i(t)) throw new Error(`${e} must be hex string or Uint8Array`);
                      r = Uint8Array.from(t);
                    }
                    const s = r.length;
                    if ('number' == typeof n && s !== n)
                      throw new Error(`${e} expected ${n} bytes, got ${s}`);
                    return r;
                  }),
                  (n.concatBytes = g),
                  (n.equalBytes = function (e, t) {
                    if (e.length !== t.length) return !1;
                    let n = 0;
                    for (let r = 0; r < e.length; r++) n |= e[r] ^ t[r];
                    return 0 === n;
                  }),
                  (n.utf8ToBytes = function (e) {
                    if ('string' != typeof e)
                      throw new Error('utf8ToBytes expected string, got ' + typeof e);
                    return new Uint8Array(new TextEncoder().encode(e));
                  }),
                  (n.bitLen = function (e) {
                    let t;
                    for (t = 0; e > r; e >>= s, t += 1);
                    return t;
                  }),
                  (n.bitGet = function (e, t) {
                    return (e >> BigInt(t)) & s;
                  }),
                  (n.bitSet = function (e, t, n) {
                    return e | ((n ? s : r) << BigInt(t));
                  }),
                  (n.createHmacDrbg = function (e, t, n) {
                    if ('number' != typeof e || e < 2) throw new Error('hashLen must be a number');
                    if ('number' != typeof t || t < 2) throw new Error('qByteLen must be a number');
                    if ('function' != typeof n) throw new Error('hmacFn must be a function');
                    let r = y(e),
                      s = y(e),
                      o = 0;
                    const i = () => {
                        r.fill(1), s.fill(0), (o = 0);
                      },
                      a = (...e) => n(s, r, ...e),
                      c = (e = y()) => {
                        (s = a(b([0]), e)),
                          (r = a()),
                          0 !== e.length && ((s = a(b([1]), e)), (r = a()));
                      },
                      u = () => {
                        if (o++ >= 1e3) throw new Error('drbg: tried 1000 values');
                        let e = 0;
                        const n = [];
                        for (; e < t; ) {
                          r = a();
                          const t = r.slice();
                          n.push(t), (e += r.length);
                        }
                        return g(...n);
                      };
                    return (e, t) => {
                      i(), c(e);
                      let n = undefined;
                      for (; !(n = t(u())); ) c();
                      return i(), n;
                    };
                  }),
                  (n.validateObject = function (e, t, n = {}) {
                    const r = (t, n, r) => {
                      const s = w[n];
                      if ('function' != typeof s)
                        throw new Error(`Invalid validator "${n}", expected function`);
                      const o = e[t];
                      if (!((r && o === undefined) || s(o, e)))
                        throw new Error(
                          `Invalid param ${String(t)}=${o} (${typeof o}), expected ${n}`
                        );
                    };
                    for (const [e, n] of Object.entries(t)) r(e, n, !1);
                    for (const [e, t] of Object.entries(n)) r(e, t, !0);
                    return e;
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = BigInt(0),
                  s = BigInt(1),
                  o = BigInt(2);
                function i(e) {
                  return (
                    e instanceof Uint8Array ||
                    (null != e && 'object' == typeof e && 'Uint8Array' === e.constructor.name)
                  );
                }
                function a(e) {
                  if (!i(e)) throw new Error('Uint8Array expected');
                }
                const c = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                function u(e) {
                  a(e);
                  let t = '';
                  for (let n = 0; n < e.length; n++) t += c[e[n]];
                  return t;
                }
                function l(e) {
                  const t = e.toString(16);
                  return 1 & t.length ? `0${t}` : t;
                }
                function d(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  return BigInt('' === e ? '0' : `0x${e}`);
                }
                const f = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
                function h(e) {
                  return e >= f._0 && e <= f._9
                    ? e - f._0
                    : e >= f._A && e <= f._F
                      ? e - (f._A - 10)
                      : e >= f._a && e <= f._f
                        ? e - (f._a - 10)
                        : void 0;
                }
                function p(e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  const t = e.length,
                    n = t / 2;
                  if (t % 2)
                    throw new Error('padded hex string expected, got unpadded hex of length ' + t);
                  const r = new Uint8Array(n);
                  for (let t = 0, s = 0; t < n; t++, s += 2) {
                    const n = h(e.charCodeAt(s)),
                      o = h(e.charCodeAt(s + 1));
                    if (n === undefined || o === undefined) {
                      const t = e[s] + e[s + 1];
                      throw new Error(
                        'hex string expected, got non-hex character "' + t + '" at index ' + s
                      );
                    }
                    r[t] = 16 * n + o;
                  }
                  return r;
                }
                function m(e, t) {
                  return p(e.toString(16).padStart(2 * t, '0'));
                }
                function g(...e) {
                  let t = 0;
                  for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    a(r), (t += r.length);
                  }
                  const n = new Uint8Array(t);
                  for (let t = 0, r = 0; t < e.length; t++) {
                    const s = e[t];
                    n.set(s, r), (r += s.length);
                  }
                  return n;
                }
                n.bitMask = e => (o << BigInt(e - 1)) - s;
                const y = e => new Uint8Array(e),
                  b = e => Uint8Array.from(e);
                const w = {
                  bigint: e => 'bigint' == typeof e,
                  function: e => 'function' == typeof e,
                  boolean: e => 'boolean' == typeof e,
                  string: e => 'string' == typeof e,
                  stringOrUint8Array: e => 'string' == typeof e || i(e),
                  isSafeInteger: e => Number.isSafeInteger(e),
                  array: e => Array.isArray(e),
                  field: (e, t) => t.Fp.isValid(e),
                  hash: e => 'function' == typeof e && Number.isSafeInteger(e.outputLen),
                };
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/abstract/utils.js',
      },
    ],
    [
      3085,
      { './curve.js': 3081, './modular.js': 3083, './utils.js': 3084 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.DER = void 0),
                  (n.weierstrassPoints = p),
                  (n.weierstrass = function (e) {
                    const t = (function (e) {
                        const t = (0, r.validateBasic)(e);
                        return (
                          o.validateObject(
                            t,
                            { hash: 'hash', hmac: 'function', randomBytes: 'function' },
                            { bits2int: 'function', bits2int_modN: 'function', lowS: 'boolean' }
                          ),
                          Object.freeze({ lowS: !0, ...t })
                        );
                      })(e),
                      { Fp: a, n: c } = t,
                      d = a.BYTES + 1,
                      f = 2 * a.BYTES + 1;
                    function h(e) {
                      return s.mod(e, c);
                    }
                    function m(e) {
                      return s.invert(e, c);
                    }
                    const {
                        ProjectivePoint: g,
                        normPrivateKeyToScalar: y,
                        weierstrassEquation: b,
                        isWithinCurveOrder: w,
                      } = p({
                        ...t,
                        toBytes(e, t, n) {
                          const r = t.toAffine(),
                            s = a.toBytes(r.x),
                            i = o.concatBytes;
                          return n
                            ? i(Uint8Array.from([t.hasEvenY() ? 2 : 3]), s)
                            : i(Uint8Array.from([4]), s, a.toBytes(r.y));
                        },
                        fromBytes(e) {
                          const t = e.length,
                            n = e[0],
                            r = e.subarray(1);
                          if (t !== d || (2 !== n && 3 !== n)) {
                            if (t === f && 4 === n) {
                              return {
                                x: a.fromBytes(r.subarray(0, a.BYTES)),
                                y: a.fromBytes(r.subarray(a.BYTES, 2 * a.BYTES)),
                              };
                            }
                            throw new Error(
                              `Point of length ${t} was invalid. Expected ${d} compressed bytes or ${f} uncompressed bytes`
                            );
                          }
                          {
                            const e = o.bytesToNumberBE(r);
                            if (!(u < (s = e) && s < a.ORDER))
                              throw new Error('Point is not on curve');
                            const t = b(e);
                            let i;
                            try {
                              i = a.sqrt(t);
                            } catch (e) {
                              const t = e instanceof Error ? ': ' + e.message : '';
                              throw new Error('Point is not on curve' + t);
                            }
                            return !(1 & ~n) !== ((i & l) === l) && (i = a.neg(i)), { x: e, y: i };
                          }
                          var s;
                        },
                      }),
                      v = e => o.bytesToHex(o.numberToBytesBE(e, t.nByteLength));
                    function _(e) {
                      return e > c >> l;
                    }
                    const E = (e, t, n) => o.bytesToNumberBE(e.slice(t, n));
                    class S {
                      constructor(e, t, n) {
                        (this.r = e), (this.s = t), (this.recovery = n), this.assertValidity();
                      }
                      static fromCompact(e) {
                        const n = t.nByteLength;
                        return (
                          (e = (0, i.ensureBytes)('compactSignature', e, 2 * n)),
                          new S(E(e, 0, n), E(e, n, 2 * n))
                        );
                      }
                      static fromDER(e) {
                        const { r: t, s: r } = n.DER.toSig((0, i.ensureBytes)('DER', e));
                        return new S(t, r);
                      }
                      assertValidity() {
                        if (!w(this.r)) throw new Error('r must be 0 < r < CURVE.n');
                        if (!w(this.s)) throw new Error('s must be 0 < s < CURVE.n');
                      }
                      addRecoveryBit(e) {
                        return new S(this.r, this.s, e);
                      }
                      recoverPublicKey(e) {
                        const { r: n, s: r, recovery: s } = this,
                          o = k((0, i.ensureBytes)('msgHash', e));
                        if (null == s || ![0, 1, 2, 3].includes(s))
                          throw new Error('recovery id invalid');
                        const c = 2 === s || 3 === s ? n + t.n : n;
                        if (c >= a.ORDER) throw new Error('recovery id 2 or 3 invalid');
                        const u = 1 & s ? '03' : '02',
                          l = g.fromHex(u + v(c)),
                          d = m(c),
                          f = h(-o * d),
                          p = h(r * d),
                          y = g.BASE.multiplyAndAddUnsafe(l, f, p);
                        if (!y) throw new Error('point at infinify');
                        return y.assertValidity(), y;
                      }
                      hasHighS() {
                        return _(this.s);
                      }
                      normalizeS() {
                        return this.hasHighS() ? new S(this.r, h(-this.s), this.recovery) : this;
                      }
                      toDERRawBytes() {
                        return o.hexToBytes(this.toDERHex());
                      }
                      toDERHex() {
                        return n.DER.hexFromSig({ r: this.r, s: this.s });
                      }
                      toCompactRawBytes() {
                        return o.hexToBytes(this.toCompactHex());
                      }
                      toCompactHex() {
                        return v(this.r) + v(this.s);
                      }
                    }
                    const x = {
                      isValidPrivateKey(e) {
                        try {
                          return y(e), !0;
                        } catch (e) {
                          return !1;
                        }
                      },
                      normPrivateKeyToScalar: y,
                      randomPrivateKey: () => {
                        const e = s.getMinHashLength(t.n);
                        return s.mapHashToField(t.randomBytes(e), t.n);
                      },
                      precompute: (e = 8, t = g.BASE) => (
                        t._setWindowSize(e), t.multiply(BigInt(3)), t
                      ),
                    };
                    function T(e) {
                      const t = o.isBytes(e),
                        n = 'string' == typeof e,
                        r = (t || n) && e.length;
                      return t
                        ? r === d || r === f
                        : n
                          ? r === 2 * d || r === 2 * f
                          : e instanceof g;
                    }
                    const I =
                        t.bits2int ||
                        function (e) {
                          const n = o.bytesToNumberBE(e),
                            r = 8 * e.length - t.nBitLength;
                          return r > 0 ? n >> BigInt(r) : n;
                        },
                      k =
                        t.bits2int_modN ||
                        function (e) {
                          return h(I(e));
                        },
                      A = o.bitMask(t.nBitLength);
                    function C(e) {
                      if ('bigint' != typeof e) throw new Error('bigint expected');
                      if (!(u <= e && e < A))
                        throw new Error(`bigint expected < 2^${t.nBitLength}`);
                      return o.numberToBytesBE(e, t.nByteLength);
                    }
                    function B(e, n, r = O) {
                      if (['recovered', 'canonical'].some(e => e in r))
                        throw new Error('sign() legacy options not supported');
                      const { hash: s, randomBytes: c } = t;
                      let { lowS: d, prehash: f, extraEntropy: p } = r;
                      null == d && (d = !0),
                        (e = (0, i.ensureBytes)('msgHash', e)),
                        f && (e = (0, i.ensureBytes)('prehashed msgHash', s(e)));
                      const b = k(e),
                        v = y(n),
                        E = [C(v), C(b)];
                      if (null != p && !1 !== p) {
                        const e = !0 === p ? c(a.BYTES) : p;
                        E.push((0, i.ensureBytes)('extraEntropy', e));
                      }
                      const x = o.concatBytes(...E),
                        T = b;
                      return {
                        seed: x,
                        k2sig: function (e) {
                          const t = I(e);
                          if (!w(t)) return;
                          const n = m(t),
                            r = g.BASE.multiply(t).toAffine(),
                            s = h(r.x);
                          if (s === u) return;
                          const o = h(n * h(T + s * v));
                          if (o === u) return;
                          let i = (r.x === s ? 0 : 2) | Number(r.y & l),
                            a = o;
                          return (
                            d &&
                              _(o) &&
                              ((a = (function (e) {
                                return _(e) ? h(-e) : e;
                              })(o)),
                              (i ^= 1)),
                            new S(s, a, i)
                          );
                        },
                      };
                    }
                    const O = { lowS: t.lowS, prehash: !1 },
                      j = { lowS: t.lowS, prehash: !1 };
                    return (
                      g.BASE._setWindowSize(8),
                      {
                        CURVE: t,
                        getPublicKey: function (e, t = !0) {
                          return g.fromPrivateKey(e).toRawBytes(t);
                        },
                        getSharedSecret: function (e, t, n = !0) {
                          if (T(e)) throw new Error('first arg must be private key');
                          if (!T(t)) throw new Error('second arg must be public key');
                          return g.fromHex(t).multiply(y(e)).toRawBytes(n);
                        },
                        sign: function (e, n, r = O) {
                          const { seed: s, k2sig: i } = B(e, n, r),
                            a = t;
                          return o.createHmacDrbg(a.hash.outputLen, a.nByteLength, a.hmac)(s, i);
                        },
                        verify: function (e, r, s, a = j) {
                          const c = e;
                          if (
                            ((r = (0, i.ensureBytes)('msgHash', r)),
                            (s = (0, i.ensureBytes)('publicKey', s)),
                            'strict' in a)
                          )
                            throw new Error('options.strict was renamed to lowS');
                          const { lowS: u, prehash: l } = a;
                          let d,
                            f = undefined;
                          try {
                            if ('string' == typeof c || o.isBytes(c))
                              try {
                                f = S.fromDER(c);
                              } catch (e) {
                                if (!(e instanceof n.DER.Err)) throw e;
                                f = S.fromCompact(c);
                              }
                            else {
                              if (
                                'object' != typeof c ||
                                'bigint' != typeof c.r ||
                                'bigint' != typeof c.s
                              )
                                throw new Error('PARSE');
                              {
                                const { r: e, s: t } = c;
                                f = new S(e, t);
                              }
                            }
                            d = g.fromHex(s);
                          } catch (e) {
                            if ('PARSE' === e.message)
                              throw new Error(
                                'signature must be Signature instance, Uint8Array or hex string'
                              );
                            return !1;
                          }
                          if (u && f.hasHighS()) return !1;
                          l && (r = t.hash(r));
                          const { r: p, s: y } = f,
                            b = k(r),
                            w = m(y),
                            v = h(b * w),
                            _ = h(p * w),
                            E = g.BASE.multiplyAndAddUnsafe(d, v, _)?.toAffine();
                          if (!E) return !1;
                          return h(E.x) === p;
                        },
                        ProjectivePoint: g,
                        Signature: S,
                        utils: x,
                      }
                    );
                  }),
                  (n.SWUFpSqrtRatio = m),
                  (n.mapToCurveSimpleSWU = function (e, t) {
                    if ((s.validateField(e), !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z)))
                      throw new Error('mapToCurveSimpleSWU: invalid opts');
                    const n = m(e, t.Z);
                    if (!e.isOdd) throw new Error('Fp.isOdd is not implemented!');
                    return r => {
                      let s, o, i, a, c, u, l, d;
                      (s = e.sqr(r)),
                        (s = e.mul(s, t.Z)),
                        (o = e.sqr(s)),
                        (o = e.add(o, s)),
                        (i = e.add(o, e.ONE)),
                        (i = e.mul(i, t.B)),
                        (a = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO))),
                        (a = e.mul(a, t.A)),
                        (o = e.sqr(i)),
                        (u = e.sqr(a)),
                        (c = e.mul(u, t.A)),
                        (o = e.add(o, c)),
                        (o = e.mul(o, i)),
                        (u = e.mul(u, a)),
                        (c = e.mul(u, t.B)),
                        (o = e.add(o, c)),
                        (l = e.mul(s, i));
                      const { isValid: f, value: h } = n(o, u);
                      (d = e.mul(s, r)),
                        (d = e.mul(d, h)),
                        (l = e.cmov(l, i, f)),
                        (d = e.cmov(d, h, f));
                      const p = e.isOdd(r) === e.isOdd(d);
                      return (d = e.cmov(e.neg(d), d, p)), (l = e.div(l, a)), { x: l, y: d };
                    };
                  });
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('./curve.js'),
                  s = e('./modular.js'),
                  o = e('./utils.js'),
                  i = e('./utils.js');
                const { bytesToNumberBE: a, hexToBytes: c } = o;
                n.DER = {
                  Err: class extends Error {
                    constructor(e = '') {
                      super(e);
                    }
                  },
                  _parseInt(e) {
                    const { Err: t } = n.DER;
                    if (e.length < 2 || 2 !== e[0]) throw new t('Invalid signature integer tag');
                    const r = e[1],
                      s = e.subarray(2, r + 2);
                    if (!r || s.length !== r)
                      throw new t('Invalid signature integer: wrong length');
                    if (128 & s[0]) throw new t('Invalid signature integer: negative');
                    if (0 === s[0] && !(128 & s[1]))
                      throw new t('Invalid signature integer: unnecessary leading zero');
                    return { d: a(s), l: e.subarray(r + 2) };
                  },
                  toSig(e) {
                    const { Err: t } = n.DER,
                      r = 'string' == typeof e ? c(e) : e;
                    o.abytes(r);
                    let s = r.length;
                    if (s < 2 || 48 != r[0]) throw new t('Invalid signature tag');
                    if (r[1] !== s - 2) throw new t('Invalid signature: incorrect length');
                    const { d: i, l: a } = n.DER._parseInt(r.subarray(2)),
                      { d: u, l: l } = n.DER._parseInt(a);
                    if (l.length) throw new t('Invalid signature: left bytes after parsing');
                    return { r: i, s: u };
                  },
                  hexFromSig(e) {
                    const t = e => (8 & Number.parseInt(e[0], 16) ? '00' + e : e),
                      n = e => {
                        const t = e.toString(16);
                        return 1 & t.length ? `0${t}` : t;
                      },
                      r = t(n(e.s)),
                      s = t(n(e.r)),
                      o = r.length / 2,
                      i = s.length / 2,
                      a = n(o),
                      c = n(i);
                    return `30${n(i + o + 4)}02${c}${s}02${a}${r}`;
                  },
                };
                const u = BigInt(0),
                  l = BigInt(1),
                  d = BigInt(2),
                  f = BigInt(3),
                  h = BigInt(4);
                function p(e) {
                  const t = (function (e) {
                      const t = (0, r.validateBasic)(e);
                      o.validateObject(
                        t,
                        { a: 'field', b: 'field' },
                        {
                          allowedPrivateKeyLengths: 'array',
                          wrapPrivateKey: 'boolean',
                          isTorsionFree: 'function',
                          clearCofactor: 'function',
                          allowInfinityPoint: 'boolean',
                          fromBytes: 'function',
                          toBytes: 'function',
                        }
                      );
                      const { endo: n, Fp: s, a: i } = t;
                      if (n) {
                        if (!s.eql(i, s.ZERO))
                          throw new Error(
                            'Endomorphism can only be defined for Koblitz curves that have a=0'
                          );
                        if (
                          'object' != typeof n ||
                          'bigint' != typeof n.beta ||
                          'function' != typeof n.splitScalar
                        )
                          throw new Error(
                            'Expected endomorphism with beta: bigint and splitScalar: function'
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: n } = t,
                    a =
                      t.toBytes ||
                      ((e, t, r) => {
                        const s = t.toAffine();
                        return o.concatBytes(Uint8Array.from([4]), n.toBytes(s.x), n.toBytes(s.y));
                      }),
                    c =
                      t.fromBytes ||
                      (e => {
                        const t = e.subarray(1);
                        return {
                          x: n.fromBytes(t.subarray(0, n.BYTES)),
                          y: n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES)),
                        };
                      });
                  function d(e) {
                    const { a: r, b: s } = t,
                      o = n.sqr(e),
                      i = n.mul(o, e);
                    return n.add(n.add(i, n.mul(e, r)), s);
                  }
                  if (!n.eql(n.sqr(t.Gy), d(t.Gx)))
                    throw new Error('bad generator point: equation left != right');
                  function h(e) {
                    return 'bigint' == typeof e && u < e && e < t.n;
                  }
                  function p(e) {
                    if (!h(e)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');
                  }
                  function m(e) {
                    const {
                      allowedPrivateKeyLengths: n,
                      nByteLength: r,
                      wrapPrivateKey: a,
                      n: c,
                    } = t;
                    if (n && 'bigint' != typeof e) {
                      if (
                        (o.isBytes(e) && (e = o.bytesToHex(e)),
                        'string' != typeof e || !n.includes(e.length))
                      )
                        throw new Error('Invalid key');
                      e = e.padStart(2 * r, '0');
                    }
                    let u;
                    try {
                      u =
                        'bigint' == typeof e
                          ? e
                          : o.bytesToNumberBE((0, i.ensureBytes)('private key', e, r));
                    } catch (t) {
                      throw new Error(
                        `private key must be ${r} bytes, hex or bigint, not ${typeof e}`
                      );
                    }
                    return a && (u = s.mod(u, c)), p(u), u;
                  }
                  const g = new Map();
                  function y(e) {
                    if (!(e instanceof b)) throw new Error('ProjectivePoint expected');
                  }
                  class b {
                    constructor(e, t, r) {
                      if (((this.px = e), (this.py = t), (this.pz = r), null == e || !n.isValid(e)))
                        throw new Error('x required');
                      if (null == t || !n.isValid(t)) throw new Error('y required');
                      if (null == r || !n.isValid(r)) throw new Error('z required');
                    }
                    static fromAffine(e) {
                      const { x: t, y: r } = e || {};
                      if (!e || !n.isValid(t) || !n.isValid(r))
                        throw new Error('invalid affine point');
                      if (e instanceof b) throw new Error('projective point not allowed');
                      const s = e => n.eql(e, n.ZERO);
                      return s(t) && s(r) ? b.ZERO : new b(t, r, n.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      const t = n.invertBatch(e.map(e => e.pz));
                      return e.map((e, n) => e.toAffine(t[n])).map(b.fromAffine);
                    }
                    static fromHex(e) {
                      const t = b.fromAffine(c((0, i.ensureBytes)('pointHex', e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return b.BASE.multiply(m(e));
                    }
                    _setWindowSize(e) {
                      (this._WINDOW_SIZE = e), g.delete(this);
                    }
                    assertValidity() {
                      if (this.is0()) {
                        if (t.allowInfinityPoint && !n.is0(this.py)) return;
                        throw new Error('bad point: ZERO');
                      }
                      const { x: e, y: r } = this.toAffine();
                      if (!n.isValid(e) || !n.isValid(r))
                        throw new Error('bad point: x or y not FE');
                      const s = n.sqr(r),
                        o = d(e);
                      if (!n.eql(s, o)) throw new Error('bad point: equation left != right');
                      if (!this.isTorsionFree())
                        throw new Error('bad point: not in prime-order subgroup');
                    }
                    hasEvenY() {
                      const { y: e } = this.toAffine();
                      if (n.isOdd) return !n.isOdd(e);
                      throw new Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      y(e);
                      const { px: t, py: r, pz: s } = this,
                        { px: o, py: i, pz: a } = e,
                        c = n.eql(n.mul(t, a), n.mul(o, s)),
                        u = n.eql(n.mul(r, a), n.mul(i, s));
                      return c && u;
                    }
                    negate() {
                      return new b(this.px, n.neg(this.py), this.pz);
                    }
                    double() {
                      const { a: e, b: r } = t,
                        s = n.mul(r, f),
                        { px: o, py: i, pz: a } = this;
                      let c = n.ZERO,
                        u = n.ZERO,
                        l = n.ZERO,
                        d = n.mul(o, o),
                        h = n.mul(i, i),
                        p = n.mul(a, a),
                        m = n.mul(o, i);
                      return (
                        (m = n.add(m, m)),
                        (l = n.mul(o, a)),
                        (l = n.add(l, l)),
                        (c = n.mul(e, l)),
                        (u = n.mul(s, p)),
                        (u = n.add(c, u)),
                        (c = n.sub(h, u)),
                        (u = n.add(h, u)),
                        (u = n.mul(c, u)),
                        (c = n.mul(m, c)),
                        (l = n.mul(s, l)),
                        (p = n.mul(e, p)),
                        (m = n.sub(d, p)),
                        (m = n.mul(e, m)),
                        (m = n.add(m, l)),
                        (l = n.add(d, d)),
                        (d = n.add(l, d)),
                        (d = n.add(d, p)),
                        (d = n.mul(d, m)),
                        (u = n.add(u, d)),
                        (p = n.mul(i, a)),
                        (p = n.add(p, p)),
                        (d = n.mul(p, m)),
                        (c = n.sub(c, d)),
                        (l = n.mul(p, h)),
                        (l = n.add(l, l)),
                        (l = n.add(l, l)),
                        new b(c, u, l)
                      );
                    }
                    add(e) {
                      y(e);
                      const { px: r, py: s, pz: o } = this,
                        { px: i, py: a, pz: c } = e;
                      let u = n.ZERO,
                        l = n.ZERO,
                        d = n.ZERO;
                      const h = t.a,
                        p = n.mul(t.b, f);
                      let m = n.mul(r, i),
                        g = n.mul(s, a),
                        w = n.mul(o, c),
                        v = n.add(r, s),
                        _ = n.add(i, a);
                      (v = n.mul(v, _)), (_ = n.add(m, g)), (v = n.sub(v, _)), (_ = n.add(r, o));
                      let E = n.add(i, c);
                      return (
                        (_ = n.mul(_, E)),
                        (E = n.add(m, w)),
                        (_ = n.sub(_, E)),
                        (E = n.add(s, o)),
                        (u = n.add(a, c)),
                        (E = n.mul(E, u)),
                        (u = n.add(g, w)),
                        (E = n.sub(E, u)),
                        (d = n.mul(h, _)),
                        (u = n.mul(p, w)),
                        (d = n.add(u, d)),
                        (u = n.sub(g, d)),
                        (d = n.add(g, d)),
                        (l = n.mul(u, d)),
                        (g = n.add(m, m)),
                        (g = n.add(g, m)),
                        (w = n.mul(h, w)),
                        (_ = n.mul(p, _)),
                        (g = n.add(g, w)),
                        (w = n.sub(m, w)),
                        (w = n.mul(h, w)),
                        (_ = n.add(_, w)),
                        (m = n.mul(g, _)),
                        (l = n.add(l, m)),
                        (m = n.mul(E, _)),
                        (u = n.mul(v, u)),
                        (u = n.sub(u, m)),
                        (m = n.mul(v, g)),
                        (d = n.mul(E, d)),
                        (d = n.add(d, m)),
                        new b(u, l, d)
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(b.ZERO);
                    }
                    wNAF(e) {
                      return v.wNAFCached(this, g, e, e => {
                        const t = n.invertBatch(e.map(e => e.pz));
                        return e.map((e, n) => e.toAffine(t[n])).map(b.fromAffine);
                      });
                    }
                    multiplyUnsafe(e) {
                      const r = b.ZERO;
                      if (e === u) return r;
                      if ((p(e), e === l)) return this;
                      const { endo: s } = t;
                      if (!s) return v.unsafeLadder(this, e);
                      let { k1neg: o, k1: i, k2neg: a, k2: c } = s.splitScalar(e),
                        d = r,
                        f = r,
                        h = this;
                      for (; i > u || c > u; )
                        i & l && (d = d.add(h)),
                          c & l && (f = f.add(h)),
                          (h = h.double()),
                          (i >>= l),
                          (c >>= l);
                      return (
                        o && (d = d.negate()),
                        a && (f = f.negate()),
                        (f = new b(n.mul(f.px, s.beta), f.py, f.pz)),
                        d.add(f)
                      );
                    }
                    multiply(e) {
                      p(e);
                      let r,
                        s,
                        o = e;
                      const { endo: i } = t;
                      if (i) {
                        const { k1neg: e, k1: t, k2neg: a, k2: c } = i.splitScalar(o);
                        let { p: u, f: l } = this.wNAF(t),
                          { p: d, f: f } = this.wNAF(c);
                        (u = v.constTimeNegate(e, u)),
                          (d = v.constTimeNegate(a, d)),
                          (d = new b(n.mul(d.px, i.beta), d.py, d.pz)),
                          (r = u.add(d)),
                          (s = l.add(f));
                      } else {
                        const { p: e, f: t } = this.wNAF(o);
                        (r = e), (s = t);
                      }
                      return b.normalizeZ([r, s])[0];
                    }
                    multiplyAndAddUnsafe(e, t, n) {
                      const r = b.BASE,
                        s = (e, t) =>
                          t !== u && t !== l && e.equals(r) ? e.multiply(t) : e.multiplyUnsafe(t),
                        o = s(this, t).add(s(e, n));
                      return o.is0() ? undefined : o;
                    }
                    toAffine(e) {
                      const { px: t, py: r, pz: s } = this,
                        o = this.is0();
                      null == e && (e = o ? n.ONE : n.inv(s));
                      const i = n.mul(t, e),
                        a = n.mul(r, e),
                        c = n.mul(s, e);
                      if (o) return { x: n.ZERO, y: n.ZERO };
                      if (!n.eql(c, n.ONE)) throw new Error('invZ was invalid');
                      return { x: i, y: a };
                    }
                    isTorsionFree() {
                      const { h: e, isTorsionFree: n } = t;
                      if (e === l) return !0;
                      if (n) return n(b, this);
                      throw new Error(
                        'isTorsionFree() has not been declared for the elliptic curve'
                      );
                    }
                    clearCofactor() {
                      const { h: e, clearCofactor: n } = t;
                      return e === l ? this : n ? n(b, this) : this.multiplyUnsafe(t.h);
                    }
                    toRawBytes(e = !0) {
                      return this.assertValidity(), a(b, this, e);
                    }
                    toHex(e = !0) {
                      return o.bytesToHex(this.toRawBytes(e));
                    }
                  }
                  (b.BASE = new b(t.Gx, t.Gy, n.ONE)), (b.ZERO = new b(n.ZERO, n.ONE, n.ZERO));
                  const w = t.nBitLength,
                    v = (0, r.wNAF)(b, t.endo ? Math.ceil(w / 2) : w);
                  return {
                    CURVE: t,
                    ProjectivePoint: b,
                    normPrivateKeyToScalar: m,
                    weierstrassEquation: d,
                    isWithinCurveOrder: h,
                  };
                }
                function m(e, t) {
                  const n = e.ORDER;
                  let r = u;
                  for (let e = n - l; e % d === u; e /= d) r += l;
                  const s = r,
                    o = d << (s - l - l),
                    i = o * d,
                    a = (n - l) / i,
                    c = (a - l) / d,
                    p = i - l,
                    m = o,
                    g = e.pow(t, a),
                    y = e.pow(t, (a + l) / d);
                  let b = (t, n) => {
                    let r = g,
                      o = e.pow(n, p),
                      i = e.sqr(o);
                    i = e.mul(i, n);
                    let a = e.mul(t, i);
                    (a = e.pow(a, c)), (a = e.mul(a, o)), (o = e.mul(a, n)), (i = e.mul(a, t));
                    let u = e.mul(i, o);
                    a = e.pow(u, m);
                    let f = e.eql(a, e.ONE);
                    (o = e.mul(i, y)),
                      (a = e.mul(u, r)),
                      (i = e.cmov(o, i, f)),
                      (u = e.cmov(a, u, f));
                    for (let t = s; t > l; t--) {
                      let n = t - d;
                      n = d << (n - l);
                      let s = e.pow(u, n);
                      const a = e.eql(s, e.ONE);
                      (o = e.mul(i, r)),
                        (r = e.mul(r, r)),
                        (s = e.mul(u, r)),
                        (i = e.cmov(o, i, a)),
                        (u = e.cmov(s, u, a));
                    }
                    return { isValid: f, value: i };
                  };
                  if (e.ORDER % h === f) {
                    const n = (e.ORDER - f) / h,
                      r = e.sqrt(e.neg(t));
                    b = (t, s) => {
                      let o = e.sqr(s);
                      const i = e.mul(t, s);
                      o = e.mul(o, i);
                      let a = e.pow(o, n);
                      a = e.mul(a, i);
                      const c = e.mul(a, r),
                        u = e.mul(e.sqr(a), s),
                        l = e.eql(u, t);
                      return { isValid: l, value: e.cmov(c, a, l) };
                    };
                  }
                  return b;
                }
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/abstract/weierstrass.js',
      },
    ],
    [
      3086,
      {
        './_shortw_utils.js': 3080,
        './abstract/hash-to-curve.js': 3082,
        './abstract/modular.js': 3083,
        './abstract/utils.js': 3084,
        './abstract/weierstrass.js': 3085,
        '@noble/hashes/sha256': 3093,
        '@noble/hashes/utils': 3095,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.encodeToCurve = n.hashToCurve = n.schnorr = n.secp256k1 = void 0);
                /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                const r = e('@noble/hashes/sha256'),
                  s = e('@noble/hashes/utils'),
                  o = e('./_shortw_utils.js'),
                  i = e('./abstract/hash-to-curve.js'),
                  a = e('./abstract/modular.js'),
                  c = e('./abstract/utils.js'),
                  u = e('./abstract/weierstrass.js'),
                  l = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),
                  d = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),
                  f = BigInt(1),
                  h = BigInt(2),
                  p = (e, t) => (e + t / h) / t;
                function m(e) {
                  const t = l,
                    n = BigInt(3),
                    r = BigInt(6),
                    s = BigInt(11),
                    o = BigInt(22),
                    i = BigInt(23),
                    c = BigInt(44),
                    u = BigInt(88),
                    d = (e * e * e) % t,
                    f = (d * d * e) % t,
                    p = ((0, a.pow2)(f, n, t) * f) % t,
                    m = ((0, a.pow2)(p, n, t) * f) % t,
                    y = ((0, a.pow2)(m, h, t) * d) % t,
                    b = ((0, a.pow2)(y, s, t) * y) % t,
                    w = ((0, a.pow2)(b, o, t) * b) % t,
                    v = ((0, a.pow2)(w, c, t) * w) % t,
                    _ = ((0, a.pow2)(v, u, t) * v) % t,
                    E = ((0, a.pow2)(_, c, t) * w) % t,
                    S = ((0, a.pow2)(E, n, t) * f) % t,
                    x = ((0, a.pow2)(S, i, t) * b) % t,
                    T = ((0, a.pow2)(x, r, t) * d) % t,
                    I = (0, a.pow2)(T, h, t);
                  if (!g.eql(g.sqr(I), e)) throw new Error('Cannot find square root');
                  return I;
                }
                const g = (0, a.Field)(l, undefined, undefined, { sqrt: m });
                n.secp256k1 = (0, o.createCurve)(
                  {
                    a: BigInt(0),
                    b: BigInt(7),
                    Fp: g,
                    n: d,
                    Gx: BigInt(
                      '55066263022277343669578718895168534326250603453777594175500187360389116729240'
                    ),
                    Gy: BigInt(
                      '32670510020758816978083085130507043184471273380659243275938904335757337482424'
                    ),
                    h: BigInt(1),
                    lowS: !0,
                    endo: {
                      beta: BigInt(
                        '0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'
                      ),
                      splitScalar: e => {
                        const t = d,
                          n = BigInt('0x3086d221a7d46bcde86c90e49284eb15'),
                          r = -f * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),
                          s = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),
                          o = n,
                          i = BigInt('0x100000000000000000000000000000000'),
                          c = p(o * e, t),
                          u = p(-r * e, t);
                        let l = (0, a.mod)(e - c * n - u * s, t),
                          h = (0, a.mod)(-c * r - u * o, t);
                        const m = l > i,
                          g = h > i;
                        if ((m && (l = t - l), g && (h = t - h), l > i || h > i))
                          throw new Error('splitScalar: Endomorphism failed, k=' + e);
                        return { k1neg: m, k1: l, k2neg: g, k2: h };
                      },
                    },
                  },
                  r.sha256
                );
                const y = BigInt(0),
                  b = e => 'bigint' == typeof e && y < e && e < l,
                  w = e => 'bigint' == typeof e && y < e && e < d,
                  v = {};
                function _(e, ...t) {
                  let n = v[e];
                  if (n === undefined) {
                    const t = (0, r.sha256)(Uint8Array.from(e, e => e.charCodeAt(0)));
                    (n = (0, c.concatBytes)(t, t)), (v[e] = n);
                  }
                  return (0, r.sha256)((0, c.concatBytes)(n, ...t));
                }
                const E = e => e.toRawBytes(!0).slice(1),
                  S = e => (0, c.numberToBytesBE)(e, 32),
                  x = e => (0, a.mod)(e, l),
                  T = e => (0, a.mod)(e, d),
                  I = n.secp256k1.ProjectivePoint,
                  k = (e, t, n) => I.BASE.multiplyAndAddUnsafe(e, t, n);
                function A(e) {
                  let t = n.secp256k1.utils.normPrivateKeyToScalar(e),
                    r = I.fromPrivateKey(t);
                  return { scalar: r.hasEvenY() ? t : T(-t), bytes: E(r) };
                }
                function C(e) {
                  if (!b(e)) throw new Error('bad x: need 0 < x < p');
                  const t = x(e * e);
                  let n = m(x(t * e + BigInt(7)));
                  n % h !== y && (n = x(-n));
                  const r = new I(e, n, f);
                  return r.assertValidity(), r;
                }
                function B(...e) {
                  return T((0, c.bytesToNumberBE)(_('BIP0340/challenge', ...e)));
                }
                function O(e) {
                  return A(e).bytes;
                }
                function j(e, t, n = (0, s.randomBytes)(32)) {
                  const r = (0, c.ensureBytes)('message', e),
                    { bytes: o, scalar: i } = A(t),
                    a = (0, c.ensureBytes)('auxRand', n, 32),
                    u = S(i ^ (0, c.bytesToNumberBE)(_('BIP0340/aux', a))),
                    l = _('BIP0340/nonce', u, o, r),
                    d = T((0, c.bytesToNumberBE)(l));
                  if (d === y) throw new Error('sign failed: k is zero');
                  const { bytes: f, scalar: h } = A(d),
                    p = B(f, o, r),
                    m = new Uint8Array(64);
                  if ((m.set(f, 0), m.set(S(T(h + p * i)), 32), !R(m, r, o)))
                    throw new Error('sign: Invalid signature produced');
                  return m;
                }
                function R(e, t, n) {
                  const r = (0, c.ensureBytes)('signature', e, 64),
                    s = (0, c.ensureBytes)('message', t),
                    o = (0, c.ensureBytes)('publicKey', n, 32);
                  try {
                    const e = C((0, c.bytesToNumberBE)(o)),
                      t = (0, c.bytesToNumberBE)(r.subarray(0, 32));
                    if (!b(t)) return !1;
                    const n = (0, c.bytesToNumberBE)(r.subarray(32, 64));
                    if (!w(n)) return !1;
                    const i = B(S(t), E(e), s),
                      a = k(e, n, T(-i));
                    return !(!a || !a.hasEvenY() || a.toAffine().x !== t);
                  } catch (e) {
                    return !1;
                  }
                }
                n.schnorr = {
                  getPublicKey: O,
                  sign: j,
                  verify: R,
                  utils: {
                    randomPrivateKey: n.secp256k1.utils.randomPrivateKey,
                    lift_x: C,
                    pointToBytes: E,
                    numberToBytesBE: c.numberToBytesBE,
                    bytesToNumberBE: c.bytesToNumberBE,
                    taggedHash: _,
                    mod: a.mod,
                  },
                };
                const P = (() =>
                    (0, i.isogenyMap)(
                      g,
                      [
                        [
                          '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',
                          '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',
                          '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',
                          '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',
                        ],
                        [
                          '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',
                          '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',
                          '0x0000000000000000000000000000000000000000000000000000000000000001',
                        ],
                        [
                          '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',
                          '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',
                          '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',
                          '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',
                        ],
                        [
                          '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',
                          '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',
                          '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',
                          '0x0000000000000000000000000000000000000000000000000000000000000001',
                        ],
                      ].map(e => e.map(e => BigInt(e)))
                    ))(),
                  N = (() =>
                    (0, u.mapToCurveSimpleSWU)(g, {
                      A: BigInt(
                        '0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'
                      ),
                      B: BigInt('1771'),
                      Z: g.create(BigInt('-11')),
                    }))(),
                  L = (() =>
                    (0, i.createHasher)(
                      n.secp256k1.ProjectivePoint,
                      e => {
                        const { x: t, y: n } = N(g.create(e[0]));
                        return P(t, n);
                      },
                      {
                        DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',
                        encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',
                        p: g.ORDER,
                        m: 1,
                        k: 128,
                        expand: 'xmd',
                        hash: r.sha256,
                      }
                    ))();
                (n.hashToCurve = L.hashToCurve), (n.encodeToCurve = L.encodeToCurve);
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/curves',
        file: 'node_modules/@scure/bip32/node_modules/@noble/curves/secp256k1.js',
      },
    ],
    [
      3087,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  if (!Number.isSafeInteger(e) || e < 0)
                    throw new Error(`positive integer expected, not ${e}`);
                }
                function s(e) {
                  if ('boolean' != typeof e) throw new Error(`boolean expected, not ${e}`);
                }
                function o(e) {
                  return (
                    e instanceof Uint8Array ||
                    (null != e && 'object' == typeof e && 'Uint8Array' === e.constructor.name)
                  );
                }
                function i(e, ...t) {
                  if (!o(e)) throw new Error('Uint8Array expected');
                  if (t.length > 0 && !t.includes(e.length))
                    throw new Error(
                      `Uint8Array expected of length ${t}, not of length=${e.length}`
                    );
                }
                function a(e) {
                  if ('function' != typeof e || 'function' != typeof e.create)
                    throw new Error('Hash should be wrapped by utils.wrapConstructor');
                  r(e.outputLen), r(e.blockLen);
                }
                function c(e, t = !0) {
                  if (e.destroyed) throw new Error('Hash instance has been destroyed');
                  if (t && e.finished) throw new Error('Hash#digest() has already been called');
                }
                function u(e, t) {
                  i(e);
                  const n = t.outputLen;
                  if (e.length < n)
                    throw new Error(`digestInto() expects output buffer of length at least ${n}`);
                }
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.output = n.exists = n.hash = n.bytes = n.bool = n.number = n.isBytes = void 0),
                  (n.number = r),
                  (n.bool = s),
                  (n.isBytes = o),
                  (n.bytes = i),
                  (n.hash = a),
                  (n.exists = c),
                  (n.output = u);
                const l = { number: r, bool: s, bytes: i, hash: a, exists: c, output: u };
                n.default = l;
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/_assert.js',
      },
    ],
    [
      3088,
      { './_assert.js': 3087, './utils.js': 3095 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.HashMD = n.Maj = n.Chi = void 0);
                const r = e('./_assert.js'),
                  s = e('./utils.js');
                n.Chi = (e, t, n) => (e & t) ^ (~e & n);
                n.Maj = (e, t, n) => (e & t) ^ (e & n) ^ (t & n);
                class o extends s.Hash {
                  constructor(e, t, n, r) {
                    super(),
                      (this.blockLen = e),
                      (this.outputLen = t),
                      (this.padOffset = n),
                      (this.isLE = r),
                      (this.finished = !1),
                      (this.length = 0),
                      (this.pos = 0),
                      (this.destroyed = !1),
                      (this.buffer = new Uint8Array(e)),
                      (this.view = (0, s.createView)(this.buffer));
                  }
                  update(e) {
                    (0, r.exists)(this);
                    const { view: t, buffer: n, blockLen: o } = this,
                      i = (e = (0, s.toBytes)(e)).length;
                    for (let r = 0; r < i; ) {
                      const a = Math.min(o - this.pos, i - r);
                      if (a !== o)
                        n.set(e.subarray(r, r + a), this.pos),
                          (this.pos += a),
                          (r += a),
                          this.pos === o && (this.process(t, 0), (this.pos = 0));
                      else {
                        const t = (0, s.createView)(e);
                        for (; o <= i - r; r += o) this.process(t, r);
                      }
                    }
                    return (this.length += e.length), this.roundClean(), this;
                  }
                  digestInto(e) {
                    (0, r.exists)(this), (0, r.output)(e, this), (this.finished = !0);
                    const { buffer: t, view: n, blockLen: o, isLE: i } = this;
                    let { pos: a } = this;
                    (t[a++] = 128),
                      this.buffer.subarray(a).fill(0),
                      this.padOffset > o - a && (this.process(n, 0), (a = 0));
                    for (let e = a; e < o; e++) t[e] = 0;
                    !(function (e, t, n, r) {
                      if ('function' == typeof e.setBigUint64) return e.setBigUint64(t, n, r);
                      const s = BigInt(32),
                        o = BigInt(4294967295),
                        i = Number((n >> s) & o),
                        a = Number(n & o),
                        c = r ? 4 : 0,
                        u = r ? 0 : 4;
                      e.setUint32(t + c, i, r), e.setUint32(t + u, a, r);
                    })(n, o - 8, BigInt(8 * this.length), i),
                      this.process(n, 0);
                    const c = (0, s.createView)(e),
                      u = this.outputLen;
                    if (u % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');
                    const l = u / 4,
                      d = this.get();
                    if (l > d.length) throw new Error('_sha2: outputLen bigger than state');
                    for (let e = 0; e < l; e++) c.setUint32(4 * e, d[e], i);
                  }
                  digest() {
                    const { buffer: e, outputLen: t } = this;
                    this.digestInto(e);
                    const n = e.slice(0, t);
                    return this.destroy(), n;
                  }
                  _cloneInto(e) {
                    e || (e = new this.constructor()), e.set(...this.get());
                    const {
                      blockLen: t,
                      buffer: n,
                      length: r,
                      finished: s,
                      destroyed: o,
                      pos: i,
                    } = this;
                    return (
                      (e.length = r),
                      (e.pos = i),
                      (e.finished = s),
                      (e.destroyed = o),
                      r % t && e.buffer.set(n),
                      e
                    );
                  }
                }
                n.HashMD = o;
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/_md.js',
      },
    ],
    [
      3089,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.add5L =
                    n.add5H =
                    n.add4H =
                    n.add4L =
                    n.add3H =
                    n.add3L =
                    n.add =
                    n.rotlBL =
                    n.rotlBH =
                    n.rotlSL =
                    n.rotlSH =
                    n.rotr32L =
                    n.rotr32H =
                    n.rotrBL =
                    n.rotrBH =
                    n.rotrSL =
                    n.rotrSH =
                    n.shrSL =
                    n.shrSH =
                    n.toBig =
                    n.split =
                    n.fromBig =
                      void 0);
                const r = BigInt(2 ** 32 - 1),
                  s = BigInt(32);
                function o(e, t = !1) {
                  return t
                    ? { h: Number(e & r), l: Number((e >> s) & r) }
                    : { h: 0 | Number((e >> s) & r), l: 0 | Number(e & r) };
                }
                function i(e, t = !1) {
                  let n = new Uint32Array(e.length),
                    r = new Uint32Array(e.length);
                  for (let s = 0; s < e.length; s++) {
                    const { h: i, l: a } = o(e[s], t);
                    [n[s], r[s]] = [i, a];
                  }
                  return [n, r];
                }
                (n.fromBig = o), (n.split = i);
                const a = (e, t) => (BigInt(e >>> 0) << s) | BigInt(t >>> 0);
                n.toBig = a;
                const c = (e, t, n) => e >>> n;
                n.shrSH = c;
                const u = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.shrSL = u;
                const l = (e, t, n) => (e >>> n) | (t << (32 - n));
                n.rotrSH = l;
                const d = (e, t, n) => (e << (32 - n)) | (t >>> n);
                n.rotrSL = d;
                const f = (e, t, n) => (e << (64 - n)) | (t >>> (n - 32));
                n.rotrBH = f;
                const h = (e, t, n) => (e >>> (n - 32)) | (t << (64 - n));
                n.rotrBL = h;
                const p = (e, t) => t;
                n.rotr32H = p;
                const m = (e, t) => e;
                n.rotr32L = m;
                const g = (e, t, n) => (e << n) | (t >>> (32 - n));
                n.rotlSH = g;
                const y = (e, t, n) => (t << n) | (e >>> (32 - n));
                n.rotlSL = y;
                const b = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n));
                n.rotlBH = b;
                const w = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
                function v(e, t, n, r) {
                  const s = (t >>> 0) + (r >>> 0);
                  return { h: (e + n + ((s / 2 ** 32) | 0)) | 0, l: 0 | s };
                }
                (n.rotlBL = w), (n.add = v);
                const _ = (e, t, n) => (e >>> 0) + (t >>> 0) + (n >>> 0);
                n.add3L = _;
                const E = (e, t, n, r) => (t + n + r + ((e / 2 ** 32) | 0)) | 0;
                n.add3H = E;
                const S = (e, t, n, r) => (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0);
                n.add4L = S;
                const x = (e, t, n, r, s) => (t + n + r + s + ((e / 2 ** 32) | 0)) | 0;
                n.add4H = x;
                const T = (e, t, n, r, s) =>
                  (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0) + (s >>> 0);
                n.add5L = T;
                const I = (e, t, n, r, s, o) => (t + n + r + s + o + ((e / 2 ** 32) | 0)) | 0;
                n.add5H = I;
                const k = {
                  fromBig: o,
                  split: i,
                  toBig: a,
                  shrSH: c,
                  shrSL: u,
                  rotrSH: l,
                  rotrSL: d,
                  rotrBH: f,
                  rotrBL: h,
                  rotr32H: p,
                  rotr32L: m,
                  rotlSH: g,
                  rotlSL: y,
                  rotlBH: b,
                  rotlBL: w,
                  add: v,
                  add3L: _,
                  add3H: E,
                  add4L: S,
                  add4H: x,
                  add5H: I,
                  add5L: T,
                };
                n.default = k;
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/_u64.js',
      },
    ],
    [
      3090,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.crypto = void 0),
                  (n.crypto =
                    'object' == typeof globalThis && 'crypto' in globalThis
                      ? globalThis.crypto
                      : undefined);
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/crypto.js',
      },
    ],
    [
      3091,
      { './_assert.js': 3087, './utils.js': 3095 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }), (n.hmac = n.HMAC = void 0);
                const r = e('./_assert.js'),
                  s = e('./utils.js');
                class o extends s.Hash {
                  constructor(e, t) {
                    super(), (this.finished = !1), (this.destroyed = !1), (0, r.hash)(e);
                    const n = (0, s.toBytes)(t);
                    if (((this.iHash = e.create()), 'function' != typeof this.iHash.update))
                      throw new Error('Expected instance of class which extends utils.Hash');
                    (this.blockLen = this.iHash.blockLen), (this.outputLen = this.iHash.outputLen);
                    const o = this.blockLen,
                      i = new Uint8Array(o);
                    i.set(n.length > o ? e.create().update(n).digest() : n);
                    for (let e = 0; e < i.length; e++) i[e] ^= 54;
                    this.iHash.update(i), (this.oHash = e.create());
                    for (let e = 0; e < i.length; e++) i[e] ^= 106;
                    this.oHash.update(i), i.fill(0);
                  }
                  update(e) {
                    return (0, r.exists)(this), this.iHash.update(e), this;
                  }
                  digestInto(e) {
                    (0, r.exists)(this),
                      (0, r.bytes)(e, this.outputLen),
                      (this.finished = !0),
                      this.iHash.digestInto(e),
                      this.oHash.update(e),
                      this.oHash.digestInto(e),
                      this.destroy();
                  }
                  digest() {
                    const e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e;
                  }
                  _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    const {
                      oHash: t,
                      iHash: n,
                      finished: r,
                      destroyed: s,
                      blockLen: o,
                      outputLen: i,
                    } = this;
                    return (
                      (e.finished = r),
                      (e.destroyed = s),
                      (e.blockLen = o),
                      (e.outputLen = i),
                      (e.oHash = t._cloneInto(e.oHash)),
                      (e.iHash = n._cloneInto(e.iHash)),
                      e
                    );
                  }
                  destroy() {
                    (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
                  }
                }
                n.HMAC = o;
                (n.hmac = (e, t, n) => new o(e, t).update(n).digest()),
                  (n.hmac.create = (e, t) => new o(e, t));
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/hmac.js',
      },
    ],
    [
      3092,
      { './_md.js': 3088, './utils.js': 3095 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.ripemd160 = n.RIPEMD160 = void 0);
                const r = e('./_md.js'),
                  s = e('./utils.js'),
                  o = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
                  i = new Uint8Array(new Array(16).fill(0).map((e, t) => t));
                let a = [i],
                  c = [i.map(e => (9 * e + 5) % 16)];
                for (let e = 0; e < 4; e++) for (let t of [a, c]) t.push(t[e].map(e => o[e]));
                const u = [
                    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
                    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
                    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
                    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
                    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
                  ].map(e => new Uint8Array(e)),
                  l = a.map((e, t) => e.map(e => u[t][e])),
                  d = c.map((e, t) => e.map(e => u[t][e])),
                  f = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                  h = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]);
                function p(e, t, n, r) {
                  return 0 === e
                    ? t ^ n ^ r
                    : 1 === e
                      ? (t & n) | (~t & r)
                      : 2 === e
                        ? (t | ~n) ^ r
                        : 3 === e
                          ? (t & r) | (n & ~r)
                          : t ^ (n | ~r);
                }
                const m = new Uint32Array(16);
                class g extends r.HashMD {
                  constructor() {
                    super(64, 20, 8, !0),
                      (this.h0 = 1732584193),
                      (this.h1 = -271733879),
                      (this.h2 = -1732584194),
                      (this.h3 = 271733878),
                      (this.h4 = -1009589776);
                  }
                  get() {
                    const { h0: e, h1: t, h2: n, h3: r, h4: s } = this;
                    return [e, t, n, r, s];
                  }
                  set(e, t, n, r, s) {
                    (this.h0 = 0 | e),
                      (this.h1 = 0 | t),
                      (this.h2 = 0 | n),
                      (this.h3 = 0 | r),
                      (this.h4 = 0 | s);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) m[n] = e.getUint32(t, !0);
                    let n = 0 | this.h0,
                      r = n,
                      o = 0 | this.h1,
                      i = o,
                      u = 0 | this.h2,
                      g = u,
                      y = 0 | this.h3,
                      b = y,
                      w = 0 | this.h4,
                      v = w;
                    for (let e = 0; e < 5; e++) {
                      const t = 4 - e,
                        _ = f[e],
                        E = h[e],
                        S = a[e],
                        x = c[e],
                        T = l[e],
                        I = d[e];
                      for (let t = 0; t < 16; t++) {
                        const r = ((0, s.rotl)(n + p(e, o, u, y) + m[S[t]] + _, T[t]) + w) | 0;
                        (n = w), (w = y), (y = 0 | (0, s.rotl)(u, 10)), (u = o), (o = r);
                      }
                      for (let e = 0; e < 16; e++) {
                        const n = ((0, s.rotl)(r + p(t, i, g, b) + m[x[e]] + E, I[e]) + v) | 0;
                        (r = v), (v = b), (b = 0 | (0, s.rotl)(g, 10)), (g = i), (i = n);
                      }
                    }
                    this.set(
                      (this.h1 + u + b) | 0,
                      (this.h2 + y + v) | 0,
                      (this.h3 + w + r) | 0,
                      (this.h4 + n + i) | 0,
                      (this.h0 + o + g) | 0
                    );
                  }
                  roundClean() {
                    m.fill(0);
                  }
                  destroy() {
                    (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
                  }
                }
                (n.RIPEMD160 = g), (n.ripemd160 = (0, s.wrapConstructor)(() => new g()));
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/ripemd160.js',
      },
    ],
    [
      3093,
      { './_md.js': 3088, './utils.js': 3095 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha224 = n.sha256 = void 0);
                const r = e('./_md.js'),
                  s = e('./utils.js'),
                  o = new Uint32Array([
                    1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
                    2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
                    1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
                    264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882,
                    2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993,
                    338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051,
                    2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
                    3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556,
                    883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222,
                    2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
                    3329325298,
                  ]),
                  i = new Uint32Array([
                    1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924,
                    528734635, 1541459225,
                  ]),
                  a = new Uint32Array(64);
                class c extends r.HashMD {
                  constructor() {
                    super(64, 32, 8, !1),
                      (this.A = 0 | i[0]),
                      (this.B = 0 | i[1]),
                      (this.C = 0 | i[2]),
                      (this.D = 0 | i[3]),
                      (this.E = 0 | i[4]),
                      (this.F = 0 | i[5]),
                      (this.G = 0 | i[6]),
                      (this.H = 0 | i[7]);
                  }
                  get() {
                    const { A: e, B: t, C: n, D: r, E: s, F: o, G: i, H: a } = this;
                    return [e, t, n, r, s, o, i, a];
                  }
                  set(e, t, n, r, s, o, i, a) {
                    (this.A = 0 | e),
                      (this.B = 0 | t),
                      (this.C = 0 | n),
                      (this.D = 0 | r),
                      (this.E = 0 | s),
                      (this.F = 0 | o),
                      (this.G = 0 | i),
                      (this.H = 0 | a);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4) a[n] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                      const t = a[e - 15],
                        n = a[e - 2],
                        r = (0, s.rotr)(t, 7) ^ (0, s.rotr)(t, 18) ^ (t >>> 3),
                        o = (0, s.rotr)(n, 17) ^ (0, s.rotr)(n, 19) ^ (n >>> 10);
                      a[e] = (o + a[e - 7] + r + a[e - 16]) | 0;
                    }
                    let { A: n, B: i, C: c, D: u, E: l, F: d, G: f, H: h } = this;
                    for (let e = 0; e < 64; e++) {
                      const t =
                          (h +
                            ((0, s.rotr)(l, 6) ^ (0, s.rotr)(l, 11) ^ (0, s.rotr)(l, 25)) +
                            (0, r.Chi)(l, d, f) +
                            o[e] +
                            a[e]) |
                          0,
                        p =
                          (((0, s.rotr)(n, 2) ^ (0, s.rotr)(n, 13) ^ (0, s.rotr)(n, 22)) +
                            (0, r.Maj)(n, i, c)) |
                          0;
                      (h = f),
                        (f = d),
                        (d = l),
                        (l = (u + t) | 0),
                        (u = c),
                        (c = i),
                        (i = n),
                        (n = (t + p) | 0);
                    }
                    (n = (n + this.A) | 0),
                      (i = (i + this.B) | 0),
                      (c = (c + this.C) | 0),
                      (u = (u + this.D) | 0),
                      (l = (l + this.E) | 0),
                      (d = (d + this.F) | 0),
                      (f = (f + this.G) | 0),
                      (h = (h + this.H) | 0),
                      this.set(n, i, c, u, l, d, f, h);
                  }
                  roundClean() {
                    a.fill(0);
                  }
                  destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
                  }
                }
                class u extends c {
                  constructor() {
                    super(),
                      (this.A = -1056596264),
                      (this.B = 914150663),
                      (this.C = 812702999),
                      (this.D = -150054599),
                      (this.E = -4191439),
                      (this.F = 1750603025),
                      (this.G = 1694076839),
                      (this.H = -1090891868),
                      (this.outputLen = 28);
                  }
                }
                (n.sha256 = (0, s.wrapConstructor)(() => new c())),
                  (n.sha224 = (0, s.wrapConstructor)(() => new u()));
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/sha256.js',
      },
    ],
    [
      3094,
      { './_md.js': 3088, './_u64.js': 3089, './utils.js': 3095 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.sha384 = n.sha512_256 = n.sha512_224 = n.sha512 = n.SHA512 = void 0);
                const r = e('./_md.js'),
                  s = e('./_u64.js'),
                  o = e('./utils.js'),
                  [i, a] = (() =>
                    s.default.split(
                      [
                        '0x428a2f98d728ae22',
                        '0x7137449123ef65cd',
                        '0xb5c0fbcfec4d3b2f',
                        '0xe9b5dba58189dbbc',
                        '0x3956c25bf348b538',
                        '0x59f111f1b605d019',
                        '0x923f82a4af194f9b',
                        '0xab1c5ed5da6d8118',
                        '0xd807aa98a3030242',
                        '0x12835b0145706fbe',
                        '0x243185be4ee4b28c',
                        '0x550c7dc3d5ffb4e2',
                        '0x72be5d74f27b896f',
                        '0x80deb1fe3b1696b1',
                        '0x9bdc06a725c71235',
                        '0xc19bf174cf692694',
                        '0xe49b69c19ef14ad2',
                        '0xefbe4786384f25e3',
                        '0x0fc19dc68b8cd5b5',
                        '0x240ca1cc77ac9c65',
                        '0x2de92c6f592b0275',
                        '0x4a7484aa6ea6e483',
                        '0x5cb0a9dcbd41fbd4',
                        '0x76f988da831153b5',
                        '0x983e5152ee66dfab',
                        '0xa831c66d2db43210',
                        '0xb00327c898fb213f',
                        '0xbf597fc7beef0ee4',
                        '0xc6e00bf33da88fc2',
                        '0xd5a79147930aa725',
                        '0x06ca6351e003826f',
                        '0x142929670a0e6e70',
                        '0x27b70a8546d22ffc',
                        '0x2e1b21385c26c926',
                        '0x4d2c6dfc5ac42aed',
                        '0x53380d139d95b3df',
                        '0x650a73548baf63de',
                        '0x766a0abb3c77b2a8',
                        '0x81c2c92e47edaee6',
                        '0x92722c851482353b',
                        '0xa2bfe8a14cf10364',
                        '0xa81a664bbc423001',
                        '0xc24b8b70d0f89791',
                        '0xc76c51a30654be30',
                        '0xd192e819d6ef5218',
                        '0xd69906245565a910',
                        '0xf40e35855771202a',
                        '0x106aa07032bbd1b8',
                        '0x19a4c116b8d2d0c8',
                        '0x1e376c085141ab53',
                        '0x2748774cdf8eeb99',
                        '0x34b0bcb5e19b48a8',
                        '0x391c0cb3c5c95a63',
                        '0x4ed8aa4ae3418acb',
                        '0x5b9cca4f7763e373',
                        '0x682e6ff3d6b2b8a3',
                        '0x748f82ee5defb2fc',
                        '0x78a5636f43172f60',
                        '0x84c87814a1f0ab72',
                        '0x8cc702081a6439ec',
                        '0x90befffa23631e28',
                        '0xa4506cebde82bde9',
                        '0xbef9a3f7b2c67915',
                        '0xc67178f2e372532b',
                        '0xca273eceea26619c',
                        '0xd186b8c721c0c207',
                        '0xeada7dd6cde0eb1e',
                        '0xf57d4f7fee6ed178',
                        '0x06f067aa72176fba',
                        '0x0a637dc5a2c898a6',
                        '0x113f9804bef90dae',
                        '0x1b710b35131c471b',
                        '0x28db77f523047d84',
                        '0x32caab7b40c72493',
                        '0x3c9ebe0a15c9bebc',
                        '0x431d67c49c100d4c',
                        '0x4cc5d4becb3e42b6',
                        '0x597f299cfc657e2a',
                        '0x5fcb6fab3ad6faec',
                        '0x6c44198c4a475817',
                      ].map(e => BigInt(e))
                    ))(),
                  c = new Uint32Array(80),
                  u = new Uint32Array(80);
                class l extends r.HashMD {
                  constructor() {
                    super(128, 64, 16, !1),
                      (this.Ah = 1779033703),
                      (this.Al = -205731576),
                      (this.Bh = -1150833019),
                      (this.Bl = -2067093701),
                      (this.Ch = 1013904242),
                      (this.Cl = -23791573),
                      (this.Dh = -1521486534),
                      (this.Dl = 1595750129),
                      (this.Eh = 1359893119),
                      (this.El = -1377402159),
                      (this.Fh = -1694144372),
                      (this.Fl = 725511199),
                      (this.Gh = 528734635),
                      (this.Gl = -79577749),
                      (this.Hh = 1541459225),
                      (this.Hl = 327033209);
                  }
                  get() {
                    const {
                      Ah: e,
                      Al: t,
                      Bh: n,
                      Bl: r,
                      Ch: s,
                      Cl: o,
                      Dh: i,
                      Dl: a,
                      Eh: c,
                      El: u,
                      Fh: l,
                      Fl: d,
                      Gh: f,
                      Gl: h,
                      Hh: p,
                      Hl: m,
                    } = this;
                    return [e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m];
                  }
                  set(e, t, n, r, s, o, i, a, c, u, l, d, f, h, p, m) {
                    (this.Ah = 0 | e),
                      (this.Al = 0 | t),
                      (this.Bh = 0 | n),
                      (this.Bl = 0 | r),
                      (this.Ch = 0 | s),
                      (this.Cl = 0 | o),
                      (this.Dh = 0 | i),
                      (this.Dl = 0 | a),
                      (this.Eh = 0 | c),
                      (this.El = 0 | u),
                      (this.Fh = 0 | l),
                      (this.Fl = 0 | d),
                      (this.Gh = 0 | f),
                      (this.Gl = 0 | h),
                      (this.Hh = 0 | p),
                      (this.Hl = 0 | m);
                  }
                  process(e, t) {
                    for (let n = 0; n < 16; n++, t += 4)
                      (c[n] = e.getUint32(t)), (u[n] = e.getUint32((t += 4)));
                    for (let e = 16; e < 80; e++) {
                      const t = 0 | c[e - 15],
                        n = 0 | u[e - 15],
                        r =
                          s.default.rotrSH(t, n, 1) ^
                          s.default.rotrSH(t, n, 8) ^
                          s.default.shrSH(t, n, 7),
                        o =
                          s.default.rotrSL(t, n, 1) ^
                          s.default.rotrSL(t, n, 8) ^
                          s.default.shrSL(t, n, 7),
                        i = 0 | c[e - 2],
                        a = 0 | u[e - 2],
                        l =
                          s.default.rotrSH(i, a, 19) ^
                          s.default.rotrBH(i, a, 61) ^
                          s.default.shrSH(i, a, 6),
                        d =
                          s.default.rotrSL(i, a, 19) ^
                          s.default.rotrBL(i, a, 61) ^
                          s.default.shrSL(i, a, 6),
                        f = s.default.add4L(o, d, u[e - 7], u[e - 16]),
                        h = s.default.add4H(f, r, l, c[e - 7], c[e - 16]);
                      (c[e] = 0 | h), (u[e] = 0 | f);
                    }
                    let {
                      Ah: n,
                      Al: r,
                      Bh: o,
                      Bl: l,
                      Ch: d,
                      Cl: f,
                      Dh: h,
                      Dl: p,
                      Eh: m,
                      El: g,
                      Fh: y,
                      Fl: b,
                      Gh: w,
                      Gl: v,
                      Hh: _,
                      Hl: E,
                    } = this;
                    for (let e = 0; e < 80; e++) {
                      const t =
                          s.default.rotrSH(m, g, 14) ^
                          s.default.rotrSH(m, g, 18) ^
                          s.default.rotrBH(m, g, 41),
                        S =
                          s.default.rotrSL(m, g, 14) ^
                          s.default.rotrSL(m, g, 18) ^
                          s.default.rotrBL(m, g, 41),
                        x = (m & y) ^ (~m & w),
                        T = (g & b) ^ (~g & v),
                        I = s.default.add5L(E, S, T, a[e], u[e]),
                        k = s.default.add5H(I, _, t, x, i[e], c[e]),
                        A = 0 | I,
                        C =
                          s.default.rotrSH(n, r, 28) ^
                          s.default.rotrBH(n, r, 34) ^
                          s.default.rotrBH(n, r, 39),
                        B =
                          s.default.rotrSL(n, r, 28) ^
                          s.default.rotrBL(n, r, 34) ^
                          s.default.rotrBL(n, r, 39),
                        O = (n & o) ^ (n & d) ^ (o & d),
                        j = (r & l) ^ (r & f) ^ (l & f);
                      (_ = 0 | w),
                        (E = 0 | v),
                        (w = 0 | y),
                        (v = 0 | b),
                        (y = 0 | m),
                        (b = 0 | g),
                        ({ h: m, l: g } = s.default.add(0 | h, 0 | p, 0 | k, 0 | A)),
                        (h = 0 | d),
                        (p = 0 | f),
                        (d = 0 | o),
                        (f = 0 | l),
                        (o = 0 | n),
                        (l = 0 | r);
                      const R = s.default.add3L(A, B, j);
                      (n = s.default.add3H(R, k, C, O)), (r = 0 | R);
                    }
                    ({ h: n, l: r } = s.default.add(0 | this.Ah, 0 | this.Al, 0 | n, 0 | r)),
                      ({ h: o, l: l } = s.default.add(0 | this.Bh, 0 | this.Bl, 0 | o, 0 | l)),
                      ({ h: d, l: f } = s.default.add(0 | this.Ch, 0 | this.Cl, 0 | d, 0 | f)),
                      ({ h: h, l: p } = s.default.add(0 | this.Dh, 0 | this.Dl, 0 | h, 0 | p)),
                      ({ h: m, l: g } = s.default.add(0 | this.Eh, 0 | this.El, 0 | m, 0 | g)),
                      ({ h: y, l: b } = s.default.add(0 | this.Fh, 0 | this.Fl, 0 | y, 0 | b)),
                      ({ h: w, l: v } = s.default.add(0 | this.Gh, 0 | this.Gl, 0 | w, 0 | v)),
                      ({ h: _, l: E } = s.default.add(0 | this.Hh, 0 | this.Hl, 0 | _, 0 | E)),
                      this.set(n, r, o, l, d, f, h, p, m, g, y, b, w, v, _, E);
                  }
                  roundClean() {
                    c.fill(0), u.fill(0);
                  }
                  destroy() {
                    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                  }
                }
                n.SHA512 = l;
                class d extends l {
                  constructor() {
                    super(),
                      (this.Ah = -1942145080),
                      (this.Al = 424955298),
                      (this.Bh = 1944164710),
                      (this.Bl = -1982016298),
                      (this.Ch = 502970286),
                      (this.Cl = 855612546),
                      (this.Dh = 1738396948),
                      (this.Dl = 1479516111),
                      (this.Eh = 258812777),
                      (this.El = 2077511080),
                      (this.Fh = 2011393907),
                      (this.Fl = 79989058),
                      (this.Gh = 1067287976),
                      (this.Gl = 1780299464),
                      (this.Hh = 286451373),
                      (this.Hl = -1848208735),
                      (this.outputLen = 28);
                  }
                }
                class f extends l {
                  constructor() {
                    super(),
                      (this.Ah = 573645204),
                      (this.Al = -64227540),
                      (this.Bh = -1621794909),
                      (this.Bl = -934517566),
                      (this.Ch = 596883563),
                      (this.Cl = 1867755857),
                      (this.Dh = -1774684391),
                      (this.Dl = 1497426621),
                      (this.Eh = -1775747358),
                      (this.El = -1467023389),
                      (this.Fh = -1101128155),
                      (this.Fl = 1401305490),
                      (this.Gh = 721525244),
                      (this.Gl = 746961066),
                      (this.Hh = 246885852),
                      (this.Hl = -2117784414),
                      (this.outputLen = 32);
                  }
                }
                class h extends l {
                  constructor() {
                    super(),
                      (this.Ah = -876896931),
                      (this.Al = -1056596264),
                      (this.Bh = 1654270250),
                      (this.Bl = 914150663),
                      (this.Ch = -1856437926),
                      (this.Cl = 812702999),
                      (this.Dh = 355462360),
                      (this.Dl = -150054599),
                      (this.Eh = 1731405415),
                      (this.El = -4191439),
                      (this.Fh = -1900787065),
                      (this.Fl = 1750603025),
                      (this.Gh = -619958771),
                      (this.Gl = 1694076839),
                      (this.Hh = 1203062813),
                      (this.Hl = -1090891868),
                      (this.outputLen = 48);
                  }
                }
                (n.sha512 = (0, o.wrapConstructor)(() => new l())),
                  (n.sha512_224 = (0, o.wrapConstructor)(() => new d())),
                  (n.sha512_256 = (0, o.wrapConstructor)(() => new f())),
                  (n.sha384 = (0, o.wrapConstructor)(() => new h()));
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/sha512.js',
      },
    ],
    [
      3095,
      { './_assert.js': 3087, '@noble/hashes/crypto': 3090 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.randomBytes =
                    n.wrapXOFConstructorWithOpts =
                    n.wrapConstructorWithOpts =
                    n.wrapConstructor =
                    n.checkOpts =
                    n.Hash =
                    n.concatBytes =
                    n.toBytes =
                    n.utf8ToBytes =
                    n.asyncLoop =
                    n.nextTick =
                    n.hexToBytes =
                    n.bytesToHex =
                    n.byteSwap32 =
                    n.byteSwapIfBE =
                    n.byteSwap =
                    n.isLE =
                    n.rotl =
                    n.rotr =
                    n.createView =
                    n.u32 =
                    n.u8 =
                    n.isBytes =
                      void 0);
                const r = e('@noble/hashes/crypto'),
                  s = e('./_assert.js');
                n.isBytes = function (e) {
                  return (
                    e instanceof Uint8Array ||
                    (null != e && 'object' == typeof e && 'Uint8Array' === e.constructor.name)
                  );
                };
                n.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                n.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
                n.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength);
                n.rotr = (e, t) => (e << (32 - t)) | (e >>> t);
                (n.rotl = (e, t) => (e << t) | ((e >>> (32 - t)) >>> 0)),
                  (n.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]);
                (n.byteSwap = e =>
                  ((e << 24) & 4278190080) |
                  ((e << 8) & 16711680) |
                  ((e >>> 8) & 65280) |
                  ((e >>> 24) & 255)),
                  (n.byteSwapIfBE = n.isLE ? e => e : e => (0, n.byteSwap)(e)),
                  (n.byteSwap32 = function (e) {
                    for (let t = 0; t < e.length; t++) e[t] = (0, n.byteSwap)(e[t]);
                  });
                const o = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
                n.bytesToHex = function (e) {
                  (0, s.bytes)(e);
                  let t = '';
                  for (let n = 0; n < e.length; n++) t += o[e[n]];
                  return t;
                };
                const i = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
                function a(e) {
                  return e >= i._0 && e <= i._9
                    ? e - i._0
                    : e >= i._A && e <= i._F
                      ? e - (i._A - 10)
                      : e >= i._a && e <= i._f
                        ? e - (i._a - 10)
                        : void 0;
                }
                n.hexToBytes = function (e) {
                  if ('string' != typeof e) throw new Error('hex string expected, got ' + typeof e);
                  const t = e.length,
                    n = t / 2;
                  if (t % 2)
                    throw new Error('padded hex string expected, got unpadded hex of length ' + t);
                  const r = new Uint8Array(n);
                  for (let t = 0, s = 0; t < n; t++, s += 2) {
                    const n = a(e.charCodeAt(s)),
                      o = a(e.charCodeAt(s + 1));
                    if (n === undefined || o === undefined) {
                      const t = e[s] + e[s + 1];
                      throw new Error(
                        'hex string expected, got non-hex character "' + t + '" at index ' + s
                      );
                    }
                    r[t] = 16 * n + o;
                  }
                  return r;
                };
                function c(e) {
                  if ('string' != typeof e)
                    throw new Error('utf8ToBytes expected string, got ' + typeof e);
                  return new Uint8Array(new TextEncoder().encode(e));
                }
                function u(e) {
                  return 'string' == typeof e && (e = c(e)), (0, s.bytes)(e), e;
                }
                (n.nextTick = async () => {}),
                  (n.asyncLoop = async function (e, t, r) {
                    let s = Date.now();
                    for (let o = 0; o < e; o++) {
                      r(o);
                      const e = Date.now() - s;
                      (e >= 0 && e < t) || (await (0, n.nextTick)(), (s += e));
                    }
                  }),
                  (n.utf8ToBytes = c),
                  (n.toBytes = u),
                  (n.concatBytes = function (...e) {
                    let t = 0;
                    for (let n = 0; n < e.length; n++) {
                      const r = e[n];
                      (0, s.bytes)(r), (t += r.length);
                    }
                    const n = new Uint8Array(t);
                    for (let t = 0, r = 0; t < e.length; t++) {
                      const s = e[t];
                      n.set(s, r), (r += s.length);
                    }
                    return n;
                  });
                n.Hash = class {
                  clone() {
                    return this._cloneInto();
                  }
                };
                const l = {}.toString;
                (n.checkOpts = function (e, t) {
                  if (t !== undefined && '[object Object]' !== l.call(t))
                    throw new Error('Options should be object or undefined');
                  return Object.assign(e, t);
                }),
                  (n.wrapConstructor = function (e) {
                    const t = t => e().update(u(t)).digest(),
                      n = e();
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = () => e()),
                      t
                    );
                  }),
                  (n.wrapConstructorWithOpts = function (e) {
                    const t = (t, n) => e(n).update(u(t)).digest(),
                      n = e({});
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = t => e(t)),
                      t
                    );
                  }),
                  (n.wrapXOFConstructorWithOpts = function (e) {
                    const t = (t, n) => e(n).update(u(t)).digest(),
                      n = e({});
                    return (
                      (t.outputLen = n.outputLen),
                      (t.blockLen = n.blockLen),
                      (t.create = t => e(t)),
                      t
                    );
                  }),
                  (n.randomBytes = function (e = 32) {
                    if (r.crypto && 'function' == typeof r.crypto.getRandomValues)
                      return r.crypto.getRandomValues(new Uint8Array(e));
                    throw new Error('crypto.getRandomValues must be defined');
                  });
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@noble/hashes',
        file: 'node_modules/@scure/bip32/node_modules/@noble/hashes/utils.js',
      },
    ],
    [
      3096,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                function r(e) {
                  if (!Number.isSafeInteger(e)) throw new Error(`Wrong integer: ${e}`);
                }
                function s(e) {
                  return (
                    e instanceof Uint8Array ||
                    (null != e && 'object' == typeof e && 'Uint8Array' === e.constructor.name)
                  );
                }
                function o(...e) {
                  const t = e => e,
                    n = (e, t) => n => e(t(n));
                  return {
                    encode: e.map(e => e.encode).reduceRight(n, t),
                    decode: e.map(e => e.decode).reduce(n, t),
                  };
                }
                function i(e) {
                  return {
                    encode: t => {
                      if (!Array.isArray(t) || (t.length && 'number' != typeof t[0]))
                        throw new Error('alphabet.encode input should be an array of numbers');
                      return t.map(t => {
                        if ((r(t), t < 0 || t >= e.length))
                          throw new Error(
                            `Digit index outside alphabet: ${t} (alphabet: ${e.length})`
                          );
                        return e[t];
                      });
                    },
                    decode: t => {
                      if (!Array.isArray(t) || (t.length && 'string' != typeof t[0]))
                        throw new Error('alphabet.decode input should be array of strings');
                      return t.map(t => {
                        if ('string' != typeof t)
                          throw new Error(`alphabet.decode: not string element=${t}`);
                        const n = e.indexOf(t);
                        if (-1 === n) throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);
                        return n;
                      });
                    },
                  };
                }
                function a(e = '') {
                  if ('string' != typeof e) throw new Error('join separator should be string');
                  return {
                    encode: t => {
                      if (!Array.isArray(t) || (t.length && 'string' != typeof t[0]))
                        throw new Error('join.encode input should be array of strings');
                      for (let e of t)
                        if ('string' != typeof e)
                          throw new Error(`join.encode: non-string input=${e}`);
                      return t.join(e);
                    },
                    decode: t => {
                      if ('string' != typeof t)
                        throw new Error('join.decode input should be string');
                      return t.split(e);
                    },
                  };
                }
                function c(e, t = '=') {
                  if ((r(e), 'string' != typeof t)) throw new Error('padding chr should be string');
                  return {
                    encode(n) {
                      if (!Array.isArray(n) || (n.length && 'string' != typeof n[0]))
                        throw new Error('padding.encode input should be array of strings');
                      for (let e of n)
                        if ('string' != typeof e)
                          throw new Error(`padding.encode: non-string input=${e}`);
                      for (; (n.length * e) % 8; ) n.push(t);
                      return n;
                    },
                    decode(n) {
                      if (!Array.isArray(n) || (n.length && 'string' != typeof n[0]))
                        throw new Error('padding.encode input should be array of strings');
                      for (let e of n)
                        if ('string' != typeof e)
                          throw new Error(`padding.decode: non-string input=${e}`);
                      let r = n.length;
                      if ((r * e) % 8)
                        throw new Error(
                          'Invalid padding: string should have whole number of bytes'
                        );
                      for (; r > 0 && n[r - 1] === t; r--)
                        if (!(((r - 1) * e) % 8))
                          throw new Error('Invalid padding: string has too much padding');
                      return n.slice(0, r);
                    },
                  };
                }
                function u(e) {
                  if ('function' != typeof e) throw new Error('normalize fn should be function');
                  return { encode: e => e, decode: t => e(t) };
                }
                function l(e, t, n) {
                  if (t < 2)
                    throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);
                  if (n < 2)
                    throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);
                  if (!Array.isArray(e)) throw new Error('convertRadix: data should be array');
                  if (!e.length) return [];
                  let s = 0;
                  const o = [],
                    i = Array.from(e);
                  for (
                    i.forEach(e => {
                      if ((r(e), e < 0 || e >= t)) throw new Error(`Wrong integer: ${e}`);
                    });
                    ;

                  ) {
                    let e = 0,
                      r = !0;
                    for (let o = s; o < i.length; o++) {
                      const a = i[o],
                        c = t * e + a;
                      if (!Number.isSafeInteger(c) || (t * e) / t !== e || c - a != t * e)
                        throw new Error('convertRadix: carry overflow');
                      e = c % n;
                      const u = Math.floor(c / n);
                      if (((i[o] = u), !Number.isSafeInteger(u) || u * n + e !== c))
                        throw new Error('convertRadix: carry overflow');
                      r && (u ? (r = !1) : (s = o));
                    }
                    if ((o.push(e), r)) break;
                  }
                  for (let t = 0; t < e.length - 1 && 0 === e[t]; t++) o.push(0);
                  return o.reverse();
                }
                /*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
                Object.defineProperty(n, '__esModule', { value: !0 }),
                  (n.bytes =
                    n.stringToBytes =
                    n.str =
                    n.bytesToString =
                    n.hex =
                    n.utf8 =
                    n.bech32m =
                    n.bech32 =
                    n.base58check =
                    n.createBase58check =
                    n.base58xmr =
                    n.base58xrp =
                    n.base58flickr =
                    n.base58 =
                    n.base64urlnopad =
                    n.base64url =
                    n.base64nopad =
                    n.base64 =
                    n.base32crockford =
                    n.base32hexnopad =
                    n.base32hex =
                    n.base32nopad =
                    n.base32 =
                    n.base16 =
                    n.utils =
                      void 0),
                  (n.assertNumber = r);
                const d = (e, t) => (t ? d(t, e % t) : e),
                  f = (e, t) => e + (t - d(e, t));
                function h(e, t, n, s) {
                  if (!Array.isArray(e)) throw new Error('convertRadix2: data should be array');
                  if (t <= 0 || t > 32) throw new Error(`convertRadix2: wrong from=${t}`);
                  if (n <= 0 || n > 32) throw new Error(`convertRadix2: wrong to=${n}`);
                  if (f(t, n) > 32)
                    throw new Error(
                      `convertRadix2: carry overflow from=${t} to=${n} carryBits=${f(t, n)}`
                    );
                  let o = 0,
                    i = 0;
                  const a = 2 ** n - 1,
                    c = [];
                  for (const s of e) {
                    if ((r(s), s >= 2 ** t))
                      throw new Error(`convertRadix2: invalid data word=${s} from=${t}`);
                    if (((o = (o << t) | s), i + t > 32))
                      throw new Error(`convertRadix2: carry overflow pos=${i} from=${t}`);
                    for (i += t; i >= n; i -= n) c.push(((o >> (i - n)) & a) >>> 0);
                    o &= 2 ** i - 1;
                  }
                  if (((o = (o << (n - i)) & a), !s && i >= t)) throw new Error('Excess padding');
                  if (!s && o) throw new Error(`Non-zero padding: ${o}`);
                  return s && i > 0 && c.push(o >>> 0), c;
                }
                function p(e) {
                  return (
                    r(e),
                    {
                      encode: t => {
                        if (!s(t)) throw new Error('radix.encode input should be Uint8Array');
                        return l(Array.from(t), 256, e);
                      },
                      decode: t => {
                        if (!Array.isArray(t) || (t.length && 'number' != typeof t[0]))
                          throw new Error('radix.decode input should be array of numbers');
                        return Uint8Array.from(l(t, e, 256));
                      },
                    }
                  );
                }
                function m(e, t = !1) {
                  if ((r(e), e <= 0 || e > 32))
                    throw new Error('radix2: bits should be in (0..32]');
                  if (f(8, e) > 32 || f(e, 8) > 32) throw new Error('radix2: carry overflow');
                  return {
                    encode: n => {
                      if (!s(n)) throw new Error('radix2.encode input should be Uint8Array');
                      return h(Array.from(n), 8, e, !t);
                    },
                    decode: n => {
                      if (!Array.isArray(n) || (n.length && 'number' != typeof n[0]))
                        throw new Error('radix2.decode input should be array of numbers');
                      return Uint8Array.from(h(n, e, 8, t));
                    },
                  };
                }
                function g(e) {
                  if ('function' != typeof e)
                    throw new Error('unsafeWrapper fn should be function');
                  return function (...t) {
                    try {
                      return e.apply(null, t);
                    } catch (e) {}
                  };
                }
                function y(e, t) {
                  if ((r(e), 'function' != typeof t))
                    throw new Error('checksum fn should be function');
                  return {
                    encode(n) {
                      if (!s(n)) throw new Error('checksum.encode: input should be Uint8Array');
                      const r = t(n).slice(0, e),
                        o = new Uint8Array(n.length + e);
                      return o.set(n), o.set(r, n.length), o;
                    },
                    decode(n) {
                      if (!s(n)) throw new Error('checksum.decode: input should be Uint8Array');
                      const r = n.slice(0, -e),
                        o = t(r).slice(0, e),
                        i = n.slice(-e);
                      for (let t = 0; t < e; t++)
                        if (o[t] !== i[t]) throw new Error('Invalid checksum');
                      return r;
                    },
                  };
                }
                (n.utils = {
                  alphabet: i,
                  chain: o,
                  checksum: y,
                  convertRadix: l,
                  convertRadix2: h,
                  radix: p,
                  radix2: m,
                  join: a,
                  padding: c,
                }),
                  (n.base16 = o(m(4), i('0123456789ABCDEF'), a(''))),
                  (n.base32 = o(m(5), i('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), c(5), a(''))),
                  (n.base32nopad = o(m(5), i('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), a(''))),
                  (n.base32hex = o(m(5), i('0123456789ABCDEFGHIJKLMNOPQRSTUV'), c(5), a(''))),
                  (n.base32hexnopad = o(m(5), i('0123456789ABCDEFGHIJKLMNOPQRSTUV'), a(''))),
                  (n.base32crockford = o(
                    m(5),
                    i('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),
                    a(''),
                    u(e => e.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))
                  )),
                  (n.base64 = o(
                    m(6),
                    i('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),
                    c(6),
                    a('')
                  )),
                  (n.base64nopad = o(
                    m(6),
                    i('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),
                    a('')
                  )),
                  (n.base64url = o(
                    m(6),
                    i('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),
                    c(6),
                    a('')
                  )),
                  (n.base64urlnopad = o(
                    m(6),
                    i('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),
                    a('')
                  ));
                const b = e => o(p(58), i(e), a(''));
                (n.base58 = b('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz')),
                  (n.base58flickr = b(
                    '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
                  )),
                  (n.base58xrp = b('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'));
                const w = [0, 2, 3, 5, 6, 7, 9, 10, 11];
                n.base58xmr = {
                  encode(e) {
                    let t = '';
                    for (let r = 0; r < e.length; r += 8) {
                      const s = e.subarray(r, r + 8);
                      t += n.base58.encode(s).padStart(w[s.length], '1');
                    }
                    return t;
                  },
                  decode(e) {
                    let t = [];
                    for (let r = 0; r < e.length; r += 11) {
                      const s = e.slice(r, r + 11),
                        o = w.indexOf(s.length),
                        i = n.base58.decode(s);
                      for (let e = 0; e < i.length - o; e++)
                        if (0 !== i[e]) throw new Error('base58xmr: wrong padding');
                      t = t.concat(Array.from(i.slice(i.length - o)));
                    }
                    return Uint8Array.from(t);
                  },
                };
                (n.createBase58check = e =>
                  o(
                    y(4, t => e(e(t))),
                    n.base58
                  )),
                  (n.base58check = n.createBase58check);
                const v = o(i('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), a('')),
                  _ = [996825010, 642813549, 513874426, 1027748829, 705979059];
                function E(e) {
                  const t = e >> 25;
                  let n = (33554431 & e) << 5;
                  for (let e = 0; e < _.length; e++) 1 == ((t >> e) & 1) && (n ^= _[e]);
                  return n;
                }
                function S(e, t, n = 1) {
                  const r = e.length;
                  let s = 1;
                  for (let t = 0; t < r; t++) {
                    const n = e.charCodeAt(t);
                    if (n < 33 || n > 126) throw new Error(`Invalid prefix (${e})`);
                    s = E(s) ^ (n >> 5);
                  }
                  s = E(s);
                  for (let t = 0; t < r; t++) s = E(s) ^ (31 & e.charCodeAt(t));
                  for (let e of t) s = E(s) ^ e;
                  for (let e = 0; e < 6; e++) s = E(s);
                  return (s ^= n), v.encode(h([s % 2 ** 30], 30, 5, !1));
                }
                function x(e) {
                  const t = 'bech32' === e ? 1 : 734539939,
                    n = m(5),
                    r = n.decode,
                    s = n.encode,
                    o = g(r);
                  function i(e, n, r = 90) {
                    if ('string' != typeof e)
                      throw new Error('bech32.encode prefix should be string, not ' + typeof e);
                    if (
                      (n instanceof Uint8Array && (n = Array.from(n)),
                      !Array.isArray(n) || (n.length && 'number' != typeof n[0]))
                    )
                      throw new Error(
                        'bech32.encode words should be array of numbers, not ' + typeof n
                      );
                    if (0 === e.length) throw new TypeError(`Invalid prefix length ${e.length}`);
                    const s = e.length + 7 + n.length;
                    if (!1 !== r && s > r) throw new TypeError(`Length ${s} exceeds limit ${r}`);
                    const o = e.toLowerCase(),
                      i = S(o, n, t);
                    return `${o}1${v.encode(n)}${i}`;
                  }
                  function a(e, n = 90) {
                    if ('string' != typeof e)
                      throw new Error('bech32.decode input should be string, not ' + typeof e);
                    if (e.length < 8 || (!1 !== n && e.length > n))
                      throw new TypeError(
                        `Wrong string length: ${e.length} (${e}). Expected (8..${n})`
                      );
                    const r = e.toLowerCase();
                    if (e !== r && e !== e.toUpperCase())
                      throw new Error('String must be lowercase or uppercase');
                    const s = r.lastIndexOf('1');
                    if (0 === s || -1 === s)
                      throw new Error('Letter "1" must be present between prefix and data only');
                    const o = r.slice(0, s),
                      i = r.slice(s + 1);
                    if (i.length < 6) throw new Error('Data must be at least 6 characters long');
                    const a = v.decode(i).slice(0, -6),
                      c = S(o, a, t);
                    if (!i.endsWith(c))
                      throw new Error(`Invalid checksum in ${e}: expected "${c}"`);
                    return { prefix: o, words: a };
                  }
                  return {
                    encode: i,
                    decode: a,
                    encodeFromBytes: function (e, t) {
                      return i(e, s(t));
                    },
                    decodeToBytes: function (e) {
                      const { prefix: t, words: n } = a(e, !1);
                      return { prefix: t, words: n, bytes: r(n) };
                    },
                    decodeUnsafe: g(a),
                    fromWords: r,
                    fromWordsUnsafe: o,
                    toWords: s,
                  };
                }
                (n.bech32 = x('bech32')),
                  (n.bech32m = x('bech32m')),
                  (n.utf8 = {
                    encode: e => new TextDecoder().decode(e),
                    decode: e => new TextEncoder().encode(e),
                  }),
                  (n.hex = o(
                    m(4),
                    i('0123456789abcdef'),
                    a(''),
                    u(e => {
                      if ('string' != typeof e || e.length % 2)
                        throw new TypeError(
                          `hex.decode: expected string, got ${typeof e} with length ${e.length}`
                        );
                      return e.toLowerCase();
                    })
                  ));
                const T = {
                    utf8: n.utf8,
                    hex: n.hex,
                    base16: n.base16,
                    base32: n.base32,
                    base64: n.base64,
                    base64url: n.base64url,
                    base58: n.base58,
                    base58xmr: n.base58xmr,
                  },
                  I =
                    'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
                (n.bytesToString = (e, t) => {
                  if ('string' != typeof e || !T.hasOwnProperty(e)) throw new TypeError(I);
                  if (!s(t)) throw new TypeError('bytesToString() expects Uint8Array');
                  return T[e].encode(t);
                }),
                  (n.str = n.bytesToString);
                (n.stringToBytes = (e, t) => {
                  if (!T.hasOwnProperty(e)) throw new TypeError(I);
                  if ('string' != typeof t) throw new TypeError('stringToBytes() expects string');
                  return T[e].decode(t);
                }),
                  (n.bytes = n.stringToBytes);
              };
            };
      },
      {
        package: 'viem>@scure/bip32>@scure/base',
        file: 'node_modules/@scure/bip32/node_modules/@scure/base/lib/index.js',
      },
    ],
    [
      3098,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = 'undefined' == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
                n.DEBUG_BUILD = r;
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/debug-build.js',
      },
    ],
    [
      3099,
      { './debug-build.js': 3098, './types.js': 3126, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils'),
                  s = e('./debug-build.js'),
                  o = e('./types.js'),
                  i = {};
                function a(e) {
                  const t = i[e];
                  if (t) return t;
                  let n = o.WINDOW[e];
                  if (r.isNativeFunction(n)) return (i[e] = n.bind(o.WINDOW));
                  const a = o.WINDOW.document;
                  if (a && 'function' == typeof a.createElement)
                    try {
                      const t = a.createElement('iframe');
                      (t.hidden = !0), a.head.appendChild(t);
                      const r = t.contentWindow;
                      r && r[e] && (n = r[e]), a.head.removeChild(t);
                    } catch (t) {
                      s.DEBUG_BUILD &&
                        r.logger.warn(
                          `Could not create sandbox iframe for ${e} check, bailing to window.${e}: `,
                          t
                        );
                    }
                  return n ? (i[e] = n.bind(o.WINDOW)) : n;
                }
                (n.clearCachedImplementation = function (e) {
                  i[e] = undefined;
                }),
                  (n.fetch = function (...e) {
                    return a('fetch')(...e);
                  }),
                  (n.getNativeImplementation = a),
                  (n.setTimeout = function (...e) {
                    return a('setTimeout')(...e);
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/getNativeImplementation.js',
      },
    ],
    [
      3100,
      {
        './getNativeImplementation.js': 3099,
        './instrument/dom.js': 3101,
        './instrument/history.js': 3102,
        './instrument/xhr.js': 3103,
        './metrics/browserMetrics.js': 3104,
        './metrics/inp.js': 3106,
        './metrics/instrument.js': 3107,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('./metrics/instrument.js'),
                  s = e('./metrics/browserMetrics.js'),
                  o = e('./instrument/dom.js'),
                  i = e('./instrument/history.js'),
                  a = e('./getNativeImplementation.js'),
                  c = e('./instrument/xhr.js'),
                  u = e('./metrics/inp.js');
                (n.addClsInstrumentationHandler = r.addClsInstrumentationHandler),
                  (n.addFidInstrumentationHandler = r.addFidInstrumentationHandler),
                  (n.addInpInstrumentationHandler = r.addInpInstrumentationHandler),
                  (n.addLcpInstrumentationHandler = r.addLcpInstrumentationHandler),
                  (n.addPerformanceInstrumentationHandler = r.addPerformanceInstrumentationHandler),
                  (n.addTtfbInstrumentationHandler = r.addTtfbInstrumentationHandler),
                  (n.addPerformanceEntries = s.addPerformanceEntries),
                  (n.startTrackingInteractions = s.startTrackingInteractions),
                  (n.startTrackingLongAnimationFrames = s.startTrackingLongAnimationFrames),
                  (n.startTrackingLongTasks = s.startTrackingLongTasks),
                  (n.startTrackingWebVitals = s.startTrackingWebVitals),
                  (n.addClickKeypressInstrumentationHandler =
                    o.addClickKeypressInstrumentationHandler),
                  (n.addHistoryInstrumentationHandler = i.addHistoryInstrumentationHandler),
                  (n.clearCachedImplementation = a.clearCachedImplementation),
                  (n.fetch = a.fetch),
                  (n.getNativeImplementation = a.getNativeImplementation),
                  (n.setTimeout = a.setTimeout),
                  (n.SENTRY_XHR_DATA_KEY = c.SENTRY_XHR_DATA_KEY),
                  (n.addXhrInstrumentationHandler = c.addXhrInstrumentationHandler),
                  (n.registerInpInteractionListener = u.registerInpInteractionListener),
                  (n.startTrackingINP = u.startTrackingINP);
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/index.js',
      },
    ],
    [
      3101,
      { '../types.js': 3126, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils'),
                  s = e('../types.js'),
                  o = 1e3;
                let i, a, c;
                function u() {
                  if (!s.WINDOW.document) return;
                  const e = r.triggerHandlers.bind(null, 'dom'),
                    t = l(e, !0);
                  s.WINDOW.document.addEventListener('click', t, !1),
                    s.WINDOW.document.addEventListener('keypress', t, !1),
                    ['EventTarget', 'Node'].forEach(t => {
                      const n = s.WINDOW[t] && s.WINDOW[t].prototype;
                      n &&
                        n.hasOwnProperty &&
                        n.hasOwnProperty('addEventListener') &&
                        (r.fill(n, 'addEventListener', function (t) {
                          return function (n, r, s) {
                            if ('click' === n || 'keypress' == n)
                              try {
                                const r = this,
                                  o = (r.__sentry_instrumentation_handlers__ =
                                    r.__sentry_instrumentation_handlers__ || {}),
                                  i = (o[n] = o[n] || { refCount: 0 });
                                if (!i.handler) {
                                  const r = l(e);
                                  (i.handler = r), t.call(this, n, r, s);
                                }
                                i.refCount++;
                              } catch (e) {}
                            return t.call(this, n, r, s);
                          };
                        }),
                        r.fill(n, 'removeEventListener', function (e) {
                          return function (t, n, r) {
                            if ('click' === t || 'keypress' == t)
                              try {
                                const n = this,
                                  s = n.__sentry_instrumentation_handlers__ || {},
                                  o = s[t];
                                o &&
                                  (o.refCount--,
                                  o.refCount <= 0 &&
                                    (e.call(this, t, o.handler, r),
                                    (o.handler = undefined),
                                    delete s[t]),
                                  0 === Object.keys(s).length &&
                                    delete n.__sentry_instrumentation_handlers__);
                              } catch (e) {}
                            return e.call(this, t, n, r);
                          };
                        }));
                    });
                }
                function l(e, t = !1) {
                  return n => {
                    if (!n || n._sentryCaptured) return;
                    const u = (function (e) {
                      try {
                        return e.target;
                      } catch (e) {
                        return null;
                      }
                    })(n);
                    if (
                      (function (e, t) {
                        return (
                          'keypress' === e &&
                          (!t ||
                            !t.tagName ||
                            ('INPUT' !== t.tagName &&
                              'TEXTAREA' !== t.tagName &&
                              !t.isContentEditable))
                        );
                      })(n.type, u)
                    )
                      return;
                    r.addNonEnumerableProperty(n, '_sentryCaptured', !0),
                      u && !u._sentryId && r.addNonEnumerableProperty(u, '_sentryId', r.uuid4());
                    const l = 'keypress' === n.type ? 'input' : n.type;
                    if (
                      !(function (e) {
                        if (e.type !== a) return !1;
                        try {
                          if (!e.target || e.target._sentryId !== c) return !1;
                        } catch (e) {}
                        return !0;
                      })(n)
                    ) {
                      e({ event: n, name: l, global: t }),
                        (a = n.type),
                        (c = u ? u._sentryId : undefined);
                    }
                    clearTimeout(i),
                      (i = s.WINDOW.setTimeout(() => {
                        (c = undefined), (a = undefined);
                      }, o));
                  };
                }
                (n.addClickKeypressInstrumentationHandler = function (e) {
                  r.addHandler('dom', e), r.maybeInstrument('dom', u);
                }),
                  (n.instrumentDOM = u);
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/instrument/dom.js',
      },
    ],
    [
      3102,
      { '../types.js': 3126, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils'),
                  s = e('../types.js');
                let o;
                function i() {
                  if (!r.supportsHistory()) return;
                  const e = s.WINDOW.onpopstate;
                  function t(e) {
                    return function (...t) {
                      const n = t.length > 2 ? t[2] : undefined;
                      if (n) {
                        const e = o,
                          t = String(n);
                        o = t;
                        const s = { from: e, to: t };
                        r.triggerHandlers('history', s);
                      }
                      return e.apply(this, t);
                    };
                  }
                  (s.WINDOW.onpopstate = function (...t) {
                    const n = s.WINDOW.location.href,
                      i = o;
                    o = n;
                    const a = { from: i, to: n };
                    if ((r.triggerHandlers('history', a), e))
                      try {
                        return e.apply(this, t);
                      } catch (e) {}
                  }),
                    r.fill(s.WINDOW.history, 'pushState', t),
                    r.fill(s.WINDOW.history, 'replaceState', t);
                }
                n.addHistoryInstrumentationHandler = function (e) {
                  const t = 'history';
                  r.addHandler(t, e), r.maybeInstrument(t, i);
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/instrument/history.js',
      },
    ],
    [
      3103,
      { '../types.js': 3126, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils'),
                  s = e('../types.js'),
                  o = '__sentry_xhr_v3__';
                function i() {
                  if (!s.WINDOW.XMLHttpRequest) return;
                  const e = XMLHttpRequest.prototype;
                  (e.open = new Proxy(e.open, {
                    apply(e, t, n) {
                      const s = 1e3 * r.timestampInSeconds(),
                        i = r.isString(n[0]) ? n[0].toUpperCase() : undefined,
                        a = (function (e) {
                          if (r.isString(e)) return e;
                          try {
                            return e.toString();
                          } catch (e) {}
                          return undefined;
                        })(n[1]);
                      if (!i || !a) return e.apply(t, n);
                      (t[o] = { method: i, url: a, request_headers: {} }),
                        'POST' === i && a.match(/sentry_key/) && (t.__sentry_own_request__ = !0);
                      const c = () => {
                        const e = t[o];
                        if (e && 4 === t.readyState) {
                          try {
                            e.status_code = t.status;
                          } catch (e) {}
                          const n = {
                            endTimestamp: 1e3 * r.timestampInSeconds(),
                            startTimestamp: s,
                            xhr: t,
                          };
                          r.triggerHandlers('xhr', n);
                        }
                      };
                      return (
                        'onreadystatechange' in t && 'function' == typeof t.onreadystatechange
                          ? (t.onreadystatechange = new Proxy(t.onreadystatechange, {
                              apply: (e, t, n) => (c(), e.apply(t, n)),
                            }))
                          : t.addEventListener('readystatechange', c),
                        (t.setRequestHeader = new Proxy(t.setRequestHeader, {
                          apply(e, t, n) {
                            const [s, i] = n,
                              a = t[o];
                            return (
                              a &&
                                r.isString(s) &&
                                r.isString(i) &&
                                (a.request_headers[s.toLowerCase()] = i),
                              e.apply(t, n)
                            );
                          },
                        })),
                        e.apply(t, n)
                      );
                    },
                  })),
                    (e.send = new Proxy(e.send, {
                      apply(e, t, n) {
                        const s = t[o];
                        if (!s) return e.apply(t, n);
                        n[0] !== undefined && (s.body = n[0]);
                        const i = { startTimestamp: 1e3 * r.timestampInSeconds(), xhr: t };
                        return r.triggerHandlers('xhr', i), e.apply(t, n);
                      },
                    }));
                }
                (n.SENTRY_XHR_DATA_KEY = o),
                  (n.addXhrInstrumentationHandler = function (e) {
                    r.addHandler('xhr', e), r.maybeInstrument('xhr', i);
                  }),
                  (n.instrumentXHR = i);
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/instrument/xhr.js',
      },
    ],
    [
      3104,
      {
        '../debug-build.js': 3098,
        '../types.js': 3126,
        './cls.js': 3105,
        './instrument.js': 3107,
        './utils.js': 3108,
        './web-vitals/lib/getActivationStart.js': 3115,
        './web-vitals/lib/getNavigationEntry.js': 3116,
        './web-vitals/lib/getVisibilityWatcher.js': 3117,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('../types.js'),
                  a = e('./cls.js'),
                  c = e('./instrument.js'),
                  u = e('./utils.js'),
                  l = e('./web-vitals/lib/getActivationStart.js'),
                  d = e('./web-vitals/lib/getNavigationEntry.js'),
                  f = e('./web-vitals/lib/getVisibilityWatcher.js'),
                  h = 2147483647;
                let p,
                  m,
                  g = 0,
                  y = {};
                function b(e, t, n, s, o) {
                  const i = d.getNavigationEntry(),
                    a = u.msToSec(i ? i.requestStart : 0),
                    c = o + Math.max(n, a),
                    l = o + n,
                    f = l + s,
                    h = { [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics' };
                  return (
                    c !== l &&
                      ((h['sentry.browser.measure_happened_before_request'] = !0),
                      (h['sentry.browser.measure_start_time'] = c)),
                    u.startAndEndSpan(e, c, f, { name: t.name, op: t.entryType, attributes: h }),
                    c
                  );
                }
                function w(e, t, n, s, o, i) {
                  const a = i ? t[i] : t[`${n}End`],
                    c = t[`${n}Start`];
                  c &&
                    a &&
                    u.startAndEndSpan(e, s + u.msToSec(c), s + u.msToSec(a), {
                      op: `browser.${o || n}`,
                      name: t.name,
                      attributes: {
                        [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',
                      },
                    });
                }
                function v(e, t, n, o, a, c) {
                  if ('xmlhttprequest' === t.initiatorType || 'fetch' === t.initiatorType) return;
                  const l = s.parseUrl(n),
                    d = { [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics' };
                  _(d, t, 'transferSize', 'http.response_transfer_size'),
                    _(d, t, 'encodedBodySize', 'http.response_content_length'),
                    _(d, t, 'decodedBodySize', 'http.decoded_response_content_length'),
                    'renderBlockingStatus' in t &&
                      (d['resource.render_blocking_status'] = t.renderBlockingStatus),
                    l.protocol && (d['url.scheme'] = l.protocol.split(':').pop()),
                    l.host && (d['server.address'] = l.host),
                    (d['url.same_origin'] = n.includes(i.WINDOW.location.origin));
                  const f = c + o,
                    h = f + a;
                  u.startAndEndSpan(e, f, h, {
                    name: n.replace(i.WINDOW.location.origin, ''),
                    op: t.initiatorType ? `resource.${t.initiatorType}` : 'resource.other',
                    attributes: d,
                  });
                }
                function _(e, t, n, r) {
                  const s = t[n];
                  null != s && s < h && (e[r] = s);
                }
                (n._addMeasureSpans = b),
                  (n._addResourceSpans = v),
                  (n.addPerformanceEntries = function (e, t) {
                    const n = u.getBrowserPerformanceAPI();
                    if (!n || !i.WINDOW.performance.getEntries || !s.browserPerformanceTimeOrigin)
                      return;
                    o.DEBUG_BUILD &&
                      s.logger.log('[Tracing] Adding & adjusting spans using Performance API');
                    const a = u.msToSec(s.browserPerformanceTimeOrigin),
                      c = n.getEntries(),
                      { op: h, start_timestamp: _ } = r.spanToJSON(e);
                    if (
                      (c.slice(g).forEach(t => {
                        const n = u.msToSec(t.startTime),
                          i = u.msToSec(Math.max(0, t.duration));
                        if (!('navigation' === h && _ && a + n < _))
                          switch (t.entryType) {
                            case 'navigation':
                              !(function (e, t, n) {
                                [
                                  'unloadEvent',
                                  'redirect',
                                  'domContentLoadedEvent',
                                  'loadEvent',
                                  'connect',
                                ].forEach(r => {
                                  w(e, t, r, n);
                                }),
                                  w(e, t, 'secureConnection', n, 'TLS/SSL', 'connectEnd'),
                                  w(e, t, 'fetch', n, 'cache', 'domainLookupStart'),
                                  w(e, t, 'domainLookup', n, 'DNS'),
                                  (function (e, t, n) {
                                    const s = n + u.msToSec(t.requestStart),
                                      o = n + u.msToSec(t.responseEnd),
                                      i = n + u.msToSec(t.responseStart);
                                    t.responseEnd &&
                                      (u.startAndEndSpan(e, s, o, {
                                        op: 'browser.request',
                                        name: t.name,
                                        attributes: {
                                          [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]:
                                            'auto.ui.browser.metrics',
                                        },
                                      }),
                                      u.startAndEndSpan(e, i, o, {
                                        op: 'browser.response',
                                        name: t.name,
                                        attributes: {
                                          [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]:
                                            'auto.ui.browser.metrics',
                                        },
                                      }));
                                  })(e, t, n);
                              })(e, t, a);
                              break;
                            case 'mark':
                            case 'paint':
                            case 'measure': {
                              b(e, t, n, i, a);
                              const r = f.getVisibilityWatcher(),
                                c = t.startTime < r.firstHiddenTime;
                              'first-paint' === t.name &&
                                c &&
                                (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding FP'),
                                (y.fp = { value: t.startTime, unit: 'millisecond' })),
                                'first-contentful-paint' === t.name &&
                                  c &&
                                  (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding FCP'),
                                  (y.fcp = { value: t.startTime, unit: 'millisecond' }));
                              break;
                            }
                            case 'resource':
                              v(e, t, t.name, n, i, a);
                          }
                      }),
                      (g = Math.max(c.length - 1, 0)),
                      (function (e) {
                        const t = i.WINDOW.navigator;
                        if (!t) return;
                        const n = t.connection;
                        n &&
                          (n.effectiveType &&
                            e.setAttribute('effectiveConnectionType', n.effectiveType),
                          n.type && e.setAttribute('connectionType', n.type),
                          u.isMeasurementValue(n.rtt) &&
                            (y['connection.rtt'] = { value: n.rtt, unit: 'millisecond' }));
                        u.isMeasurementValue(t.deviceMemory) &&
                          e.setAttribute('deviceMemory', `${t.deviceMemory} GB`);
                        u.isMeasurementValue(t.hardwareConcurrency) &&
                          e.setAttribute('hardwareConcurrency', String(t.hardwareConcurrency));
                      })(e),
                      'pageload' === h)
                    ) {
                      !(function (e) {
                        const t = d.getNavigationEntry();
                        if (!t) return;
                        const { responseStart: n, requestStart: r } = t;
                        r <= n &&
                          (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding TTFB Request Time'),
                          (e['ttfb.requestTime'] = { value: n - r, unit: 'millisecond' }));
                      })(y);
                      const n = y['mark.fid'];
                      n &&
                        y.fid &&
                        (u.startAndEndSpan(e, n.value, n.value + u.msToSec(y.fid.value), {
                          name: 'first input delay',
                          op: 'ui.action',
                          attributes: {
                            [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',
                          },
                        }),
                        delete y['mark.fid']),
                        ('fcp' in y && t.recordClsOnPageloadSpan) || delete y.cls,
                        Object.entries(y).forEach(([e, t]) => {
                          r.setMeasurement(e, t.value, t.unit);
                        }),
                        e.setAttribute('performance.timeOrigin', a),
                        e.setAttribute('performance.activationStart', l.getActivationStart()),
                        (function (e) {
                          p &&
                            (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding LCP Data'),
                            p.element &&
                              e.setAttribute('lcp.element', s.htmlTreeAsString(p.element)),
                            p.id && e.setAttribute('lcp.id', p.id),
                            p.url && e.setAttribute('lcp.url', p.url.trim().slice(0, 200)),
                            e.setAttribute('lcp.size', p.size));
                          m &&
                            m.sources &&
                            (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding CLS Data'),
                            m.sources.forEach((t, n) =>
                              e.setAttribute(`cls.source.${n + 1}`, s.htmlTreeAsString(t.node))
                            ));
                        })(e);
                    }
                    (p = undefined), (m = undefined), (y = {});
                  }),
                  (n.startTrackingInteractions = function () {
                    c.addPerformanceInstrumentationHandler('event', ({ entries: e }) => {
                      if (r.getActiveSpan())
                        for (const t of e)
                          if ('click' === t.name) {
                            const e = u.msToSec(s.browserPerformanceTimeOrigin + t.startTime),
                              n = u.msToSec(t.duration),
                              o = {
                                name: s.htmlTreeAsString(t.target),
                                op: `ui.interaction.${t.name}`,
                                startTime: e,
                                attributes: {
                                  [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',
                                },
                              },
                              i = s.getComponentName(t.target);
                            i && (o.attributes['ui.component_name'] = i);
                            const a = r.startInactiveSpan(o);
                            a && a.end(e + n);
                          }
                    });
                  }),
                  (n.startTrackingLongAnimationFrames = function () {
                    new PerformanceObserver(e => {
                      if (r.getActiveSpan())
                        for (const t of e.getEntries()) {
                          if (!t.scripts[0]) continue;
                          const e = u.msToSec(s.browserPerformanceTimeOrigin + t.startTime),
                            n = u.msToSec(t.duration),
                            o = { [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics' },
                            i = t.scripts[0],
                            {
                              invoker: a,
                              invokerType: c,
                              sourceURL: l,
                              sourceFunctionName: d,
                              sourceCharPosition: f,
                            } = i;
                          (o['browser.script.invoker'] = a),
                            (o['browser.script.invoker_type'] = c),
                            l && (o['code.filepath'] = l),
                            d && (o['code.function'] = d),
                            -1 !== f && (o['browser.script.source_char_position'] = f);
                          const h = r.startInactiveSpan({
                            name: 'Main UI thread blocked',
                            op: 'ui.long-animation-frame',
                            startTime: e,
                            attributes: o,
                          });
                          h && h.end(e + n);
                        }
                    }).observe({ type: 'long-animation-frame', buffered: !0 });
                  }),
                  (n.startTrackingLongTasks = function () {
                    c.addPerformanceInstrumentationHandler('longtask', ({ entries: e }) => {
                      if (r.getActiveSpan())
                        for (const t of e) {
                          const e = u.msToSec(s.browserPerformanceTimeOrigin + t.startTime),
                            n = u.msToSec(t.duration),
                            o = r.startInactiveSpan({
                              name: 'Main UI thread blocked',
                              op: 'ui.long-task',
                              startTime: e,
                              attributes: {
                                [r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',
                              },
                            });
                          o && o.end(e + n);
                        }
                    });
                  }),
                  (n.startTrackingWebVitals = function ({ recordClsStandaloneSpans: e }) {
                    const t = u.getBrowserPerformanceAPI();
                    if (t && s.browserPerformanceTimeOrigin) {
                      t.mark && i.WINDOW.performance.mark('sentry-tracing-init');
                      const n = c.addFidInstrumentationHandler(({ metric: e }) => {
                          const t = e.entries[e.entries.length - 1];
                          if (!t) return;
                          const n = u.msToSec(s.browserPerformanceTimeOrigin),
                            r = u.msToSec(t.startTime);
                          o.DEBUG_BUILD && s.logger.log('[Measurements] Adding FID'),
                            (y.fid = { value: e.value, unit: 'millisecond' }),
                            (y['mark.fid'] = { value: n + r, unit: 'second' });
                        }),
                        r = c.addLcpInstrumentationHandler(({ metric: e }) => {
                          const t = e.entries[e.entries.length - 1];
                          t &&
                            (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding LCP'),
                            (y.lcp = { value: e.value, unit: 'millisecond' }),
                            (p = t));
                        }, !0),
                        l = c.addTtfbInstrumentationHandler(({ metric: e }) => {
                          e.entries[e.entries.length - 1] &&
                            (o.DEBUG_BUILD && s.logger.log('[Measurements] Adding TTFB'),
                            (y.ttfb = { value: e.value, unit: 'millisecond' }));
                        }),
                        d = e
                          ? a.trackClsAsStandaloneSpan()
                          : c.addClsInstrumentationHandler(({ metric: e }) => {
                              const t = e.entries[e.entries.length - 1];
                              t &&
                                (o.DEBUG_BUILD &&
                                  s.logger.log(`[Measurements] Adding CLS ${e.value}`),
                                (y.cls = { value: e.value, unit: '' }),
                                (m = t));
                            }, !0);
                      return () => {
                        n(), r(), l(), d && d();
                      };
                    }
                    return () => undefined;
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/browserMetrics.js',
      },
    ],
    [
      3105,
      {
        '../debug-build.js': 3098,
        './instrument.js': 3107,
        './utils.js': 3108,
        './web-vitals/lib/onHidden.js': 3120,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var { _optionalChain: r } = e('@sentry/utils');
                Object.defineProperty(n, '__esModule', { value: !0 });
                const s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('../debug-build.js'),
                  a = e('./instrument.js'),
                  c = e('./utils.js'),
                  u = e('./web-vitals/lib/onHidden.js');
                n.trackClsAsStandaloneSpan = function () {
                  let e,
                    t,
                    n = 0;
                  if (
                    !(function () {
                      try {
                        return r([
                          PerformanceObserver,
                          'access',
                          e => e.supportedEntryTypes,
                          'optionalAccess',
                          e => e.includes,
                          'call',
                          e => e('layout-shift'),
                        ]);
                      } catch (e) {
                        return !1;
                      }
                    })()
                  )
                    return;
                  let l = !1;
                  function d() {
                    l ||
                      ((l = !0),
                      t &&
                        (function (e, t, n) {
                          i.DEBUG_BUILD && o.logger.log(`Sending CLS span (${e})`);
                          const a = c.msToSec(
                              (o.browserPerformanceTimeOrigin || 0) +
                                (r([t, 'optionalAccess', e => e.startTime]) || 0)
                            ),
                            u = s.getCurrentScope().getScopeData().transactionName,
                            l = t
                              ? o.htmlTreeAsString(
                                  r([
                                    t,
                                    'access',
                                    e => e.sources,
                                    'access',
                                    e => e[0],
                                    'optionalAccess',
                                    e => e.node,
                                  ])
                                )
                              : 'Layout shift',
                            d = o.dropUndefinedKeys({
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.cls',
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.cls',
                              [s.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]:
                                r([t, 'optionalAccess', e => e.duration]) || 0,
                              'sentry.pageload.span_id': n,
                            }),
                            f = c.startStandaloneWebVitalSpan({
                              name: l,
                              transaction: u,
                              attributes: d,
                              startTime: a,
                            });
                          r([
                            f,
                            'optionalAccess',
                            e => e.addEvent,
                            'call',
                            t =>
                              t('cls', {
                                [s.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: '',
                                [s.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: e,
                              }),
                          ]),
                            r([f, 'optionalAccess', e => e.end, 'call', e => e(a)]);
                        })(n, e, t),
                      f());
                  }
                  const f = a.addClsInstrumentationHandler(({ metric: t }) => {
                    const r = t.entries[t.entries.length - 1];
                    r && ((n = t.value), (e = r));
                  }, !0);
                  u.onHidden(() => {
                    d();
                  }),
                    setTimeout(() => {
                      const e = s.getClient(),
                        n = r([
                          e,
                          'optionalAccess',
                          e => e.on,
                          'call',
                          e =>
                            e('startNavigationSpan', () => {
                              d(), n && n();
                            }),
                        ]),
                        o = s.getActiveSpan(),
                        i = o && s.getRootSpan(o),
                        a = i && s.spanToJSON(i);
                      a && 'pageload' === a.op && (t = i.spanContext().spanId);
                    }, 0);
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/cls.js',
      },
    ],
    [
      3106,
      { './instrument.js': 3107, './utils.js': 3108, '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var { _optionalChain: r } = e('@sentry/utils');
                Object.defineProperty(n, '__esModule', { value: !0 });
                const s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('./instrument.js'),
                  a = e('./utils.js'),
                  c = [],
                  u = new Map();
                const l = {
                  click: 'click',
                  pointerdown: 'click',
                  pointerup: 'click',
                  mousedown: 'click',
                  mouseup: 'click',
                  touchstart: 'click',
                  touchend: 'click',
                  mouseover: 'hover',
                  mouseout: 'hover',
                  mouseenter: 'hover',
                  mouseleave: 'hover',
                  pointerover: 'hover',
                  pointerout: 'hover',
                  pointerenter: 'hover',
                  pointerleave: 'hover',
                  dragstart: 'drag',
                  dragend: 'drag',
                  drag: 'drag',
                  dragenter: 'drag',
                  dragleave: 'drag',
                  dragover: 'drag',
                  drop: 'drag',
                  keydown: 'press',
                  keyup: 'press',
                  keypress: 'press',
                  input: 'press',
                };
                (n.registerInpInteractionListener = function (e) {
                  const t = ({ entries: e }) => {
                    const t = s.getActiveSpan(),
                      n = t && s.getRootSpan(t);
                    e.forEach(e => {
                      if (!i.isPerformanceEventTiming(e) || !n) return;
                      const t = e.interactionId;
                      if (null != t && !u.has(t)) {
                        if (c.length > 10) {
                          const e = c.shift();
                          u.delete(e);
                        }
                        c.push(t), u.set(t, n);
                      }
                    });
                  };
                  i.addPerformanceInstrumentationHandler('event', t),
                    i.addPerformanceInstrumentationHandler('first-input', t);
                }),
                  (n.startTrackingINP = function () {
                    if (a.getBrowserPerformanceAPI() && o.browserPerformanceTimeOrigin) {
                      const e = i.addInpInstrumentationHandler(({ metric: e }) => {
                        if (e.value == undefined) return;
                        const t = e.entries.find(t => t.duration === e.value && l[t.name]);
                        if (!t) return;
                        const { interactionId: n } = t,
                          i = l[t.name],
                          c = a.msToSec(o.browserPerformanceTimeOrigin + t.startTime),
                          d = a.msToSec(e.value),
                          f = s.getActiveSpan(),
                          h = f ? s.getRootSpan(f) : undefined,
                          p = (null != n ? u.get(n) : undefined) || h,
                          m = p
                            ? s.spanToJSON(p).description
                            : s.getCurrentScope().getScopeData().transactionName,
                          g = o.htmlTreeAsString(t.target),
                          y = o.dropUndefinedKeys({
                            [s.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',
                            [s.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${i}`,
                            [s.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: t.duration,
                          }),
                          b = a.startStandaloneWebVitalSpan({
                            name: g,
                            transaction: m,
                            attributes: y,
                            startTime: c,
                          });
                        r([
                          b,
                          'optionalAccess',
                          e => e.addEvent,
                          'call',
                          t =>
                            t('inp', {
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: e.value,
                            }),
                        ]),
                          r([b, 'optionalAccess', e => e.end, 'call', e => e(c + d)]);
                      });
                      return () => {
                        e();
                      };
                    }
                    return () => undefined;
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/inp.js',
      },
    ],
    [
      3107,
      {
        '../debug-build.js': 3098,
        './web-vitals/getCLS.js': 3109,
        './web-vitals/getFID.js': 3110,
        './web-vitals/getINP.js': 3111,
        './web-vitals/getLCP.js': 3112,
        './web-vitals/lib/observe.js': 3119,
        './web-vitals/onTTFB.js': 3125,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils'),
                  s = e('../debug-build.js'),
                  o = e('./web-vitals/getCLS.js'),
                  i = e('./web-vitals/getFID.js'),
                  a = e('./web-vitals/getINP.js'),
                  c = e('./web-vitals/getLCP.js'),
                  u = e('./web-vitals/lib/observe.js'),
                  l = e('./web-vitals/onTTFB.js'),
                  d = {},
                  f = {};
                let h, p, m, g, y;
                function b(e, t) {
                  const n = d[e];
                  if (n && n.length)
                    for (const o of n)
                      try {
                        o(t);
                      } catch (t) {
                        s.DEBUG_BUILD &&
                          r.logger.error(
                            `Error while triggering instrumentation handler.\nType: ${e}\nName: ${r.getFunctionName(o)}\nError:`,
                            t
                          );
                      }
                }
                function w() {
                  return o.onCLS(
                    e => {
                      b('cls', { metric: e }), (h = e);
                    },
                    { reportAllChanges: !0 }
                  );
                }
                function v() {
                  return i.onFID(e => {
                    b('fid', { metric: e }), (p = e);
                  });
                }
                function _() {
                  return c.onLCP(
                    e => {
                      b('lcp', { metric: e }), (m = e);
                    },
                    { reportAllChanges: !0 }
                  );
                }
                function E() {
                  return l.onTTFB(e => {
                    b('ttfb', { metric: e }), (g = e);
                  });
                }
                function S() {
                  return a.onINP(e => {
                    b('inp', { metric: e }), (y = e);
                  });
                }
                function x(e, t, n, r, s = !1) {
                  let o;
                  return (
                    T(e, t),
                    f[e] || ((o = n()), (f[e] = !0)),
                    r && t({ metric: r }),
                    I(e, t, s ? o : undefined)
                  );
                }
                function T(e, t) {
                  (d[e] = d[e] || []), d[e].push(t);
                }
                function I(e, t, n) {
                  return () => {
                    n && n();
                    const r = d[e];
                    if (!r) return;
                    const s = r.indexOf(t);
                    -1 !== s && r.splice(s, 1);
                  };
                }
                (n.addClsInstrumentationHandler = function (e, t = !1) {
                  return x('cls', e, w, h, t);
                }),
                  (n.addFidInstrumentationHandler = function (e) {
                    return x('fid', e, v, p);
                  }),
                  (n.addInpInstrumentationHandler = function (e) {
                    return x('inp', e, S, y);
                  }),
                  (n.addLcpInstrumentationHandler = function (e, t = !1) {
                    return x('lcp', e, _, m, t);
                  }),
                  (n.addPerformanceInstrumentationHandler = function (e, t) {
                    return (
                      T(e, t),
                      f[e] ||
                        (!(function (e) {
                          const t = {};
                          'event' === e && (t.durationThreshold = 0);
                          u.observe(
                            e,
                            t => {
                              b(e, { entries: t });
                            },
                            t
                          );
                        })(e),
                        (f[e] = !0)),
                      I(e, t)
                    );
                  }),
                  (n.addTtfbInstrumentationHandler = function (e) {
                    return x('ttfb', e, E, g);
                  }),
                  (n.isPerformanceEventTiming = function (e) {
                    return 'duration' in e;
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/instrument.js',
      },
    ],
    [
      3108,
      { '../types.js': 3126, '@sentry/core': 3175 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('../types.js');
                (n.getBrowserPerformanceAPI = function () {
                  return s.WINDOW && s.WINDOW.addEventListener && s.WINDOW.performance;
                }),
                  (n.isMeasurementValue = function (e) {
                    return 'number' == typeof e && isFinite(e);
                  }),
                  (n.msToSec = function (e) {
                    return e / 1e3;
                  }),
                  (n.startAndEndSpan = function (e, t, n, { ...s }) {
                    const o = r.spanToJSON(e).start_timestamp;
                    return (
                      o && o > t && 'function' == typeof e.updateStartTime && e.updateStartTime(t),
                      r.withActiveSpan(e, () => {
                        const e = r.startInactiveSpan({ startTime: t, ...s });
                        return e && e.end(n), e;
                      })
                    );
                  }),
                  (n.startStandaloneWebVitalSpan = function (e) {
                    const t = r.getClient();
                    if (!t) return;
                    const { name: n, transaction: o, attributes: i, startTime: a } = e,
                      { release: c, environment: u } = t.getOptions(),
                      l = t.getIntegrationByName('Replay'),
                      d = l && l.getReplayId(),
                      f = r.getCurrentScope(),
                      h = f.getUser(),
                      p = h !== undefined ? h.email || h.id || h.ip_address : undefined;
                    let m;
                    try {
                      m = f.getScopeData().contexts.profile.profile_id;
                    } catch (e) {}
                    const g = {
                      release: c,
                      environment: u,
                      user: p || undefined,
                      profile_id: m || undefined,
                      replay_id: d || undefined,
                      transaction: o,
                      'user_agent.original': s.WINDOW.navigator && s.WINDOW.navigator.userAgent,
                      ...i,
                    };
                    return r.startInactiveSpan({
                      name: n,
                      attributes: g,
                      startTime: a,
                      experimental: { standalone: !0 },
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/utils.js',
      },
    ],
    [
      3109,
      {
        './lib/bindReporter.js': 3113,
        './lib/initMetric.js': 3118,
        './lib/observe.js': 3119,
        './lib/onHidden.js': 3120,
        './lib/runOnce.js': 3122,
        './onFCP.js': 3124,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('./lib/bindReporter.js'),
                  s = e('./lib/initMetric.js'),
                  o = e('./lib/observe.js'),
                  i = e('./lib/onHidden.js'),
                  a = e('./lib/runOnce.js'),
                  c = e('./onFCP.js'),
                  u = [0.1, 0.25];
                (n.CLSThresholds = u),
                  (n.onCLS = (e, t = {}) => {
                    c.onFCP(
                      a.runOnce(() => {
                        const n = s.initMetric('CLS', 0);
                        let a,
                          c = 0,
                          l = [];
                        const d = e => {
                            e.forEach(e => {
                              if (!e.hadRecentInput) {
                                const t = l[0],
                                  n = l[l.length - 1];
                                c &&
                                t &&
                                n &&
                                e.startTime - n.startTime < 1e3 &&
                                e.startTime - t.startTime < 5e3
                                  ? ((c += e.value), l.push(e))
                                  : ((c = e.value), (l = [e]));
                              }
                            }),
                              c > n.value && ((n.value = c), (n.entries = l), a());
                          },
                          f = o.observe('layout-shift', d);
                        f &&
                          ((a = r.bindReporter(e, n, u, t.reportAllChanges)),
                          i.onHidden(() => {
                            d(f.takeRecords()), a(!0);
                          }),
                          setTimeout(a, 0));
                      })
                    );
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/getCLS.js',
      },
    ],
    [
      3110,
      {
        './lib/bindReporter.js': 3113,
        './lib/getVisibilityWatcher.js': 3117,
        './lib/initMetric.js': 3118,
        './lib/observe.js': 3119,
        './lib/onHidden.js': 3120,
        './lib/runOnce.js': 3122,
        './lib/whenActivated.js': 3123,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('./lib/bindReporter.js'),
                  s = e('./lib/getVisibilityWatcher.js'),
                  o = e('./lib/initMetric.js'),
                  i = e('./lib/observe.js'),
                  a = e('./lib/onHidden.js'),
                  c = e('./lib/runOnce.js'),
                  u = e('./lib/whenActivated.js'),
                  l = [100, 300];
                (n.FIDThresholds = l),
                  (n.onFID = (e, t = {}) => {
                    u.whenActivated(() => {
                      const n = s.getVisibilityWatcher(),
                        u = o.initMetric('FID');
                      let d;
                      const f = e => {
                          e.startTime < n.firstHiddenTime &&
                            ((u.value = e.processingStart - e.startTime), u.entries.push(e), d(!0));
                        },
                        h = e => {
                          e.forEach(f);
                        },
                        p = i.observe('first-input', h);
                      (d = r.bindReporter(e, u, l, t.reportAllChanges)),
                        p &&
                          a.onHidden(
                            c.runOnce(() => {
                              h(p.takeRecords()), p.disconnect();
                            })
                          );
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/getFID.js',
      },
    ],
    [
      3111,
      {
        '../../types.js': 3126,
        './lib/bindReporter.js': 3113,
        './lib/initMetric.js': 3118,
        './lib/observe.js': 3119,
        './lib/onHidden.js': 3120,
        './lib/polyfills/interactionCountPolyfill.js': 3121,
        './lib/whenActivated.js': 3123,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../types.js'),
                  s = e('./lib/bindReporter.js'),
                  o = e('./lib/initMetric.js'),
                  i = e('./lib/observe.js'),
                  a = e('./lib/onHidden.js'),
                  c = e('./lib/polyfills/interactionCountPolyfill.js'),
                  u = e('./lib/whenActivated.js'),
                  l = [200, 500],
                  d = () => c.getInteractionCount() - 0,
                  f = [],
                  h = {},
                  p = e => {
                    const t = f[f.length - 1],
                      n = h[e.interactionId];
                    if (n || f.length < 10 || (t && e.duration > t.latency)) {
                      if (n) n.entries.push(e), (n.latency = Math.max(n.latency, e.duration));
                      else {
                        const t = { id: e.interactionId, latency: e.duration, entries: [e] };
                        (h[t.id] = t), f.push(t);
                      }
                      f.sort((e, t) => t.latency - e.latency),
                        f.splice(10).forEach(e => {
                          delete h[e.id];
                        });
                    }
                  };
                (n.INPThresholds = l),
                  (n.onINP = (e, t = {}) => {
                    u.whenActivated(() => {
                      c.initInteractionCountPolyfill();
                      const n = o.initMetric('INP');
                      let u;
                      const h = e => {
                          e.forEach(e => {
                            if ((e.interactionId && p(e), 'first-input' === e.entryType)) {
                              !f.some(t =>
                                t.entries.some(
                                  t => e.duration === t.duration && e.startTime === t.startTime
                                )
                              ) && p(e);
                            }
                          });
                          const t = (() => {
                            const e = Math.min(f.length - 1, Math.floor(d() / 50));
                            return f[e];
                          })();
                          t &&
                            t.latency !== n.value &&
                            ((n.value = t.latency), (n.entries = t.entries), u());
                        },
                        m = i.observe('event', h, {
                          durationThreshold: null != t.durationThreshold ? t.durationThreshold : 40,
                        });
                      (u = s.bindReporter(e, n, l, t.reportAllChanges)),
                        m &&
                          ('PerformanceEventTiming' in r.WINDOW &&
                            'interactionId' in PerformanceEventTiming.prototype &&
                            m.observe({ type: 'first-input', buffered: !0 }),
                          a.onHidden(() => {
                            h(m.takeRecords()),
                              n.value < 0 && d() > 0 && ((n.value = 0), (n.entries = [])),
                              u(!0);
                          }));
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/getINP.js',
      },
    ],
    [
      3112,
      {
        '../../types.js': 3126,
        './lib/bindReporter.js': 3113,
        './lib/getActivationStart.js': 3115,
        './lib/getVisibilityWatcher.js': 3117,
        './lib/initMetric.js': 3118,
        './lib/observe.js': 3119,
        './lib/onHidden.js': 3120,
        './lib/runOnce.js': 3122,
        './lib/whenActivated.js': 3123,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../types.js'),
                  s = e('./lib/bindReporter.js'),
                  o = e('./lib/getActivationStart.js'),
                  i = e('./lib/getVisibilityWatcher.js'),
                  a = e('./lib/initMetric.js'),
                  c = e('./lib/observe.js'),
                  u = e('./lib/onHidden.js'),
                  l = e('./lib/runOnce.js'),
                  d = e('./lib/whenActivated.js'),
                  f = [2500, 4e3],
                  h = {};
                (n.LCPThresholds = f),
                  (n.onLCP = (e, t = {}) => {
                    d.whenActivated(() => {
                      const n = i.getVisibilityWatcher(),
                        d = a.initMetric('LCP');
                      let p;
                      const m = e => {
                          const t = e[e.length - 1];
                          t &&
                            t.startTime < n.firstHiddenTime &&
                            ((d.value = Math.max(t.startTime - o.getActivationStart(), 0)),
                            (d.entries = [t]),
                            p());
                        },
                        g = c.observe('largest-contentful-paint', m);
                      if (g) {
                        p = s.bindReporter(e, d, f, t.reportAllChanges);
                        const n = l.runOnce(() => {
                          h[d.id] || (m(g.takeRecords()), g.disconnect(), (h[d.id] = !0), p(!0));
                        });
                        ['keydown', 'click'].forEach(e => {
                          r.WINDOW.document && addEventListener(e, () => setTimeout(n, 0), !0);
                        }),
                          u.onHidden(n);
                      }
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/getLCP.js',
      },
    ],
    [
      3113,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                n.bindReporter = (e, t, n, r) => {
                  let s, o;
                  return i => {
                    t.value >= 0 &&
                      (i || r) &&
                      ((o = t.value - (s || 0)),
                      (o || s === undefined) &&
                        ((s = t.value),
                        (t.delta = o),
                        (t.rating = ((e, t) =>
                          e > t[1] ? 'poor' : e > t[0] ? 'needs-improvement' : 'good')(t.value, n)),
                        e(t)));
                  };
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/bindReporter.js',
      },
    ],
    [
      3114,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                n.generateUniqueID = () =>
                  `v3-${Date.now()}-${Math.floor(8999999999999 * Math.random()) + 1e12}`;
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/generateUniqueID.js',
      },
    ],
    [
      3115,
      { './getNavigationEntry.js': 3116 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('./getNavigationEntry.js');
                n.getActivationStart = () => {
                  const e = r.getNavigationEntry();
                  return (e && e.activationStart) || 0;
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/getActivationStart.js',
      },
    ],
    [
      3116,
      { '../../../types.js': 3126 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../../types.js');
                n.getNavigationEntry = () =>
                  r.WINDOW.performance &&
                  performance.getEntriesByType &&
                  performance.getEntriesByType('navigation')[0];
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/getNavigationEntry.js',
      },
    ],
    [
      3117,
      { '../../../types.js': 3126 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../../types.js');
                let s = -1;
                const o = e => {
                  'hidden' === r.WINDOW.document.visibilityState &&
                    s > -1 &&
                    ((s = 'visibilitychange' === e.type ? e.timeStamp : 0),
                    removeEventListener('visibilitychange', o, !0),
                    removeEventListener('prerenderingchange', o, !0));
                };
                n.getVisibilityWatcher = () => (
                  r.WINDOW.document &&
                    s < 0 &&
                    ((s =
                      'hidden' !== r.WINDOW.document.visibilityState ||
                      r.WINDOW.document.prerendering
                        ? Infinity
                        : 0),
                    addEventListener('visibilitychange', o, !0),
                    addEventListener('prerenderingchange', o, !0)),
                  {
                    get firstHiddenTime() {
                      return s;
                    },
                  }
                );
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/getVisibilityWatcher.js',
      },
    ],
    [
      3118,
      {
        '../../../types.js': 3126,
        './generateUniqueID.js': 3114,
        './getActivationStart.js': 3115,
        './getNavigationEntry.js': 3116,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../../types.js'),
                  s = e('./generateUniqueID.js'),
                  o = e('./getActivationStart.js'),
                  i = e('./getNavigationEntry.js');
                n.initMetric = (e, t) => {
                  const n = i.getNavigationEntry();
                  let a = 'navigate';
                  n &&
                    ((r.WINDOW.document && r.WINDOW.document.prerendering) ||
                    o.getActivationStart() > 0
                      ? (a = 'prerender')
                      : r.WINDOW.document && r.WINDOW.document.wasDiscarded
                        ? (a = 'restore')
                        : n.type && (a = n.type.replace(/_/g, '-')));
                  return {
                    name: e,
                    value: void 0 === t ? -1 : t,
                    rating: 'good',
                    delta: 0,
                    entries: [],
                    id: s.generateUniqueID(),
                    navigationType: a,
                  };
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/initMetric.js',
      },
    ],
    [
      3119,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                n.observe = (e, t, n) => {
                  try {
                    if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                      const r = new PerformanceObserver(e => {
                        Promise.resolve().then(() => {
                          t(e.getEntries());
                        });
                      });
                      return r.observe(Object.assign({ type: e, buffered: !0 }, n || {})), r;
                    }
                  } catch (e) {}
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/observe.js',
      },
    ],
    [
      3120,
      { '../../../types.js': 3126 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../../types.js');
                n.onHidden = e => {
                  const t = t => {
                    ('pagehide' === t.type ||
                      (r.WINDOW.document && 'hidden' === r.WINDOW.document.visibilityState)) &&
                      e(t);
                  };
                  r.WINDOW.document &&
                    (addEventListener('visibilitychange', t, !0),
                    addEventListener('pagehide', t, !0));
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/onHidden.js',
      },
    ],
    [
      3121,
      { '../observe.js': 3119 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../observe.js');
                let s = 0,
                  o = Infinity,
                  i = 0;
                const a = e => {
                  e.forEach(e => {
                    e.interactionId &&
                      ((o = Math.min(o, e.interactionId)),
                      (i = Math.max(i, e.interactionId)),
                      (s = i ? (i - o) / 7 + 1 : 0));
                  });
                };
                let c;
                (n.getInteractionCount = () => (c ? s : performance.interactionCount || 0)),
                  (n.initInteractionCountPolyfill = () => {
                    'interactionCount' in performance ||
                      c ||
                      (c = r.observe('event', a, {
                        type: 'event',
                        buffered: !0,
                        durationThreshold: 0,
                      }));
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js',
      },
    ],
    [
      3122,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                n.runOnce = e => {
                  let t = !1;
                  return n => {
                    t || (e(n), (t = !0));
                  };
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/runOnce.js',
      },
    ],
    [
      3123,
      { '../../../types.js': 3126 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../../types.js');
                n.whenActivated = e => {
                  r.WINDOW.document && r.WINDOW.document.prerendering
                    ? addEventListener('prerenderingchange', () => e(), !0)
                    : e();
                };
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/lib/whenActivated.js',
      },
    ],
    [
      3124,
      {
        './lib/bindReporter.js': 3113,
        './lib/getActivationStart.js': 3115,
        './lib/getVisibilityWatcher.js': 3117,
        './lib/initMetric.js': 3118,
        './lib/observe.js': 3119,
        './lib/whenActivated.js': 3123,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('./lib/bindReporter.js'),
                  s = e('./lib/getActivationStart.js'),
                  o = e('./lib/getVisibilityWatcher.js'),
                  i = e('./lib/initMetric.js'),
                  a = e('./lib/observe.js'),
                  c = e('./lib/whenActivated.js'),
                  u = [1800, 3e3];
                (n.FCPThresholds = u),
                  (n.onFCP = (e, t = {}) => {
                    c.whenActivated(() => {
                      const n = o.getVisibilityWatcher(),
                        c = i.initMetric('FCP');
                      let l;
                      const d = a.observe('paint', e => {
                        e.forEach(e => {
                          'first-contentful-paint' === e.name &&
                            (d.disconnect(),
                            e.startTime < n.firstHiddenTime &&
                              ((c.value = Math.max(e.startTime - s.getActivationStart(), 0)),
                              c.entries.push(e),
                              l(!0)));
                        });
                      });
                      d && (l = r.bindReporter(e, c, u, t.reportAllChanges));
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/onFCP.js',
      },
    ],
    [
      3125,
      {
        '../../types.js': 3126,
        './lib/bindReporter.js': 3113,
        './lib/getActivationStart.js': 3115,
        './lib/getNavigationEntry.js': 3116,
        './lib/initMetric.js': 3118,
        './lib/whenActivated.js': 3123,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('../../types.js'),
                  s = e('./lib/bindReporter.js'),
                  o = e('./lib/getActivationStart.js'),
                  i = e('./lib/getNavigationEntry.js'),
                  a = e('./lib/initMetric.js'),
                  c = e('./lib/whenActivated.js'),
                  u = [800, 1800],
                  l = e => {
                    r.WINDOW.document && r.WINDOW.document.prerendering
                      ? c.whenActivated(() => l(e))
                      : r.WINDOW.document && 'complete' !== r.WINDOW.document.readyState
                        ? addEventListener('load', () => l(e), !0)
                        : setTimeout(e, 0);
                  };
                (n.TTFBThresholds = u),
                  (n.onTTFB = (e, t = {}) => {
                    const n = a.initMetric('TTFB'),
                      r = s.bindReporter(e, n, u, t.reportAllChanges);
                    l(() => {
                      const e = i.getNavigationEntry();
                      if (e) {
                        const t = e.responseStart;
                        if (t <= 0 || t > performance.now()) return;
                        (n.value = Math.max(t - o.getActivationStart(), 0)),
                          (n.entries = [e]),
                          r(!0);
                      }
                    });
                  });
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/metrics/web-vitals/onTTFB.js',
      },
    ],
    [
      3126,
      { '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils').GLOBAL_OBJ;
                n.WINDOW = r;
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/browser-utils',
        file: 'node_modules/@sentry-internal/browser-utils/build/cjs/types.js',
      },
    ],
    [
      3127,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = s.GLOBAL_OBJ,
                  i = o.document,
                  a = o.navigator,
                  c = 'Report a Bug',
                  u = 'widget',
                  l = (e, t = { includeReplay: !0 }) => {
                    if (!e.message) throw new Error('Unable to submit feedback with empty message');
                    const n = r.getClient();
                    if (!n) throw new Error('No client setup, cannot send feedback.');
                    e.tags && Object.keys(e.tags).length && r.getCurrentScope().setTags(e.tags);
                    const o = r.captureFeedback(
                      { source: 'api', url: s.getLocationHref(), ...e },
                      t
                    );
                    return new Promise((e, t) => {
                      const r = setTimeout(
                          () => t('Unable to determine if Feedback was correctly sent.'),
                          5e3
                        ),
                        s = n.on('afterSendEvent', (n, i) => {
                          if (n.event_id === o)
                            return (
                              clearTimeout(r),
                              s(),
                              i &&
                                'number' == typeof i.statusCode &&
                                i.statusCode >= 200 &&
                                i.statusCode < 300 &&
                                e(o),
                              i && 'number' == typeof i.statusCode && 0 === i.statusCode
                                ? t(
                                    'Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.'
                                  )
                                : i && 'number' == typeof i.statusCode && 403 === i.statusCode
                                  ? t(
                                      'Unable to send Feedback. This could be because this domain is not in your list of allowed domains.'
                                    )
                                  : t(
                                      'Unable to send Feedback. This could be because of network issues, or because you are using an ad-blocker'
                                    )
                            );
                        });
                    });
                  },
                  d = 'undefined' == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
                function f(e, t) {
                  return {
                    ...e,
                    ...t,
                    tags: { ...e.tags, ...t.tags },
                    onFormOpen: () => {
                      t.onFormOpen && t.onFormOpen(), e.onFormOpen && e.onFormOpen();
                    },
                    onFormClose: () => {
                      t.onFormClose && t.onFormClose(), e.onFormClose && e.onFormClose();
                    },
                    onSubmitSuccess: n => {
                      t.onSubmitSuccess && t.onSubmitSuccess(n),
                        e.onSubmitSuccess && e.onSubmitSuccess(n);
                    },
                    onSubmitError: n => {
                      t.onSubmitError && t.onSubmitError(n), e.onSubmitError && e.onSubmitError(n);
                    },
                    onFormSubmitted: () => {
                      t.onFormSubmitted && t.onFormSubmitted(),
                        e.onFormSubmitted && e.onFormSubmitted();
                    },
                    themeDark: { ...e.themeDark, ...t.themeDark },
                    themeLight: { ...e.themeLight, ...t.themeLight },
                  };
                }
                function h(e, t) {
                  return (
                    Object.entries(t).forEach(([t, n]) => {
                      e.setAttributeNS(null, t, n);
                    }),
                    e
                  );
                }
                const p = 20,
                  m = 'http://www.w3.org/2000/svg';
                function g({ triggerLabel: e, triggerAriaLabel: t, shadow: n, styleNonce: r }) {
                  const s = i.createElement('button');
                  if (
                    ((s.type = 'button'),
                    (s.className = 'widget__actor'),
                    (s.ariaHidden = 'false'),
                    (s.ariaLabel = t || e || c),
                    s.appendChild(
                      (function () {
                        const e = e => o.document.createElementNS(m, e),
                          t = h(e('svg'), {
                            width: `${p}`,
                            height: `${p}`,
                            viewBox: `0 0 ${p} ${p}`,
                            fill: 'var(--actor-color, var(--foreground))',
                          }),
                          n = h(e('g'), { clipPath: 'url(#clip0_57_80)' }),
                          r = h(e('path'), {
                            'fill-rule': 'evenodd',
                            'clip-rule': 'evenodd',
                            d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',
                          });
                        t.appendChild(n).appendChild(r);
                        const s = e('defs'),
                          i = h(e('clipPath'), { id: 'clip0_57_80' }),
                          a = h(e('rect'), { width: `${p}`, height: `${p}`, fill: 'white' });
                        return (
                          i.appendChild(a),
                          s.appendChild(i),
                          t.appendChild(s).appendChild(i).appendChild(a),
                          t
                        );
                      })()
                    ),
                    e)
                  ) {
                    const t = i.createElement('span');
                    t.appendChild(i.createTextNode(e)), s.appendChild(t);
                  }
                  const a = (function (e) {
                    const t = i.createElement('style');
                    return (
                      (t.textContent =
                        '\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden="true"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n'),
                      e && t.setAttribute('nonce', e),
                      t
                    );
                  })(r);
                  return {
                    el: s,
                    appendToDom() {
                      n.appendChild(a), n.appendChild(s);
                    },
                    removeFromDom() {
                      n.removeChild(s), n.removeChild(a);
                    },
                    show() {
                      s.ariaHidden = 'false';
                    },
                    hide() {
                      s.ariaHidden = 'true';
                    },
                  };
                }
                const y = 'rgba(88, 74, 192, 1)',
                  b = {
                    foreground: '#2b2233',
                    background: '#ffffff',
                    accentForeground: 'white',
                    accentBackground: y,
                    successColor: '#268d75',
                    errorColor: '#df3338',
                    border: '1.5px solid rgba(41, 35, 47, 0.13)',
                    boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',
                    outline: '1px auto var(--accent-background)',
                    interactiveFilter: 'brightness(95%)',
                  },
                  w = {
                    foreground: '#ebe6ef',
                    background: '#29232f',
                    accentForeground: 'white',
                    accentBackground: y,
                    successColor: '#2da98c',
                    errorColor: '#f55459',
                    border: '1.5px solid rgba(235, 230, 239, 0.15)',
                    boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',
                    outline: '1px auto var(--accent-background)',
                    interactiveFilter: 'brightness(150%)',
                  };
                function v(e) {
                  return `\n  --foreground: ${e.foreground};\n  --background: ${e.background};\n  --accent-foreground: ${e.accentForeground};\n  --accent-background: ${e.accentBackground};\n  --success-color: ${e.successColor};\n  --error-color: ${e.errorColor};\n  --border: ${e.border};\n  --box-shadow: ${e.boxShadow};\n  --outline: ${e.outline};\n  --interactive-filter: ${e.interactiveFilter};\n  `;
                }
                var _,
                  E,
                  S,
                  x,
                  T,
                  I,
                  k,
                  A = {},
                  C = [],
                  B = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,
                  O = Array.isArray;
                function j(e, t) {
                  for (var n in t) e[n] = t[n];
                  return e;
                }
                function R(e) {
                  var t = e.parentNode;
                  t && t.removeChild(e);
                }
                function P(e, t, n) {
                  var r,
                    s,
                    o,
                    i = {};
                  for (o in t) 'key' == o ? (r = t[o]) : 'ref' == o ? (s = t[o]) : (i[o] = t[o]);
                  if (
                    (arguments.length > 2 &&
                      (i.children = arguments.length > 3 ? _.call(arguments, 2) : n),
                    'function' == typeof e && null != e.defaultProps)
                  )
                    for (o in e.defaultProps) void 0 === i[o] && (i[o] = e.defaultProps[o]);
                  return N(e, i, r, s, null);
                }
                function N(e, t, n, r, s) {
                  var o = {
                    type: e,
                    props: t,
                    key: n,
                    ref: r,
                    __k: null,
                    __: null,
                    __b: 0,
                    __e: null,
                    __d: void 0,
                    __c: null,
                    constructor: void 0,
                    __v: null == s ? ++S : s,
                    __i: -1,
                    __u: 0,
                  };
                  return null == s && null != E.vnode && E.vnode(o), o;
                }
                function L(e) {
                  return e.children;
                }
                function M(e, t) {
                  (this.props = e), (this.context = t);
                }
                function D(e, t) {
                  if (null == t) return e.__ ? D(e.__, e.__i + 1) : null;
                  for (var n; t < e.__k.length; t++)
                    if (null != (n = e.__k[t]) && null != n.__e) return n.__e;
                  return 'function' == typeof e.type ? D(e) : null;
                }
                function F(e, t, n) {
                  var r,
                    s = e.__v,
                    o = s.__e,
                    i = e.__P;
                  if (i)
                    return (
                      ((r = j({}, s)).__v = s.__v + 1),
                      E.vnode && E.vnode(r),
                      Y(
                        i,
                        r,
                        s,
                        e.__n,
                        void 0 !== i.ownerSVGElement,
                        32 & s.__u ? [o] : null,
                        t,
                        null == o ? D(s) : o,
                        !!(32 & s.__u),
                        n
                      ),
                      (r.__.__k[r.__i] = r),
                      (r.__d = void 0),
                      r.__e != o && H(r),
                      r
                    );
                }
                function H(e) {
                  var t, n;
                  if (null != (e = e.__) && null != e.__c) {
                    for (e.__e = e.__c.base = null, t = 0; t < e.__k.length; t++)
                      if (null != (n = e.__k[t]) && null != n.__e) {
                        e.__e = e.__c.base = n.__e;
                        break;
                      }
                    return H(e);
                  }
                }
                function U(e) {
                  ((!e.__d && (e.__d = !0) && x.push(e) && !W.__r++) ||
                    T !== E.debounceRendering) &&
                    ((T = E.debounceRendering) || I)(W);
                }
                function W() {
                  var e,
                    t,
                    n,
                    r = [],
                    s = [];
                  for (x.sort(k); (e = x.shift()); )
                    e.__d &&
                      ((n = x.length),
                      (t = F(e, r, s) || t),
                      0 === n || x.length > n
                        ? (J(r, t, s), (s.length = r.length = 0), (t = void 0), x.sort(k))
                        : t && E.__c && E.__c(t, C));
                  t && J(r, t, s), (W.__r = 0);
                }
                function G(e, t, n, r, s, o, i, a, c, u, l) {
                  var d,
                    f,
                    h,
                    p,
                    m,
                    g = (r && r.__k) || C,
                    y = t.length;
                  for (
                    n.__d = c,
                      (function (e, t, n) {
                        var r,
                          s,
                          o,
                          i,
                          a,
                          c = t.length,
                          u = n.length,
                          l = u,
                          d = 0;
                        for (e.__k = [], r = 0; r < c; r++)
                          null !=
                          (s = e.__k[r] =
                            null == (s = t[r]) || 'boolean' == typeof s || 'function' == typeof s
                              ? null
                              : 'string' == typeof s ||
                                  'number' == typeof s ||
                                  'bigint' == typeof s ||
                                  s.constructor == String
                                ? N(null, s, null, null, s)
                                : O(s)
                                  ? N(L, { children: s }, null, null, null)
                                  : void 0 === s.constructor && s.__b > 0
                                    ? N(s.type, s.props, s.key, s.ref ? s.ref : null, s.__v)
                                    : s)
                            ? ((s.__ = e),
                              (s.__b = e.__b + 1),
                              (a = q(s, n, (i = r + d), l)),
                              (s.__i = a),
                              (o = null),
                              -1 !== a && (l--, (o = n[a]) && (o.__u |= 131072)),
                              null == o || null === o.__v
                                ? (-1 == a && d--, 'function' != typeof s.type && (s.__u |= 65536))
                                : a !== i &&
                                  (a === i + 1
                                    ? d++
                                    : a > i
                                      ? l > c - i
                                        ? (d += a - i)
                                        : d--
                                      : (d = a < i && a == i - 1 ? a - i : 0),
                                  a !== r + d && (s.__u |= 65536)))
                            : (o = n[r]) &&
                              null == o.key &&
                              o.__e &&
                              (o.__e == e.__d && (e.__d = D(o)), ee(o, o, !1), (n[r] = null), l--);
                        if (l)
                          for (r = 0; r < u; r++)
                            null != (o = n[r]) &&
                              !(131072 & o.__u) &&
                              (o.__e == e.__d && (e.__d = D(o)), ee(o, o));
                      })(n, t, g),
                      c = n.__d,
                      d = 0;
                    d < y;
                    d++
                  )
                    null != (h = n.__k[d]) &&
                      'boolean' != typeof h &&
                      'function' != typeof h &&
                      ((f = -1 === h.__i ? A : g[h.__i] || A),
                      (h.__i = d),
                      Y(e, h, f, s, o, i, a, c, u, l),
                      (p = h.__e),
                      h.ref &&
                        f.ref != h.ref &&
                        (f.ref && Q(f.ref, null, h), l.push(h.ref, h.__c || p, h)),
                      null == m && null != p && (m = p),
                      65536 & h.__u || f.__k === h.__k
                        ? (c = z(h, c, e))
                        : 'function' == typeof h.type && void 0 !== h.__d
                          ? (c = h.__d)
                          : p && (c = p.nextSibling),
                      (h.__d = void 0),
                      (h.__u &= -196609));
                  (n.__d = c), (n.__e = m);
                }
                function z(e, t, n) {
                  var r, s;
                  if ('function' == typeof e.type) {
                    for (r = e.__k, s = 0; r && s < r.length; s++)
                      r[s] && ((r[s].__ = e), (t = z(r[s], t, n)));
                    return t;
                  }
                  e.__e != t && (n.insertBefore(e.__e, t || null), (t = e.__e));
                  do {
                    t = t && t.nextSibling;
                  } while (null != t && 8 === t.nodeType);
                  return t;
                }
                function q(e, t, n, r) {
                  var s = e.key,
                    o = e.type,
                    i = n - 1,
                    a = n + 1,
                    c = t[n];
                  if (null === c || (c && s == c.key && o === c.type)) return n;
                  if (r > (null == c || 131072 & c.__u ? 0 : 1))
                    for (; i >= 0 || a < t.length; ) {
                      if (i >= 0) {
                        if ((c = t[i]) && !(131072 & c.__u) && s == c.key && o === c.type) return i;
                        i--;
                      }
                      if (a < t.length) {
                        if ((c = t[a]) && !(131072 & c.__u) && s == c.key && o === c.type) return a;
                        a++;
                      }
                    }
                  return -1;
                }
                function $(e, t, n) {
                  '-' === t[0]
                    ? e.setProperty(t, null == n ? '' : n)
                    : (e[t] = null == n ? '' : 'number' != typeof n || B.test(t) ? n : n + 'px');
                }
                function V(e, t, n, r, s) {
                  var o;
                  e: if ('style' === t)
                    if ('string' == typeof n) e.style.cssText = n;
                    else {
                      if (('string' == typeof r && (e.style.cssText = r = ''), r))
                        for (t in r) (n && t in n) || $(e.style, t, '');
                      if (n) for (t in n) (r && n[t] === r[t]) || $(e.style, t, n[t]);
                    }
                  else if ('o' === t[0] && 'n' === t[1])
                    (o = t !== (t = t.replace(/(PointerCapture)$|Capture$/i, '$1'))),
                      (t = t.toLowerCase() in e ? t.toLowerCase().slice(2) : t.slice(2)),
                      e.l || (e.l = {}),
                      (e.l[t + o] = n),
                      n
                        ? r
                          ? (n.u = r.u)
                          : ((n.u = Date.now()), e.addEventListener(t, o ? X : K, o))
                        : e.removeEventListener(t, o ? X : K, o);
                  else {
                    if (s) t = t.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');
                    else if (
                      'width' !== t &&
                      'height' !== t &&
                      'href' !== t &&
                      'list' !== t &&
                      'form' !== t &&
                      'tabIndex' !== t &&
                      'download' !== t &&
                      'rowSpan' !== t &&
                      'colSpan' !== t &&
                      'role' !== t &&
                      t in e
                    )
                      try {
                        e[t] = null == n ? '' : n;
                        break e;
                      } catch (e) {}
                    'function' == typeof n ||
                      (null == n || (!1 === n && '-' !== t[4])
                        ? e.removeAttribute(t)
                        : e.setAttribute(t, n));
                  }
                }
                function K(e) {
                  if (this.l) {
                    var t = this.l[e.type + !1];
                    if (e.t) {
                      if (e.t <= t.u) return;
                    } else e.t = Date.now();
                    return t(E.event ? E.event(e) : e);
                  }
                }
                function X(e) {
                  if (this.l) return this.l[e.type + !0](E.event ? E.event(e) : e);
                }
                function Y(e, t, n, r, s, o, i, a, c, u) {
                  var l,
                    d,
                    f,
                    h,
                    p,
                    m,
                    g,
                    y,
                    b,
                    w,
                    v,
                    _,
                    S,
                    x,
                    T,
                    I = t.type;
                  if (void 0 !== t.constructor) return null;
                  128 & n.__u && ((c = !!(32 & n.__u)), (o = [(a = t.__e = n.__e)])),
                    (l = E.__b) && l(t);
                  e: if ('function' == typeof I)
                    try {
                      if (
                        ((y = t.props),
                        (b = (l = I.contextType) && r[l.__c]),
                        (w = l ? (b ? b.props.value : l.__) : r),
                        n.__c
                          ? (g = (d = t.__c = n.__c).__ = d.__E)
                          : ('prototype' in I && I.prototype.render
                              ? (t.__c = d = new I(y, w))
                              : ((t.__c = d = new M(y, w)), (d.constructor = I), (d.render = te)),
                            b && b.sub(d),
                            (d.props = y),
                            d.state || (d.state = {}),
                            (d.context = w),
                            (d.__n = r),
                            (f = d.__d = !0),
                            (d.__h = []),
                            (d._sb = [])),
                        null == d.__s && (d.__s = d.state),
                        null != I.getDerivedStateFromProps &&
                          (d.__s == d.state && (d.__s = j({}, d.__s)),
                          j(d.__s, I.getDerivedStateFromProps(y, d.__s))),
                        (h = d.props),
                        (p = d.state),
                        (d.__v = t),
                        f)
                      )
                        null == I.getDerivedStateFromProps &&
                          null != d.componentWillMount &&
                          d.componentWillMount(),
                          null != d.componentDidMount && d.__h.push(d.componentDidMount);
                      else {
                        if (
                          (null == I.getDerivedStateFromProps &&
                            y !== h &&
                            null != d.componentWillReceiveProps &&
                            d.componentWillReceiveProps(y, w),
                          !d.__e &&
                            ((null != d.shouldComponentUpdate &&
                              !1 === d.shouldComponentUpdate(y, d.__s, w)) ||
                              t.__v === n.__v))
                        ) {
                          for (
                            t.__v !== n.__v && ((d.props = y), (d.state = d.__s), (d.__d = !1)),
                              t.__e = n.__e,
                              t.__k = n.__k,
                              t.__k.forEach(function (e) {
                                e && (e.__ = t);
                              }),
                              v = 0;
                            v < d._sb.length;
                            v++
                          )
                            d.__h.push(d._sb[v]);
                          (d._sb = []), d.__h.length && i.push(d);
                          break e;
                        }
                        null != d.componentWillUpdate && d.componentWillUpdate(y, d.__s, w),
                          null != d.componentDidUpdate &&
                            d.__h.push(function () {
                              d.componentDidUpdate(h, p, m);
                            });
                      }
                      if (
                        ((d.context = w),
                        (d.props = y),
                        (d.__P = e),
                        (d.__e = !1),
                        (_ = E.__r),
                        (S = 0),
                        'prototype' in I && I.prototype.render)
                      ) {
                        for (
                          d.state = d.__s,
                            d.__d = !1,
                            _ && _(t),
                            l = d.render(d.props, d.state, d.context),
                            x = 0;
                          x < d._sb.length;
                          x++
                        )
                          d.__h.push(d._sb[x]);
                        d._sb = [];
                      } else
                        do {
                          (d.__d = !1),
                            _ && _(t),
                            (l = d.render(d.props, d.state, d.context)),
                            (d.state = d.__s);
                        } while (d.__d && ++S < 25);
                      (d.state = d.__s),
                        null != d.getChildContext && (r = j(j({}, r), d.getChildContext())),
                        f ||
                          null == d.getSnapshotBeforeUpdate ||
                          (m = d.getSnapshotBeforeUpdate(h, p)),
                        G(
                          e,
                          O((T = null != l && l.type === L && null == l.key ? l.props.children : l))
                            ? T
                            : [T],
                          t,
                          n,
                          r,
                          s,
                          o,
                          i,
                          a,
                          c,
                          u
                        ),
                        (d.base = t.__e),
                        (t.__u &= -161),
                        d.__h.length && i.push(d),
                        g && (d.__E = d.__ = null);
                    } catch (e) {
                      (t.__v = null),
                        c || null != o
                          ? ((t.__e = a), (t.__u |= c ? 160 : 32), (o[o.indexOf(a)] = null))
                          : ((t.__e = n.__e), (t.__k = n.__k)),
                        E.__e(e, t, n);
                    }
                  else
                    null == o && t.__v === n.__v
                      ? ((t.__k = n.__k), (t.__e = n.__e))
                      : (t.__e = Z(n.__e, t, n, r, s, o, i, c, u));
                  (l = E.diffed) && l(t);
                }
                function J(e, t, n) {
                  for (var r = 0; r < n.length; r++) Q(n[r], n[++r], n[++r]);
                  E.__c && E.__c(t, e),
                    e.some(function (t) {
                      try {
                        (e = t.__h),
                          (t.__h = []),
                          e.some(function (e) {
                            e.call(t);
                          });
                      } catch (e) {
                        E.__e(e, t.__v);
                      }
                    });
                }
                function Z(e, t, n, r, s, o, i, a, c) {
                  var u,
                    l,
                    d,
                    f,
                    h,
                    p,
                    m,
                    g = n.props,
                    y = t.props,
                    b = t.type;
                  if (('svg' === b && (s = !0), null != o))
                    for (u = 0; u < o.length; u++)
                      if (
                        (h = o[u]) &&
                        'setAttribute' in h == !!b &&
                        (b ? h.localName === b : 3 === h.nodeType)
                      ) {
                        (e = h), (o[u] = null);
                        break;
                      }
                  if (null == e) {
                    if (null === b) return document.createTextNode(y);
                    (e = s
                      ? document.createElementNS('http://www.w3.org/2000/svg', b)
                      : document.createElement(b, y.is && y)),
                      (o = null),
                      (a = !1);
                  }
                  if (null === b) g === y || (a && e.data === y) || (e.data = y);
                  else {
                    if (((o = o && _.call(e.childNodes)), (g = n.props || A), !a && null != o))
                      for (g = {}, u = 0; u < e.attributes.length; u++)
                        g[(h = e.attributes[u]).name] = h.value;
                    for (u in g)
                      (h = g[u]),
                        'children' == u ||
                          ('dangerouslySetInnerHTML' == u
                            ? (d = h)
                            : 'key' === u || u in y || V(e, u, null, h, s));
                    for (u in y)
                      (h = y[u]),
                        'children' == u
                          ? (f = h)
                          : 'dangerouslySetInnerHTML' == u
                            ? (l = h)
                            : 'value' == u
                              ? (p = h)
                              : 'checked' == u
                                ? (m = h)
                                : 'key' === u ||
                                  (a && 'function' != typeof h) ||
                                  g[u] === h ||
                                  V(e, u, h, g[u], s);
                    if (l)
                      a ||
                        (d && (l.__html === d.__html || l.__html === e.innerHTML)) ||
                        (e.innerHTML = l.__html),
                        (t.__k = []);
                    else if (
                      (d && (e.innerHTML = ''),
                      G(
                        e,
                        O(f) ? f : [f],
                        t,
                        n,
                        r,
                        s && 'foreignObject' !== b,
                        o,
                        i,
                        o ? o[0] : n.__k && D(n, 0),
                        a,
                        c
                      ),
                      null != o)
                    )
                      for (u = o.length; u--; ) null != o[u] && R(o[u]);
                    a ||
                      ((u = 'value'),
                      void 0 !== p &&
                        (p !== e[u] ||
                          ('progress' === b && !p) ||
                          ('option' === b && p !== g[u])) &&
                        V(e, u, p, g[u], !1),
                      (u = 'checked'),
                      void 0 !== m && m !== e[u] && V(e, u, m, g[u], !1));
                  }
                  return e;
                }
                function Q(e, t, n) {
                  try {
                    'function' == typeof e ? e(t) : (e.current = t);
                  } catch (e) {
                    E.__e(e, n);
                  }
                }
                function ee(e, t, n) {
                  var r, s;
                  if (
                    (E.unmount && E.unmount(e),
                    (r = e.ref) && ((r.current && r.current !== e.__e) || Q(r, null, t)),
                    null != (r = e.__c))
                  ) {
                    if (r.componentWillUnmount)
                      try {
                        r.componentWillUnmount();
                      } catch (e) {
                        E.__e(e, t);
                      }
                    (r.base = r.__P = null), (e.__c = void 0);
                  }
                  if ((r = e.__k))
                    for (s = 0; s < r.length; s++)
                      r[s] && ee(r[s], t, n || 'function' != typeof e.type);
                  n || null == e.__e || R(e.__e), (e.__ = e.__e = e.__d = void 0);
                }
                function te(e, t, n) {
                  return this.constructor(e, n);
                }
                (_ = C.slice),
                  (E = {
                    __e: function (e, t, n, r) {
                      for (var s, o, i; (t = t.__); )
                        if ((s = t.__c) && !s.__)
                          try {
                            if (
                              ((o = s.constructor) &&
                                null != o.getDerivedStateFromError &&
                                (s.setState(o.getDerivedStateFromError(e)), (i = s.__d)),
                              null != s.componentDidCatch &&
                                (s.componentDidCatch(e, r || {}), (i = s.__d)),
                              i)
                            )
                              return (s.__E = s);
                          } catch (t) {
                            e = t;
                          }
                      throw e;
                    },
                  }),
                  (S = 0),
                  (M.prototype.setState = function (e, t) {
                    var n;
                    (n =
                      null != this.__s && this.__s !== this.state
                        ? this.__s
                        : (this.__s = j({}, this.state))),
                      'function' == typeof e && (e = e(j({}, n), this.props)),
                      e && j(n, e),
                      null != e && this.__v && (t && this._sb.push(t), U(this));
                  }),
                  (M.prototype.forceUpdate = function (e) {
                    this.__v && ((this.__e = !0), e && this.__h.push(e), U(this));
                  }),
                  (M.prototype.render = L),
                  (x = []),
                  (I =
                    'function' == typeof Promise
                      ? Promise.prototype.then.bind(Promise.resolve())
                      : setTimeout),
                  (k = function (e, t) {
                    return e.__v.__b - t.__v.__b;
                  }),
                  (W.__r = 0);
                var ne,
                  re,
                  se,
                  oe,
                  ie = 0,
                  ae = [],
                  ce = [],
                  ue = E,
                  le = ue.__b,
                  de = ue.__r,
                  fe = ue.diffed,
                  he = ue.__c,
                  pe = ue.unmount,
                  me = ue.__;
                function ge(e, t) {
                  ue.__h && ue.__h(re, e, ie || t), (ie = 0);
                  var n = re.__H || (re.__H = { __: [], __h: [] });
                  return e >= n.__.length && n.__.push({ __V: ce }), n.__[e];
                }
                function ye(e) {
                  return (ie = 1), be(Ae, e);
                }
                function be(e, t, n) {
                  var r = ge(ne++, 2);
                  if (
                    ((r.t = e),
                    !r.__c &&
                      ((r.__ = [
                        n ? n(t) : Ae(void 0, t),
                        function (e) {
                          var t = r.__N ? r.__N[0] : r.__[0],
                            n = r.t(t, e);
                          t !== n && ((r.__N = [n, r.__[1]]), r.__c.setState({}));
                        },
                      ]),
                      (r.__c = re),
                      !re.u))
                  ) {
                    var s = function (e, t, n) {
                      if (!r.__c.__H) return !0;
                      var s = r.__c.__H.__.filter(function (e) {
                        return !!e.__c;
                      });
                      if (
                        s.every(function (e) {
                          return !e.__N;
                        })
                      )
                        return !o || o.call(this, e, t, n);
                      var i = !1;
                      return (
                        s.forEach(function (e) {
                          if (e.__N) {
                            var t = e.__[0];
                            (e.__ = e.__N), (e.__N = void 0), t !== e.__[0] && (i = !0);
                          }
                        }),
                        !(!i && r.__c.props === e) && (!o || o.call(this, e, t, n))
                      );
                    };
                    re.u = !0;
                    var o = re.shouldComponentUpdate,
                      i = re.componentWillUpdate;
                    (re.componentWillUpdate = function (e, t, n) {
                      if (this.__e) {
                        var r = o;
                        (o = void 0), s(e, t, n), (o = r);
                      }
                      i && i.call(this, e, t, n);
                    }),
                      (re.shouldComponentUpdate = s);
                  }
                  return r.__N || r.__;
                }
                function we(e, t) {
                  var n = ge(ne++, 4);
                  !ue.__s && ke(n.__H, t) && ((n.__ = e), (n.i = t), re.__h.push(n));
                }
                function ve(e, t) {
                  var n = ge(ne++, 7);
                  return ke(n.__H, t) ? ((n.__V = e()), (n.i = t), (n.__h = e), n.__V) : n.__;
                }
                function _e(e, t) {
                  return (
                    (ie = 8),
                    ve(function () {
                      return e;
                    }, t)
                  );
                }
                function Ee() {
                  for (var e; (e = ae.shift()); )
                    if (e.__P && e.__H)
                      try {
                        e.__H.__h.forEach(Te), e.__H.__h.forEach(Ie), (e.__H.__h = []);
                      } catch (t) {
                        (e.__H.__h = []), ue.__e(t, e.__v);
                      }
                }
                (ue.__b = function (e) {
                  (re = null), le && le(e);
                }),
                  (ue.__ = function (e, t) {
                    t.__k && t.__k.__m && (e.__m = t.__k.__m), me && me(e, t);
                  }),
                  (ue.__r = function (e) {
                    de && de(e), (ne = 0);
                    var t = (re = e.__c).__H;
                    t &&
                      (se === re
                        ? ((t.__h = []),
                          (re.__h = []),
                          t.__.forEach(function (e) {
                            e.__N && (e.__ = e.__N), (e.__V = ce), (e.__N = e.i = void 0);
                          }))
                        : (t.__h.forEach(Te), t.__h.forEach(Ie), (t.__h = []), (ne = 0))),
                      (se = re);
                  }),
                  (ue.diffed = function (e) {
                    fe && fe(e);
                    var t = e.__c;
                    t &&
                      t.__H &&
                      (t.__H.__h.length &&
                        ((1 !== ae.push(t) && oe === ue.requestAnimationFrame) ||
                          ((oe = ue.requestAnimationFrame) || xe)(Ee)),
                      t.__H.__.forEach(function (e) {
                        e.i && (e.__H = e.i),
                          e.__V !== ce && (e.__ = e.__V),
                          (e.i = void 0),
                          (e.__V = ce);
                      })),
                      (se = re = null);
                  }),
                  (ue.__c = function (e, t) {
                    t.some(function (e) {
                      try {
                        e.__h.forEach(Te),
                          (e.__h = e.__h.filter(function (e) {
                            return !e.__ || Ie(e);
                          }));
                      } catch (n) {
                        t.some(function (e) {
                          e.__h && (e.__h = []);
                        }),
                          (t = []),
                          ue.__e(n, e.__v);
                      }
                    }),
                      he && he(e, t);
                  }),
                  (ue.unmount = function (e) {
                    pe && pe(e);
                    var t,
                      n = e.__c;
                    n &&
                      n.__H &&
                      (n.__H.__.forEach(function (e) {
                        try {
                          Te(e);
                        } catch (e) {
                          t = e;
                        }
                      }),
                      (n.__H = void 0),
                      t && ue.__e(t, n.__v));
                  });
                var Se = 'function' == typeof requestAnimationFrame;
                function xe(e) {
                  var t,
                    n = function () {
                      clearTimeout(r), Se && cancelAnimationFrame(t), setTimeout(e);
                    },
                    r = setTimeout(n, 100);
                  Se && (t = requestAnimationFrame(n));
                }
                function Te(e) {
                  var t = re,
                    n = e.__c;
                  'function' == typeof n && ((e.__c = void 0), n()), (re = t);
                }
                function Ie(e) {
                  var t = re;
                  (e.__c = e.__()), (re = t);
                }
                function ke(e, t) {
                  return (
                    !e ||
                    e.length !== t.length ||
                    t.some(function (t, n) {
                      return t !== e[n];
                    })
                  );
                }
                function Ae(e, t) {
                  return 'function' == typeof t ? t(e) : t;
                }
                const Ce = {
                    __proto__: null,
                    useCallback: _e,
                    useContext: function (e) {
                      var t = re.context[e.__c],
                        n = ge(ne++, 9);
                      return (
                        (n.c = e),
                        t ? (null == n.__ && ((n.__ = !0), t.sub(re)), t.props.value) : e.__
                      );
                    },
                    useDebugValue: function (e, t) {
                      ue.useDebugValue && ue.useDebugValue(t ? t(e) : e);
                    },
                    useEffect: function (e, t) {
                      var n = ge(ne++, 3);
                      !ue.__s && ke(n.__H, t) && ((n.__ = e), (n.i = t), re.__H.__h.push(n));
                    },
                    useErrorBoundary: function (e) {
                      var t = ge(ne++, 10),
                        n = ye();
                      return (
                        (t.__ = e),
                        re.componentDidCatch ||
                          (re.componentDidCatch = function (e, r) {
                            t.__ && t.__(e, r), n[1](e);
                          }),
                        [
                          n[0],
                          function () {
                            n[1](void 0);
                          },
                        ]
                      );
                    },
                    useId: function () {
                      var e = ge(ne++, 11);
                      if (!e.__) {
                        for (var t = re.__v; null !== t && !t.__m && null !== t.__; ) t = t.__;
                        var n = t.__m || (t.__m = [0, 0]);
                        e.__ = 'P' + n[0] + '-' + n[1]++;
                      }
                      return e.__;
                    },
                    useImperativeHandle: function (e, t, n) {
                      (ie = 6),
                        we(
                          function () {
                            return 'function' == typeof e
                              ? (e(t()),
                                function () {
                                  return e(null);
                                })
                              : e
                                ? ((e.current = t()),
                                  function () {
                                    return (e.current = null);
                                  })
                                : void 0;
                          },
                          null == n ? n : n.concat(e)
                        );
                    },
                    useLayoutEffect: we,
                    useMemo: ve,
                    useReducer: be,
                    useRef: function (e) {
                      return (
                        (ie = 5),
                        ve(function () {
                          return { current: e };
                        }, [])
                      );
                    },
                    useState: ye,
                  },
                  Be = 'http://www.w3.org/2000/svg';
                function Oe() {
                  const e = e => i.createElementNS(Be, e),
                    t = h(e('svg'), {
                      width: '32',
                      height: '30',
                      viewBox: '0 0 72 66',
                      fill: 'inherit',
                    }),
                    n = h(e('path'), {
                      transform: 'translate(11, 11)',
                      d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',
                    });
                  return t.appendChild(n), t;
                }
                const je =
                  '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/DialogHeader.tsx';
                function Re({ options: e }) {
                  const t = ve(() => ({ __html: Oe().outerHTML }), []);
                  return P(
                    'h2',
                    {
                      class: 'dialog__header',
                      __self: this,
                      __source: { fileName: je, lineNumber: 16 },
                    },
                    e.formTitle,
                    e.showBranding
                      ? P('a', {
                          class: 'brand-link',
                          target: '_blank',
                          href: 'https://sentry.io/welcome/',
                          title: 'Powered by Sentry',
                          rel: 'noopener noreferrer',
                          dangerouslySetInnerHTML: t,
                          __self: this,
                          __source: { fileName: je, lineNumber: 19 },
                        })
                      : null
                  );
                }
                const Pe =
                  '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Form.tsx';
                function Ne(e, t) {
                  const n = e.get(t);
                  return 'string' == typeof n ? n.trim() : '';
                }
                function Le({
                  options: e,
                  defaultEmail: t,
                  defaultName: n,
                  onFormClose: r,
                  onSubmit: o,
                  onSubmitSuccess: i,
                  onSubmitError: a,
                  showEmail: c,
                  showName: l,
                  screenshotInput: f,
                }) {
                  const {
                      tags: h,
                      addScreenshotButtonLabel: p,
                      removeScreenshotButtonLabel: m,
                      cancelButtonLabel: g,
                      emailLabel: y,
                      emailPlaceholder: b,
                      isEmailRequired: w,
                      isNameRequired: v,
                      messageLabel: _,
                      messagePlaceholder: E,
                      nameLabel: S,
                      namePlaceholder: x,
                      submitButtonLabel: T,
                      isRequiredLabel: I,
                    } = e,
                    [k, A] = ye(null),
                    [C, B] = ye(!1),
                    O = f && f.input,
                    [j, R] = ye(null),
                    N = _e(e => {
                      R(e), B(!1);
                    }, []),
                    L = _e(
                      e => {
                        const t = (function (e, t) {
                          const n = [];
                          return (
                            t.isNameRequired && !e.name && n.push(t.nameLabel),
                            t.isEmailRequired && !e.email && n.push(t.emailLabel),
                            e.message || n.push(t.messageLabel),
                            n
                          );
                        })(e, {
                          emailLabel: y,
                          isEmailRequired: w,
                          isNameRequired: v,
                          messageLabel: _,
                          nameLabel: S,
                        });
                        return (
                          t.length > 0
                            ? A(`Please enter in the following required fields: ${t.join(', ')}`)
                            : A(null),
                          0 === t.length
                        );
                      },
                      [y, w, v, _, S]
                    ),
                    M = _e(
                      async e => {
                        try {
                          if ((e.preventDefault(), !(e.target instanceof HTMLFormElement))) return;
                          const t = new FormData(e.target),
                            n = await (f && C ? f.value() : undefined),
                            r = {
                              name: Ne(t, 'name'),
                              email: Ne(t, 'email'),
                              message: Ne(t, 'message'),
                              attachments: n ? [n] : undefined,
                            };
                          if (!L(r)) return;
                          try {
                            await o(
                              {
                                name: r.name,
                                email: r.email,
                                message: r.message,
                                source: u,
                                tags: h,
                              },
                              { attachments: r.attachments }
                            ),
                              i(r);
                          } catch (e) {
                            d && s.logger.error(e), A(e), a(e);
                          }
                        } catch (e) {}
                      },
                      [f && C, i, a]
                    );
                  return P(
                    'form',
                    {
                      class: 'form',
                      onSubmit: M,
                      __self: this,
                      __source: { fileName: Pe, lineNumber: 144 },
                    },
                    O && C
                      ? P(O, {
                          onError: N,
                          __self: this,
                          __source: { fileName: Pe, lineNumber: 146 },
                        })
                      : null,
                    P(
                      'div',
                      {
                        class: 'form__right',
                        'data-sentry-feedback': !0,
                        __self: this,
                        __source: { fileName: Pe, lineNumber: 149 },
                      },
                      P(
                        'div',
                        {
                          class: 'form__top',
                          __self: this,
                          __source: { fileName: Pe, lineNumber: 150 },
                        },
                        k
                          ? P(
                              'div',
                              {
                                class: 'form__error-container',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 151 },
                              },
                              k
                            )
                          : null,
                        l
                          ? P(
                              'label',
                              {
                                for: 'name',
                                class: 'form__label',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 154 },
                              },
                              P(Me, {
                                label: S,
                                isRequiredLabel: I,
                                isRequired: v,
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 155 },
                              }),
                              P('input', {
                                class: 'form__input',
                                defaultValue: n,
                                id: 'name',
                                name: 'name',
                                placeholder: x,
                                required: v,
                                type: 'text',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 156 },
                              })
                            )
                          : P('input', {
                              'aria-hidden': !0,
                              value: n,
                              name: 'name',
                              type: 'hidden',
                              __self: this,
                              __source: { fileName: Pe, lineNumber: 167 },
                            }),
                        c
                          ? P(
                              'label',
                              {
                                for: 'email',
                                class: 'form__label',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 171 },
                              },
                              P(Me, {
                                label: y,
                                isRequiredLabel: I,
                                isRequired: w,
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 172 },
                              }),
                              P('input', {
                                class: 'form__input',
                                defaultValue: t,
                                id: 'email',
                                name: 'email',
                                placeholder: b,
                                required: w,
                                type: 'email',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 173 },
                              })
                            )
                          : P('input', {
                              'aria-hidden': !0,
                              value: t,
                              name: 'email',
                              type: 'hidden',
                              __self: this,
                              __source: { fileName: Pe, lineNumber: 184 },
                            }),
                        P(
                          'label',
                          {
                            for: 'message',
                            class: 'form__label',
                            __self: this,
                            __source: { fileName: Pe, lineNumber: 187 },
                          },
                          P(Me, {
                            label: _,
                            isRequiredLabel: I,
                            isRequired: !0,
                            __self: this,
                            __source: { fileName: Pe, lineNumber: 188 },
                          }),
                          P('textarea', {
                            autoFocus: !0,
                            class: 'form__input form__input--textarea',
                            id: 'message',
                            name: 'message',
                            placeholder: E,
                            required: !0,
                            rows: 5,
                            __self: this,
                            __source: { fileName: Pe, lineNumber: 189 },
                          })
                        ),
                        O
                          ? P(
                              'label',
                              {
                                for: 'screenshot',
                                class: 'form__label',
                                __self: this,
                                __source: { fileName: Pe, lineNumber: 201 },
                              },
                              P(
                                'button',
                                {
                                  class: 'btn btn--default',
                                  type: 'button',
                                  onClick: () => {
                                    R(null), B(e => !e);
                                  },
                                  __self: this,
                                  __source: { fileName: Pe, lineNumber: 202 },
                                },
                                C ? m : p
                              ),
                              j
                                ? P(
                                    'div',
                                    {
                                      class: 'form__error-container',
                                      __self: this,
                                      __source: { fileName: Pe, lineNumber: 212 },
                                    },
                                    j.message
                                  )
                                : null
                            )
                          : null
                      ),
                      P(
                        'div',
                        {
                          class: 'btn-group',
                          __self: this,
                          __source: { fileName: Pe, lineNumber: 216 },
                        },
                        P(
                          'button',
                          {
                            class: 'btn btn--primary',
                            type: 'submit',
                            __self: this,
                            __source: { fileName: Pe, lineNumber: 217 },
                          },
                          T
                        ),
                        P(
                          'button',
                          {
                            class: 'btn btn--default',
                            type: 'button',
                            onClick: r,
                            __self: this,
                            __source: { fileName: Pe, lineNumber: 220 },
                          },
                          g
                        )
                      )
                    )
                  );
                }
                function Me({ label: e, isRequired: t, isRequiredLabel: n }) {
                  return P(
                    'span',
                    {
                      class: 'form__label__text',
                      __self: this,
                      __source: { fileName: Pe, lineNumber: 239 },
                    },
                    e,
                    t &&
                      P(
                        'span',
                        {
                          class: 'form__label__text--required',
                          __self: this,
                          __source: { fileName: Pe, lineNumber: 241 },
                        },
                        n
                      )
                  );
                }
                const De = 16,
                  Fe = 17,
                  He = 'http://www.w3.org/2000/svg';
                function Ue() {
                  const e = e => o.document.createElementNS(He, e),
                    t = h(e('svg'), {
                      width: `${De}`,
                      height: `${Fe}`,
                      viewBox: `0 0 ${De} ${Fe}`,
                      fill: 'inherit',
                    }),
                    n = h(e('g'), { clipPath: 'url(#clip0_57_156)' }),
                    r = h(e('path'), {
                      'fill-rule': 'evenodd',
                      'clip-rule': 'evenodd',
                      d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',
                    }),
                    s = h(e('path'), {
                      d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',
                    });
                  t.appendChild(n).append(s, r);
                  const i = e('defs'),
                    a = h(e('clipPath'), { id: 'clip0_57_156' }),
                    c = h(e('rect'), {
                      width: `${De}`,
                      height: `${De}`,
                      fill: 'white',
                      transform: 'translate(0 0.5)',
                    });
                  return (
                    a.appendChild(c),
                    i.appendChild(a),
                    t.appendChild(i).appendChild(a).appendChild(c),
                    t
                  );
                }
                const We =
                  '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Dialog.tsx';
                function Ge({ open: e, onFormSubmitted: t, ...n }) {
                  const r = n.options,
                    s = ve(() => ({ __html: Ue().outerHTML }), []),
                    [o, i] = ye(null),
                    a = _e(() => {
                      o && (clearTimeout(o), i(null)), t();
                    }, [o]),
                    c = _e(
                      e => {
                        n.onSubmitSuccess(e),
                          i(
                            setTimeout(() => {
                              t(), i(null);
                            }, 5e3)
                          );
                      },
                      [t]
                    );
                  return P(
                    L,
                    { __self: this, __source: { fileName: We, lineNumber: 48 } },
                    o
                      ? P(
                          'div',
                          {
                            class: 'success__position',
                            onClick: a,
                            __self: this,
                            __source: { fileName: We, lineNumber: 50 },
                          },
                          P(
                            'div',
                            {
                              class: 'success__content',
                              __self: this,
                              __source: { fileName: We, lineNumber: 51 },
                            },
                            r.successMessageText,
                            P('span', {
                              class: 'success__icon',
                              dangerouslySetInnerHTML: s,
                              __self: this,
                              __source: { fileName: We, lineNumber: 53 },
                            })
                          )
                        )
                      : P(
                          'dialog',
                          {
                            class: 'dialog',
                            onClick: r.onFormClose,
                            open: e,
                            __self: this,
                            __source: { fileName: We, lineNumber: 57 },
                          },
                          P(
                            'div',
                            {
                              class: 'dialog__position',
                              __self: this,
                              __source: { fileName: We, lineNumber: 58 },
                            },
                            P(
                              'div',
                              {
                                class: 'dialog__content',
                                onClick: e => {
                                  e.stopPropagation();
                                },
                                __self: this,
                                __source: { fileName: We, lineNumber: 59 },
                              },
                              P(Re, {
                                options: r,
                                __self: this,
                                __source: { fileName: We, lineNumber: 66 },
                              }),
                              P(Le, {
                                ...n,
                                onSubmitSuccess: c,
                                __self: this,
                                __source: { fileName: We, lineNumber: 67 },
                              })
                            )
                          )
                        )
                  );
                }
                const ze =
                  '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/screenshot/components/CropCorner.tsx';
                function qe(e) {
                  const t = i.createElement('style'),
                    n = '#1A141F',
                    r = '#302735';
                  return (
                    (t.textContent = `\n.editor {\n  padding: 10px;\n  padding-top: 65px;\n  padding-bottom: 65px;\n  flex-grow: 1;\n\n  background-color: ${n};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${n} 8px,\n      ${n} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${r} 15px,\n      ${r} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editor__canvas-container canvas {\n  object-fit: contain;\n  position: relative;\n}\n\n.editor__crop-btn-group {\n  padding: 8px;\n  gap: 8px;\n  border-radius: var(--menu-border-radius, 6px);\n  background: var(--button-primary-background, var(--background));\n  width: 175px;\n  position: absolute;\n}\n\n.editor__crop-corner {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  background: none;\n  border: 3px solid #ffffff;\n}\n\n.editor__crop-corner--top-left {\n  cursor: nwse-resize;\n  border-right: none;\n  border-bottom: none;\n}\n.editor__crop-corner--top-right {\n  cursor: nesw-resize;\n  border-left: none;\n  border-bottom: none;\n}\n.editor__crop-corner--bottom-left {\n  cursor: nesw-resize;\n  border-right: none;\n  border-top: none;\n}\n.editor__crop-corner--bottom-right {\n  cursor: nwse-resize;\n  border-left: none;\n  border-top: none;\n}\n`),
                    e && t.setAttribute('nonce', e),
                    t
                  );
                }
                const $e =
                    '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/screenshot/components/ScreenshotEditor.tsx',
                  Ve = 33,
                  Ke = o.devicePixelRatio,
                  Xe = e => ({
                    x: Math.min(e.startX, e.endX),
                    y: Math.min(e.startY, e.endY),
                    width: Math.abs(e.startX - e.endX),
                    height: Math.abs(e.startY - e.endY),
                  }),
                  Ye = e => {
                    const t = e.clientHeight,
                      n = e.clientWidth,
                      r = e.width / e.height;
                    let s = t * r,
                      o = t;
                    s > n && ((s = n), (o = n / r));
                    const i = (n - s) / 2,
                      a = (t - o) / 2;
                    return { startX: i, startY: a, endX: s + i, endY: o + a };
                  };
                function Je({ h: e, hooks: t, imageBuffer: n, dialog: r, options: s }) {
                  const c = (function ({ hooks: e }) {
                    return function ({
                      onBeforeScreenshot: t,
                      onScreenshot: n,
                      onAfterScreenshot: r,
                      onError: s,
                    }) {
                      e.useEffect(() => {
                        (async () => {
                          t();
                          const e = await a.mediaDevices.getDisplayMedia({
                              video: {
                                width: o.innerWidth * o.devicePixelRatio,
                                height: o.innerHeight * o.devicePixelRatio,
                              },
                              audio: !1,
                              monitorTypeSurfaces: 'exclude',
                              preferCurrentTab: !0,
                              selfBrowserSurface: 'include',
                              surfaceSwitching: 'exclude',
                            }),
                            s = i.createElement('video');
                          await new Promise((t, r) => {
                            (s.srcObject = e),
                              (s.onloadedmetadata = () => {
                                n(s), e.getTracks().forEach(e => e.stop()), t();
                              }),
                              s.play().catch(r);
                          }),
                            r();
                        })().catch(s);
                      }, []);
                    };
                  })({ hooks: t });
                  return function ({ onError: a }) {
                    const u = t.useMemo(() => ({ __html: qe(s.styleNonce).innerText }), []),
                      l = (function ({ h: e }) {
                        return function ({ top: t, left: n, corner: r, onGrabButton: s }) {
                          return e('button', {
                            class: `editor__crop-corner editor__crop-corner--${r} `,
                            style: { top: t, left: n },
                            onMouseDown: e => {
                              e.preventDefault(), s(e, r);
                            },
                            onClick: e => {
                              e.preventDefault();
                            },
                            __self: this,
                            __source: { fileName: ze, lineNumber: 22 },
                          });
                        };
                      })({ h: e }),
                      d = t.useRef(null),
                      f = t.useRef(null),
                      h = t.useRef(null),
                      [p, m] = t.useState({ startX: 0, startY: 0, endX: 0, endY: 0 }),
                      [g, y] = t.useState(!1),
                      [b, w] = t.useState(!1);
                    function v() {
                      const e = h.current,
                        t = Xe(Ye(n));
                      if (e) {
                        (e.width = t.width * Ke),
                          (e.height = t.height * Ke),
                          (e.style.width = `${t.width}px`),
                          (e.style.height = `${t.height}px`);
                        const n = e.getContext('2d');
                        n && n.scale(Ke, Ke);
                      }
                      const r = f.current;
                      r && ((r.style.width = `${t.width}px`), (r.style.height = `${t.height}px`)),
                        m({ startX: 0, startY: 0, endX: t.width, endY: t.height });
                    }
                    function _(e, t) {
                      y(!1), w(!0);
                      const n = E(t),
                        r = () => {
                          i.removeEventListener('mousemove', n),
                            i.removeEventListener('mouseup', r),
                            y(!0),
                            w(!1);
                        };
                      i.addEventListener('mouseup', r), i.addEventListener('mousemove', n);
                    }
                    t.useEffect(() => {
                      o.addEventListener('resize', v, !1);
                    }, []),
                      t.useEffect(() => {
                        const e = h.current;
                        if (!e) return;
                        const t = e.getContext('2d');
                        if (!t) return;
                        const r = Xe(Ye(n)),
                          s = Xe(p);
                        t.clearRect(0, 0, r.width, r.height),
                          (t.fillStyle = 'rgba(0, 0, 0, 0.5)'),
                          t.fillRect(0, 0, r.width, r.height),
                          t.clearRect(s.x, s.y, s.width, s.height),
                          (t.strokeStyle = '#ffffff'),
                          (t.lineWidth = 3),
                          t.strokeRect(s.x + 1, s.y + 1, s.width - 2, s.height - 2),
                          (t.strokeStyle = '#000000'),
                          (t.lineWidth = 1),
                          t.strokeRect(s.x + 3, s.y + 3, s.width - 6, s.height - 6);
                      }, [p]);
                    const E = t.useCallback(
                        e =>
                          function (t) {
                            if (!h.current) return;
                            const n = h.current,
                              r = n.getBoundingClientRect(),
                              s = t.clientX - r.x,
                              o = t.clientY - r.y;
                            switch (e) {
                              case 'top-left':
                                m(e => ({
                                  ...e,
                                  startX: Math.min(Math.max(0, s), e.endX - Ve),
                                  startY: Math.min(Math.max(0, o), e.endY - Ve),
                                }));
                                break;
                              case 'top-right':
                                m(e => ({
                                  ...e,
                                  endX: Math.max(Math.min(s, n.width / Ke), e.startX + Ve),
                                  startY: Math.min(Math.max(0, o), e.endY - Ve),
                                }));
                                break;
                              case 'bottom-left':
                                m(e => ({
                                  ...e,
                                  startX: Math.min(Math.max(0, s), e.endX - Ve),
                                  endY: Math.max(Math.min(o, n.height / Ke), e.startY + Ve),
                                }));
                                break;
                              case 'bottom-right':
                                m(e => ({
                                  ...e,
                                  endX: Math.max(Math.min(s, n.width / Ke), e.startX + Ve),
                                  endY: Math.max(Math.min(o, n.height / Ke), e.startY + Ve),
                                }));
                            }
                          },
                        []
                      ),
                      S = t.useRef({ initialX: 0, initialY: 0 });
                    return (
                      c({
                        onBeforeScreenshot: t.useCallback(() => {
                          r.el.style.display = 'none';
                        }, []),
                        onScreenshot: t.useCallback(
                          e => {
                            const t = n.getContext('2d');
                            if (!t) throw new Error('Could not get canvas context');
                            (n.width = e.videoWidth),
                              (n.height = e.videoHeight),
                              (n.style.width = '100%'),
                              (n.style.height = '100%'),
                              t.drawImage(e, 0, 0);
                          },
                          [n]
                        ),
                        onAfterScreenshot: t.useCallback(() => {
                          r.el.style.display = 'block';
                          const e = d.current;
                          e && e.appendChild(n), v();
                        }, []),
                        onError: t.useCallback(e => {
                          (r.el.style.display = 'block'), a(e);
                        }, []),
                      }),
                      e(
                        'div',
                        {
                          class: 'editor',
                          __self: this,
                          __source: { fileName: $e, lineNumber: 315 },
                        },
                        e('style', {
                          nonce: s.styleNonce,
                          dangerouslySetInnerHTML: u,
                          __self: this,
                          __source: { fileName: $e, lineNumber: 316 },
                        }),
                        e(
                          'div',
                          {
                            class: 'editor__canvas-container',
                            ref: d,
                            __self: this,
                            __source: { fileName: $e, lineNumber: 317 },
                          },
                          e(
                            'div',
                            {
                              class: 'editor__crop-container',
                              style: { position: 'absolute', zIndex: 1 },
                              ref: f,
                              __self: this,
                              __source: { fileName: $e, lineNumber: 318 },
                            },
                            e('canvas', {
                              onMouseDown: function (e) {
                                if (b) return;
                                S.current = { initialX: e.clientX, initialY: e.clientY };
                                const t = e => {
                                    const t = h.current;
                                    if (!t) return;
                                    const n = e.clientX - S.current.initialX,
                                      r = e.clientY - S.current.initialY;
                                    m(s => {
                                      const o = Math.max(
                                          0,
                                          Math.min(s.startX + n, t.width / Ke - (s.endX - s.startX))
                                        ),
                                        i = Math.max(
                                          0,
                                          Math.min(
                                            s.startY + r,
                                            t.height / Ke - (s.endY - s.startY)
                                          )
                                        ),
                                        a = o + (s.endX - s.startX),
                                        c = i + (s.endY - s.startY);
                                      return (
                                        (S.current.initialX = e.clientX),
                                        (S.current.initialY = e.clientY),
                                        { startX: o, startY: i, endX: a, endY: c }
                                      );
                                    });
                                  },
                                  n = () => {
                                    i.removeEventListener('mousemove', t),
                                      i.removeEventListener('mouseup', n);
                                  };
                                i.addEventListener('mousemove', t),
                                  i.addEventListener('mouseup', n);
                              },
                              style: { position: 'absolute', cursor: g ? 'move' : 'auto' },
                              ref: h,
                              __self: this,
                              __source: { fileName: $e, lineNumber: 319 },
                            }),
                            e(l, {
                              left: p.startX - 3,
                              top: p.startY - 3,
                              onGrabButton: _,
                              corner: 'top-left',
                              __self: this,
                              __source: { fileName: $e, lineNumber: 324 },
                            }),
                            e(l, {
                              left: p.endX - 30 + 3,
                              top: p.startY - 3,
                              onGrabButton: _,
                              corner: 'top-right',
                              __self: this,
                              __source: { fileName: $e, lineNumber: 330 },
                            }),
                            e(l, {
                              left: p.startX - 3,
                              top: p.endY - 30 + 3,
                              onGrabButton: _,
                              corner: 'bottom-left',
                              __self: this,
                              __source: { fileName: $e, lineNumber: 336 },
                            }),
                            e(l, {
                              left: p.endX - 30 + 3,
                              top: p.endY - 30 + 3,
                              onGrabButton: _,
                              corner: 'bottom-right',
                              __self: this,
                              __source: { fileName: $e, lineNumber: 342 },
                            }),
                            e(
                              'div',
                              {
                                style: {
                                  left: Math.max(0, p.endX - 191),
                                  top: Math.max(0, p.endY + 8),
                                  display: g ? 'flex' : 'none',
                                },
                                class: 'editor__crop-btn-group',
                                __self: this,
                                __source: { fileName: $e, lineNumber: 348 },
                              },
                              e(
                                'button',
                                {
                                  onClick: e => {
                                    e.preventDefault(),
                                      h.current &&
                                        m({
                                          startX: 0,
                                          startY: 0,
                                          endX: h.current.width / Ke,
                                          endY: h.current.height / Ke,
                                        }),
                                      y(!1);
                                  },
                                  class: 'btn btn--default',
                                  __self: this,
                                  __source: { fileName: $e, lineNumber: 356 },
                                },
                                s.cancelButtonLabel
                              ),
                              e(
                                'button',
                                {
                                  onClick: e => {
                                    e.preventDefault(),
                                      (function () {
                                        const e = i.createElement('canvas'),
                                          t = Xe(Ye(n)),
                                          r = Xe(p);
                                        (e.width = r.width * Ke), (e.height = r.height * Ke);
                                        const s = e.getContext('2d');
                                        s &&
                                          n &&
                                          s.drawImage(
                                            n,
                                            (r.x / t.width) * n.width,
                                            (r.y / t.height) * n.height,
                                            (r.width / t.width) * n.width,
                                            (r.height / t.height) * n.height,
                                            0,
                                            0,
                                            e.width,
                                            e.height
                                          );
                                        const o = n.getContext('2d');
                                        o &&
                                          (o.clearRect(0, 0, n.width, n.height),
                                          (n.width = e.width),
                                          (n.height = e.height),
                                          (n.style.width = `${r.width}px`),
                                          (n.style.height = `${r.height}px`),
                                          o.drawImage(e, 0, 0),
                                          v());
                                      })(),
                                      y(!1);
                                  },
                                  class: 'btn btn--primary',
                                  __self: this,
                                  __source: { fileName: $e, lineNumber: 373 },
                                },
                                s.confirmButtonLabel
                              )
                            )
                          )
                        )
                      )
                    );
                  };
                }
                (n.buildFeedbackIntegration =
                  ({
                    lazyLoadIntegration: e,
                    getModalIntegration: t,
                    getScreenshotIntegration: n,
                  }) =>
                  ({
                    id: o = 'sentry-feedback',
                    autoInject: u = !0,
                    showBranding: h = !0,
                    isEmailRequired: p = !1,
                    isNameRequired: m = !1,
                    showEmail: y = !0,
                    showName: _ = !0,
                    enableScreenshot: E = !0,
                    useSentryUser: S = { email: 'email', name: 'username' },
                    tags: x,
                    styleNonce: T,
                    scriptNonce: I,
                    colorScheme: k = 'system',
                    themeLight: A = {},
                    themeDark: C = {},
                    addScreenshotButtonLabel: B = 'Add a screenshot',
                    cancelButtonLabel: O = 'Cancel',
                    confirmButtonLabel: j = 'Confirm',
                    emailLabel: R = 'Email',
                    emailPlaceholder: P = 'your.email@example.org',
                    formTitle: N = 'Report a Bug',
                    isRequiredLabel: L = '(required)',
                    messageLabel: M = 'Description',
                    messagePlaceholder: D = "What's the bug? What did you expect?",
                    nameLabel: F = 'Name',
                    namePlaceholder: H = 'Your Name',
                    removeScreenshotButtonLabel: U = 'Remove screenshot',
                    submitButtonLabel: W = 'Send Bug Report',
                    successMessageText: G = 'Thank you for your report!',
                    triggerLabel: z = c,
                    triggerAriaLabel: q = '',
                    onFormOpen: $,
                    onFormClose: V,
                    onSubmitSuccess: K,
                    onSubmitError: X,
                    onFormSubmitted: Y,
                  } = {}) => {
                    const J = {
                      id: o,
                      autoInject: u,
                      showBranding: h,
                      isEmailRequired: p,
                      isNameRequired: m,
                      showEmail: y,
                      showName: _,
                      enableScreenshot: E,
                      useSentryUser: S,
                      tags: x,
                      styleNonce: T,
                      scriptNonce: I,
                      colorScheme: k,
                      themeDark: C,
                      themeLight: A,
                      triggerLabel: z,
                      triggerAriaLabel: q,
                      cancelButtonLabel: O,
                      submitButtonLabel: W,
                      confirmButtonLabel: j,
                      formTitle: N,
                      emailLabel: R,
                      emailPlaceholder: P,
                      messageLabel: M,
                      messagePlaceholder: D,
                      nameLabel: F,
                      namePlaceholder: H,
                      successMessageText: G,
                      isRequiredLabel: L,
                      addScreenshotButtonLabel: B,
                      removeScreenshotButtonLabel: U,
                      onFormClose: V,
                      onFormOpen: $,
                      onSubmitError: X,
                      onSubmitSuccess: K,
                      onFormSubmitted: Y,
                    };
                    let Z = null,
                      Q = [];
                    const ee = e => {
                        if (!Z) {
                          const t = i.createElement('div');
                          (t.id = String(e.id)),
                            i.body.appendChild(t),
                            (Z = t.attachShadow({ mode: 'open' })),
                            Z.appendChild(
                              (function ({
                                colorScheme: e,
                                themeDark: t,
                                themeLight: n,
                                styleNonce: r,
                              }) {
                                const s = i.createElement('style');
                                return (
                                  (s.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${'system' !== e ? 'color-scheme: only light;' : ''}\n\n  ${v('dark' === e ? { ...w, ...t } : { ...b, ...n })}\n}\n\n${'system' === e ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${v({ ...w, ...t })}\n  }\n}` : ''}\n}\n`),
                                  r && s.setAttribute('nonce', r),
                                  s
                                );
                              })(e)
                            );
                        }
                        return Z;
                      },
                      te = async (t, n, s) => {
                        const o = r.getClient(),
                          i = o && o.getIntegrationByName(t);
                        if (i) return i;
                        const a = ((n && n()) || (await e(s, I)))();
                        return o && o.addIntegration(a), a;
                      },
                      ne = async e => {
                        const r =
                            e.enableScreenshot &&
                            !(
                              /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                                a.userAgent
                              ) ||
                              (/Macintosh/i.test(a.userAgent) &&
                                a.maxTouchPoints &&
                                a.maxTouchPoints > 1) ||
                              !isSecureContext
                            ),
                          [o, i] = await Promise.all([
                            te('FeedbackModal', t, 'feedbackModalIntegration'),
                            r
                              ? te('FeedbackScreenshot', n, 'feedbackScreenshotIntegration')
                              : undefined,
                          ]);
                        if (!o)
                          throw (
                            (d &&
                              s.logger.error(
                                '[Feedback] Missing feedback modal integration. Try using `feedbackSyncIntegration` in your `Sentry.init`.'
                              ),
                            new Error('[Feedback] Missing feedback modal integration!'))
                          );
                        r &&
                          !i &&
                          d &&
                          s.logger.error(
                            '[Feedback] Missing feedback screenshot integration. Proceeding without screenshots.'
                          );
                        const c = o.createDialog({
                          options: {
                            ...e,
                            onFormClose: () => {
                              c && c.close(), e.onFormClose && e.onFormClose();
                            },
                            onFormSubmitted: () => {
                              c && c.close(), e.onFormSubmitted && e.onFormSubmitted();
                            },
                          },
                          screenshotIntegration: r ? i : undefined,
                          sendFeedback: l,
                          shadow: ee(e),
                        });
                        return c;
                      },
                      re = (e, t = {}) => {
                        const n = f(J, t),
                          r =
                            'string' == typeof e
                              ? i.querySelector(e)
                              : 'function' == typeof e.addEventListener
                                ? e
                                : null;
                        if (!r)
                          throw (
                            (d && s.logger.error('[Feedback] Unable to attach to target element'),
                            new Error('Unable to attach to target element'))
                          );
                        let o = null;
                        const a = async () => {
                          o ||
                            (o = await ne({
                              ...n,
                              onFormSubmitted: () => {
                                o && o.removeFromDom(), n.onFormSubmitted && n.onFormSubmitted();
                              },
                            })),
                            o.appendToDom(),
                            o.open();
                        };
                        r.addEventListener('click', a);
                        const c = () => {
                          (Q = Q.filter(e => e !== c)),
                            o && o.removeFromDom(),
                            (o = null),
                            r.removeEventListener('click', a);
                        };
                        return Q.push(c), c;
                      },
                      se = (e = {}) => {
                        const t = f(J, e),
                          n = ee(t),
                          r = g({
                            triggerLabel: t.triggerLabel,
                            triggerAriaLabel: t.triggerAriaLabel,
                            shadow: n,
                            styleNonce: T,
                          });
                        return (
                          re(r.el, {
                            ...t,
                            onFormOpen() {
                              r.hide();
                            },
                            onFormClose() {
                              r.show();
                            },
                            onFormSubmitted() {
                              r.show();
                            },
                          }),
                          r
                        );
                      };
                    return {
                      name: 'Feedback',
                      setupOnce() {
                        s.isBrowser() &&
                          J.autoInject &&
                          ('loading' === i.readyState
                            ? i.addEventListener('DOMContentLoaded', () => se().appendToDom())
                            : se().appendToDom());
                      },
                      attachTo: re,
                      createWidget(e = {}) {
                        const t = se(f(J, e));
                        return t.appendToDom(), t;
                      },
                      createForm: async (e = {}) => ne(f(J, e)),
                      remove() {
                        Z && (Z.parentElement && Z.parentElement.remove(), (Z = null)),
                          Q.forEach(e => e()),
                          (Q = []);
                      },
                    };
                  }),
                  (n.feedbackModalIntegration = () => ({
                    name: 'FeedbackModal',
                    setupOnce() {},
                    createDialog: ({
                      options: e,
                      screenshotIntegration: t,
                      sendFeedback: n,
                      shadow: s,
                    }) => {
                      const o = s,
                        a = e.useSentryUser,
                        c = (function () {
                          const e = r.getCurrentScope().getUser(),
                            t = r.getIsolationScope().getUser(),
                            n = r.getGlobalScope().getUser();
                          return e && Object.keys(e).length
                            ? e
                            : t && Object.keys(t).length
                              ? t
                              : n;
                        })(),
                        u = i.createElement('div'),
                        l = (function (e) {
                          const t = i.createElement('style');
                          return (
                            (t.textContent =
                              '\n:host {\n  --dialog-inset: var(--inset);\n}\n\n\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n\n\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n\n\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form__right {\n  flex: 0 0 auto;\n  width: var(--form-width, 272px);\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n@media (max-width: 600px) {\n  .form__right {\n    width: var(--form-width, 100%);\n  }\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n\n\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n\n'),
                            e && t.setAttribute('nonce', e),
                            t
                          );
                        })(e.styleNonce);
                      let d = '';
                      const f = {
                          get el() {
                            return u;
                          },
                          appendToDom() {
                            o.contains(l) || o.contains(u) || (o.appendChild(l), o.appendChild(u));
                          },
                          removeFromDom() {
                            o.removeChild(u), o.removeChild(l), (i.body.style.overflow = d);
                          },
                          open() {
                            p(!0),
                              e.onFormOpen && e.onFormOpen(),
                              (d = i.body.style.overflow),
                              (i.body.style.overflow = 'hidden');
                          },
                          close() {
                            p(!1), (i.body.style.overflow = d);
                          },
                        },
                        h = t && t.createInput({ h: P, hooks: Ce, dialog: f, options: e }),
                        p = t => {
                          !(function (e, t, n) {
                            var r, s, o, i;
                            E.__ && E.__(e, t),
                              (s = (r = 'function' == typeof n) ? null : (n && n.__k) || t.__k),
                              (o = []),
                              (i = []),
                              Y(
                                t,
                                (e = ((!r && n) || t).__k = P(L, null, [e])),
                                s || A,
                                A,
                                void 0 !== t.ownerSVGElement,
                                !r && n
                                  ? [n]
                                  : s
                                    ? null
                                    : t.firstChild
                                      ? _.call(t.childNodes)
                                      : null,
                                o,
                                !r && n ? n : s ? s.__e : t.firstChild,
                                r,
                                i
                              ),
                              (e.__d = void 0),
                              J(o, e, i);
                          })(
                            P(Ge, {
                              options: e,
                              screenshotInput: h,
                              showName: e.showName || e.isNameRequired,
                              showEmail: e.showEmail || e.isEmailRequired,
                              defaultName: (a && c && c[a.name]) || '',
                              defaultEmail: (a && c && c[a.email]) || '',
                              onFormClose: () => {
                                p(!1), e.onFormClose && e.onFormClose();
                              },
                              onSubmit: n,
                              onSubmitSuccess: t => {
                                p(!1), e.onSubmitSuccess && e.onSubmitSuccess(t);
                              },
                              onSubmitError: t => {
                                e.onSubmitError && e.onSubmitError(t);
                              },
                              onFormSubmitted: () => {
                                e.onFormSubmitted && e.onFormSubmitted();
                              },
                              open: t,
                              __self: undefined,
                              __source: {
                                fileName:
                                  '/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/integration.tsx',
                                lineNumber: 67,
                              },
                            }),
                            u
                          );
                        };
                      return f;
                    },
                  })),
                  (n.feedbackScreenshotIntegration = () => ({
                    name: 'FeedbackScreenshot',
                    setupOnce() {},
                    createInput: ({ h: e, hooks: t, dialog: n, options: r }) => {
                      const s = i.createElement('canvas');
                      return {
                        input: Je({ h: e, hooks: t, imageBuffer: s, dialog: n, options: r }),
                        value: async () => {
                          const e = await new Promise(e => {
                            s.toBlob(e, 'image/png');
                          });
                          if (e) {
                            return {
                              data: new Uint8Array(await e.arrayBuffer()),
                              filename: 'screenshot.png',
                              contentType: 'application/png',
                            };
                          }
                          return undefined;
                        },
                      };
                    },
                  })),
                  (n.getFeedback = function () {
                    const e = r.getClient();
                    return e && e.getIntegrationByName('Feedback');
                  }),
                  (n.sendFeedback = l);
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/feedback',
        file: 'node_modules/@sentry-internal/feedback/build/npm/cjs/index.js',
      },
    ],
    [
      3128,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var { _optionalChain: r } = e('@sentry/utils');
                Object.defineProperty(n, '__esModule', { value: !0 });
                const s = e('@sentry/core');
                var o;
                function i(e, t, n = Infinity, r = 0) {
                  return e
                    ? e.nodeType !== e.ELEMENT_NODE || r > n
                      ? -1
                      : t(e)
                        ? r
                        : i(e.parentNode, t, n, r + 1)
                    : -1;
                }
                function a(e, t) {
                  return n => {
                    const r = n;
                    if (null === r) return !1;
                    try {
                      if (e)
                        if ('string' == typeof e) {
                          if (r.matches(`.${e}`)) return !0;
                        } else if (
                          (function (e, t) {
                            for (let n = e.classList.length; n--; ) {
                              const r = e.classList[n];
                              if (t.test(r)) return !0;
                            }
                            return !1;
                          })(r, e)
                        )
                          return !0;
                      return !(!t || !r.matches(t));
                    } catch (e) {
                      return !1;
                    }
                  };
                }
                !(function (e) {
                  (e[(e.Document = 0)] = 'Document'),
                    (e[(e.DocumentType = 1)] = 'DocumentType'),
                    (e[(e.Element = 2)] = 'Element'),
                    (e[(e.Text = 3)] = 'Text'),
                    (e[(e.CDATA = 4)] = 'CDATA'),
                    (e[(e.Comment = 5)] = 'Comment');
                })(o || (o = {}));
                const c =
                  'Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.';
                let u = {
                  map: {},
                  getId: () => (console.error(c), -1),
                  getNode: () => (console.error(c), null),
                  removeNodeFromMap() {
                    console.error(c);
                  },
                  has: () => (console.error(c), !1),
                  reset() {
                    console.error(c);
                  },
                };
                function l(e, t, n, r, s = window) {
                  const o = s.Object.getOwnPropertyDescriptor(e, t);
                  return (
                    s.Object.defineProperty(
                      e,
                      t,
                      r
                        ? n
                        : {
                            set(e) {
                              g(() => {
                                n.set.call(this, e);
                              }, 0),
                                o && o.set && o.set.call(this, e);
                            },
                          }
                    ),
                    () => l(e, t, o || {}, !0)
                  );
                }
                function d(e, t, n) {
                  try {
                    if (!(t in e)) return () => {};
                    const r = e[t],
                      s = n(r);
                    return (
                      'function' == typeof s &&
                        ((s.prototype = s.prototype || {}),
                        Object.defineProperties(s, {
                          __rrweb_original__: { enumerable: !1, value: r },
                        })),
                      (e[t] = s),
                      () => {
                        e[t] = r;
                      }
                    );
                  } catch (e) {
                    return () => {};
                  }
                }
                function f(e, t, n, r, s) {
                  if (!e) return !1;
                  const o = (function (e) {
                    return e ? (e.nodeType === e.ELEMENT_NODE ? e : e.parentElement) : null;
                  })(e);
                  if (!o) return !1;
                  const c = a(t, n);
                  if (!s) {
                    const e = r && o.matches(r);
                    return c(o) && !e;
                  }
                  const u = i(o, c);
                  let l = -1;
                  return !(u < 0) && (r && (l = i(o, a(null, r))), (u > -1 && l < 0) || u < l);
                }
                'undefined' != typeof window &&
                  window.Proxy &&
                  window.Reflect &&
                  (u = new Proxy(u, {
                    get: (e, t, n) => ('map' === t && console.error(c), Reflect.get(e, t, n)),
                  })),
                  /[1-9][0-9]{12}/.test(Date.now().toString());
                const h = {};
                function p(e) {
                  const t = h[e];
                  if (t) return t;
                  const n = window.document;
                  let r = window[e];
                  if (n && 'function' == typeof n.createElement)
                    try {
                      const t = n.createElement('iframe');
                      (t.hidden = !0), n.head.appendChild(t);
                      const s = t.contentWindow;
                      s && s[e] && (r = s[e]), n.head.removeChild(t);
                    } catch (e) {}
                  return (h[e] = r.bind(window));
                }
                function m(...e) {
                  return p('requestAnimationFrame')(...e);
                }
                function g(...e) {
                  return p('setTimeout')(...e);
                }
                var y = (e => (
                  (e[(e['2D'] = 0)] = '2D'),
                  (e[(e.WebGL = 1)] = 'WebGL'),
                  (e[(e.WebGL2 = 2)] = 'WebGL2'),
                  e
                ))(y || {});
                let b;
                function w(e) {
                  b = e;
                }
                const v = e => {
                  if (!b) return e;
                  return (...t) => {
                    try {
                      return e(...t);
                    } catch (e) {
                      if (b && !0 === b(e)) return () => {};
                      throw e;
                    }
                  };
                };
                for (
                  var _ = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                    E = 'undefined' == typeof Uint8Array ? [] : new Uint8Array(256),
                    S = 0;
                  S < 64;
                  S++
                )
                  E[_.charCodeAt(S)] = S;
                const x = new Map();
                const T = (e, t, n) => {
                  if (!e || (!A(e, t) && 'object' != typeof e)) return;
                  const r = (function (e, t) {
                    let n = x.get(e);
                    return n || ((n = new Map()), x.set(e, n)), n.has(t) || n.set(t, []), n.get(t);
                  })(n, e.constructor.name);
                  let s = r.indexOf(e);
                  return -1 === s && ((s = r.length), r.push(e)), s;
                };
                function I(e, t, n) {
                  if (e instanceof Array) return e.map(e => I(e, t, n));
                  if (null === e) return e;
                  if (
                    e instanceof Float32Array ||
                    e instanceof Float64Array ||
                    e instanceof Int32Array ||
                    e instanceof Uint32Array ||
                    e instanceof Uint8Array ||
                    e instanceof Uint16Array ||
                    e instanceof Int16Array ||
                    e instanceof Int8Array ||
                    e instanceof Uint8ClampedArray
                  ) {
                    return { rr_type: e.constructor.name, args: [Object.values(e)] };
                  }
                  if (e instanceof ArrayBuffer) {
                    const t = e.constructor.name,
                      n = (function (e) {
                        var t,
                          n = new Uint8Array(e),
                          r = n.length,
                          s = '';
                        for (t = 0; t < r; t += 3)
                          (s += _[n[t] >> 2]),
                            (s += _[((3 & n[t]) << 4) | (n[t + 1] >> 4)]),
                            (s += _[((15 & n[t + 1]) << 2) | (n[t + 2] >> 6)]),
                            (s += _[63 & n[t + 2]]);
                        return (
                          r % 3 == 2
                            ? (s = s.substring(0, s.length - 1) + '=')
                            : r % 3 == 1 && (s = s.substring(0, s.length - 2) + '=='),
                          s
                        );
                      })(e);
                    return { rr_type: t, base64: n };
                  }
                  if (e instanceof DataView) {
                    return {
                      rr_type: e.constructor.name,
                      args: [I(e.buffer, t, n), e.byteOffset, e.byteLength],
                    };
                  }
                  if (e instanceof HTMLImageElement) {
                    const t = e.constructor.name,
                      { src: n } = e;
                    return { rr_type: t, src: n };
                  }
                  if (e instanceof HTMLCanvasElement) {
                    return { rr_type: 'HTMLImageElement', src: e.toDataURL() };
                  }
                  if (e instanceof ImageData) {
                    return {
                      rr_type: e.constructor.name,
                      args: [I(e.data, t, n), e.width, e.height],
                    };
                  }
                  if (A(e, t) || 'object' == typeof e) {
                    return { rr_type: e.constructor.name, index: T(e, t, n) };
                  }
                  return e;
                }
                const k = (e, t, n) => e.map(e => I(e, t, n)),
                  A = (e, t) => {
                    const n = [
                      'WebGLActiveInfo',
                      'WebGLBuffer',
                      'WebGLFramebuffer',
                      'WebGLProgram',
                      'WebGLRenderbuffer',
                      'WebGLShader',
                      'WebGLShaderPrecisionFormat',
                      'WebGLTexture',
                      'WebGLUniformLocation',
                      'WebGLVertexArrayObject',
                      'WebGLVertexArrayObjectOES',
                    ].filter(e => 'function' == typeof t[e]);
                    return Boolean(n.find(n => e instanceof t[n]));
                  };
                function C(e, t, n, r, s) {
                  const o = [];
                  try {
                    const i = d(e.HTMLCanvasElement.prototype, 'getContext', function (e) {
                      return function (o, ...i) {
                        if (!f(this, t, n, r, !0)) {
                          const e = (function (e) {
                            return 'experimental-webgl' === e ? 'webgl' : e;
                          })(o);
                          if (
                            ('__context' in this || (this.__context = e),
                            s && ['webgl', 'webgl2'].includes(e))
                          )
                            if (i[0] && 'object' == typeof i[0]) {
                              const e = i[0];
                              e.preserveDrawingBuffer || (e.preserveDrawingBuffer = !0);
                            } else i.splice(0, 1, { preserveDrawingBuffer: !0 });
                        }
                        return e.apply(this, [o, ...i]);
                      };
                    });
                    o.push(i);
                  } catch (e) {
                    console.error('failed to patch HTMLCanvasElement.prototype.getContext');
                  }
                  return () => {
                    o.forEach(e => e());
                  };
                }
                function B(e, t, n, r, s, o, i, a) {
                  const c = [],
                    u = Object.getOwnPropertyNames(e);
                  for (const i of u)
                    if (
                      ![
                        'isContextLost',
                        'canvas',
                        'drawingBufferWidth',
                        'drawingBufferHeight',
                      ].includes(i)
                    )
                      try {
                        if ('function' != typeof e[i]) continue;
                        const u = d(e, i, function (e) {
                          return function (...c) {
                            const u = e.apply(this, c);
                            if (
                              (T(u, a, this),
                              'tagName' in this.canvas && !f(this.canvas, r, s, o, !0))
                            ) {
                              const e = k(c, a, this),
                                r = { type: t, property: i, args: e };
                              n(this.canvas, r);
                            }
                            return u;
                          };
                        });
                        c.push(u);
                      } catch (r) {
                        const s = l(e, i, {
                          set(e) {
                            n(this.canvas, { type: t, property: i, args: [e], setter: !0 });
                          },
                        });
                        c.push(s);
                      }
                  return c;
                }
                class O {
                  reset() {
                    this.pendingCanvasMutations.clear(),
                      this.restoreHandlers.forEach(e => {
                        try {
                          e();
                        } catch (e) {}
                      }),
                      (this.restoreHandlers = []),
                      (this.windowsSet = new WeakSet()),
                      (this.windows = []),
                      (this.shadowDoms = new Set()),
                      r([
                        this,
                        'access',
                        e => e.worker,
                        'optionalAccess',
                        e => e.terminate,
                        'call',
                        e => e(),
                      ]),
                      (this.worker = null),
                      (this.snapshotInProgressMap = new Map()),
                      ((this.options.recordCanvas && 'number' == typeof this.options.sampling) ||
                        this.options.enableManualSnapshot) &&
                        (this.worker = this.initFPSWorker());
                  }
                  freeze() {
                    this.frozen = !0;
                  }
                  unfreeze() {
                    this.frozen = !1;
                  }
                  lock() {
                    this.locked = !0;
                  }
                  unlock() {
                    this.locked = !1;
                  }
                  constructor(e) {
                    (this.pendingCanvasMutations = new Map()),
                      (this.rafStamps = { latestId: 0, invokeId: null }),
                      (this.shadowDoms = new Set()),
                      (this.windowsSet = new WeakSet()),
                      (this.windows = []),
                      (this.restoreHandlers = []),
                      (this.frozen = !1),
                      (this.locked = !1),
                      (this.snapshotInProgressMap = new Map()),
                      (this.worker = null),
                      (this.processMutation = (e, t) => {
                        (!(
                          this.rafStamps.invokeId &&
                          this.rafStamps.latestId !== this.rafStamps.invokeId
                        ) &&
                          this.rafStamps.invokeId) ||
                          (this.rafStamps.invokeId = this.rafStamps.latestId),
                          this.pendingCanvasMutations.has(e) ||
                            this.pendingCanvasMutations.set(e, []),
                          this.pendingCanvasMutations.get(e).push(t);
                      });
                    const {
                      sampling: t = 'all',
                      win: n,
                      blockClass: r,
                      blockSelector: s,
                      unblockSelector: o,
                      maxCanvasSize: i,
                      recordCanvas: a,
                      dataURLOptions: c,
                      errorHandler: u,
                    } = e;
                    (this.mutationCb = e.mutationCb),
                      (this.mirror = e.mirror),
                      (this.options = e),
                      u && w(u),
                      ((a && 'number' == typeof t) || e.enableManualSnapshot) &&
                        (this.worker = this.initFPSWorker()),
                      this.addWindow(n),
                      e.enableManualSnapshot ||
                        v(() => {
                          a &&
                            'all' === t &&
                            (this.startRAFTimestamping(), this.startPendingCanvasMutationFlusher()),
                            a &&
                              'number' == typeof t &&
                              this.initCanvasFPSObserver(t, r, s, o, i, { dataURLOptions: c });
                        })();
                  }
                  addWindow(e) {
                    const {
                      sampling: t = 'all',
                      blockClass: n,
                      blockSelector: r,
                      unblockSelector: s,
                      recordCanvas: o,
                      enableManualSnapshot: i,
                    } = this.options;
                    if (!this.windowsSet.has(e)) {
                      if (i) return this.windowsSet.add(e), void this.windows.push(new WeakRef(e));
                      v(() => {
                        if (
                          (o && 'all' === t && this.initCanvasMutationObserver(e, n, r, s),
                          o && 'number' == typeof t)
                        ) {
                          const t = C(e, n, r, s, !0);
                          this.restoreHandlers.push(() => {
                            t();
                          });
                        }
                      })(),
                        this.windowsSet.add(e),
                        this.windows.push(new WeakRef(e));
                    }
                  }
                  addShadowRoot(e) {
                    this.shadowDoms.add(new WeakRef(e));
                  }
                  resetShadowRoots() {
                    this.shadowDoms = new Set();
                  }
                  initFPSWorker() {
                    const e = new Worker(
                      (function () {
                        const e = new Blob([
                          'for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t="undefined"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s="";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+"=":r%3==1&&(s=s.substring(0,s.length-2)+"=="),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!("OffscreenCanvas"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+"-"+t;if("OffscreenCanvas"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext("2d");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return""}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext("bitmaprenderer"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:"low"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};',
                        ]);
                        return URL.createObjectURL(e);
                      })()
                    );
                    return (
                      (e.onmessage = e => {
                        const t = e.data,
                          { id: n } = t;
                        if ((this.snapshotInProgressMap.set(n, !1), !('base64' in t))) return;
                        const { base64: r, type: s, width: o, height: i } = t;
                        this.mutationCb({
                          id: n,
                          type: y['2D'],
                          commands: [
                            { property: 'clearRect', args: [0, 0, o, i] },
                            {
                              property: 'drawImage',
                              args: [
                                {
                                  rr_type: 'ImageBitmap',
                                  args: [
                                    {
                                      rr_type: 'Blob',
                                      data: [{ rr_type: 'ArrayBuffer', base64: r }],
                                      type: s,
                                    },
                                  ],
                                },
                                0,
                                0,
                                o,
                                i,
                              ],
                            },
                          ],
                        });
                      }),
                      e
                    );
                  }
                  initCanvasFPSObserver(e, t, n, r, s, o) {
                    const i = this.takeSnapshot(!1, e, t, n, r, s, o.dataURLOptions);
                    this.restoreHandlers.push(() => {
                      cancelAnimationFrame(i);
                    });
                  }
                  initCanvasMutationObserver(e, t, n, r) {
                    const s = C(e, t, n, r, !1),
                      o = (function (e, t, n, r, s) {
                        const o = [],
                          i = Object.getOwnPropertyNames(t.CanvasRenderingContext2D.prototype);
                        for (const a of i)
                          try {
                            if ('function' != typeof t.CanvasRenderingContext2D.prototype[a])
                              continue;
                            const i = d(t.CanvasRenderingContext2D.prototype, a, function (o) {
                              return function (...i) {
                                return (
                                  f(this.canvas, n, r, s, !0) ||
                                    g(() => {
                                      const n = k(i, t, this);
                                      e(this.canvas, { type: y['2D'], property: a, args: n });
                                    }, 0),
                                  o.apply(this, i)
                                );
                              };
                            });
                            o.push(i);
                          } catch (n) {
                            const r = l(t.CanvasRenderingContext2D.prototype, a, {
                              set(t) {
                                e(this.canvas, {
                                  type: y['2D'],
                                  property: a,
                                  args: [t],
                                  setter: !0,
                                });
                              },
                            });
                            o.push(r);
                          }
                        return () => {
                          o.forEach(e => e());
                        };
                      })(this.processMutation.bind(this), e, t, n, r),
                      i = (function (e, t, n, r, s, o) {
                        const i = [];
                        return (
                          i.push(
                            ...B(t.WebGLRenderingContext.prototype, y.WebGL, e, n, r, s, 0, t)
                          ),
                          void 0 !== t.WebGL2RenderingContext &&
                            i.push(
                              ...B(t.WebGL2RenderingContext.prototype, y.WebGL2, e, n, r, s, 0, t)
                            ),
                          () => {
                            i.forEach(e => e());
                          }
                        );
                      })(this.processMutation.bind(this), e, t, n, r, this.mirror);
                    this.restoreHandlers.push(() => {
                      s(), o(), i();
                    });
                  }
                  snapshot(e) {
                    const { options: t } = this,
                      n = this.takeSnapshot(
                        !0,
                        'all' === t.sampling ? 2 : t.sampling || 2,
                        t.blockClass,
                        t.blockSelector,
                        t.unblockSelector,
                        t.maxCanvasSize,
                        t.dataURLOptions,
                        e
                      );
                    this.restoreHandlers.push(() => {
                      cancelAnimationFrame(n);
                    });
                  }
                  takeSnapshot(e, t, n, s, o, i, a, c) {
                    const u = 1e3 / t;
                    let l,
                      d = 0;
                    const h = e => {
                        if (e) return [e];
                        const t = [],
                          r = e => {
                            e.querySelectorAll('canvas').forEach(e => {
                              f(e, n, s, o, !0) || t.push(e);
                            });
                          };
                        for (const e of this.windows) {
                          const t = e.deref();
                          t && r(t.document);
                        }
                        for (const e of this.shadowDoms) {
                          const t = e.deref();
                          t && r(t);
                        }
                        return t;
                      },
                      p = t => {
                        this.windows.length &&
                          (d && t - d < u
                            ? (l = m(p))
                            : ((d = t),
                              h(c).forEach(t => {
                                if (!this.mirror.hasNode(t)) return;
                                const n = this.mirror.getId(t);
                                if (!this.snapshotInProgressMap.get(n) && t.width && t.height) {
                                  if (
                                    (this.snapshotInProgressMap.set(n, !0),
                                    !e && ['webgl', 'webgl2'].includes(t.__context))
                                  ) {
                                    const e = t.getContext(t.__context);
                                    !1 ===
                                      r([
                                        e,
                                        'optionalAccess',
                                        e => e.getContextAttributes,
                                        'call',
                                        e => e(),
                                        'optionalAccess',
                                        e => e.preserveDrawingBuffer,
                                      ]) && e.clear(e.COLOR_BUFFER_BIT);
                                  }
                                  createImageBitmap(t)
                                    .then(e => {
                                      r([
                                        this,
                                        'access',
                                        e => e.worker,
                                        'optionalAccess',
                                        e => e.postMessage,
                                        'call',
                                        r =>
                                          r(
                                            {
                                              id: n,
                                              bitmap: e,
                                              width: t.width,
                                              height: t.height,
                                              dataURLOptions: a,
                                              maxCanvasSize: i,
                                            },
                                            [e]
                                          ),
                                      ]);
                                    })
                                    .catch(e => {
                                      v(() => {
                                        throw e;
                                      })();
                                    });
                                }
                              }),
                              e || (l = m(p))));
                      };
                    return (l = m(p)), l;
                  }
                  startPendingCanvasMutationFlusher() {
                    m(() => this.flushPendingCanvasMutations());
                  }
                  startRAFTimestamping() {
                    const e = t => {
                      (this.rafStamps.latestId = t), m(e);
                    };
                    m(e);
                  }
                  flushPendingCanvasMutations() {
                    this.pendingCanvasMutations.forEach((e, t) => {
                      const n = this.mirror.getId(t);
                      this.flushPendingCanvasMutationFor(t, n);
                    }),
                      m(() => this.flushPendingCanvasMutations());
                  }
                  flushPendingCanvasMutationFor(e, t) {
                    if (this.frozen || this.locked) return;
                    const n = this.pendingCanvasMutations.get(e);
                    if (!n || -1 === t) return;
                    const r = n.map(e => {
                        const { type: t, ...n } = e;
                        return n;
                      }),
                      { type: s } = n[0];
                    this.mutationCb({ id: t, type: s, commands: r }),
                      this.pendingCanvasMutations.delete(e);
                  }
                }
                const j = {
                    low: {
                      sampling: { canvas: 1 },
                      dataURLOptions: { type: 'image/webp', quality: 0.25 },
                    },
                    medium: {
                      sampling: { canvas: 2 },
                      dataURLOptions: { type: 'image/webp', quality: 0.4 },
                    },
                    high: {
                      sampling: { canvas: 4 },
                      dataURLOptions: { type: 'image/webp', quality: 0.5 },
                    },
                  },
                  R = 1280,
                  P = s.defineIntegration((e = {}) => {
                    const [t, n] = e.maxCanvasSize || [],
                      r = {
                        quality: e.quality || 'medium',
                        enableManualSnapshot: e.enableManualSnapshot,
                        maxCanvasSize: [t ? Math.min(t, R) : R, n ? Math.min(n, R) : R],
                      };
                    let s;
                    const o = new Promise(e => (s = e));
                    return {
                      name: 'ReplayCanvas',
                      getOptions() {
                        const { quality: e, enableManualSnapshot: t, maxCanvasSize: n } = r;
                        return {
                          enableManualSnapshot: t,
                          recordCanvas: !0,
                          getCanvasManager: e => {
                            const r = new O({
                              ...e,
                              enableManualSnapshot: t,
                              maxCanvasSize: n,
                              errorHandler: e => {
                                try {
                                  'object' == typeof e && (e.__rrweb__ = !0);
                                } catch (e) {}
                              },
                            });
                            return s(r), r;
                          },
                          ...(j[e || 'medium'] || j.medium),
                        };
                      },
                      async snapshot(e) {
                        (await o).snapshot(e);
                      },
                    };
                  });
                n.replayCanvasIntegration = P;
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/replay-canvas',
        file: 'node_modules/@sentry-internal/replay-canvas/build/npm/cjs/index.js',
      },
    ],
    [
      3129,
      { '@sentry-internal/browser-utils': 3100, '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                var { _nullishCoalesce: r, _optionalChain: s } = e('@sentry/utils');
                Object.defineProperty(n, '__esModule', { value: !0 });
                const o = e('@sentry/core'),
                  i = e('@sentry/utils'),
                  a = e('@sentry-internal/browser-utils'),
                  c = i.GLOBAL_OBJ,
                  u = 'sentryReplaySession',
                  l = 'replay_event',
                  d = 'Unable to send Replay',
                  f = 15e4,
                  h = 5e3,
                  p = 2e7,
                  m = 36e5;
                function g(e, t) {
                  return null != e ? e : t();
                }
                function y(e) {
                  let t = undefined,
                    n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    const s = e[r],
                      o = e[r + 1];
                    if (((r += 2), ('optionalAccess' === s || 'optionalCall' === s) && null == n))
                      return undefined;
                    'access' === s || 'optionalAccess' === s
                      ? ((t = n), (n = o(n)))
                      : ('call' !== s && 'optionalCall' !== s) ||
                        ((n = o((...e) => n.call(t, ...e))), (t = undefined));
                  }
                  return n;
                }
                var b;
                function w(e) {
                  const t = y([e, 'optionalAccess', e => e.host]);
                  return Boolean(y([t, 'optionalAccess', e => e.shadowRoot]) === e);
                }
                function v(e) {
                  return '[object ShadowRoot]' === Object.prototype.toString.call(e);
                }
                function _(e) {
                  try {
                    const n = e.rules || e.cssRules;
                    return n
                      ? ((t = Array.from(n, E).join('')).includes(' background-clip: text;') &&
                          !t.includes(' -webkit-background-clip: text;') &&
                          (t = t.replace(
                            ' background-clip: text;',
                            ' -webkit-background-clip: text; background-clip: text;'
                          )),
                        t)
                      : null;
                  } catch (e) {
                    return null;
                  }
                  var t;
                }
                function E(e) {
                  let t;
                  if (
                    (function (e) {
                      return 'styleSheet' in e;
                    })(e)
                  )
                    try {
                      t =
                        _(e.styleSheet) ||
                        (function (e) {
                          const { cssText: t } = e;
                          if (t.split('"').length < 3) return t;
                          const n = ['@import', `url(${JSON.stringify(e.href)})`];
                          return (
                            '' === e.layerName
                              ? n.push('layer')
                              : e.layerName && n.push(`layer(${e.layerName})`),
                            e.supportsText && n.push(`supports(${e.supportsText})`),
                            e.media.length && n.push(e.media.mediaText),
                            n.join(' ') + ';'
                          );
                        })(e);
                    } catch (e) {}
                  else if (
                    (function (e) {
                      return 'selectorText' in e;
                    })(e) &&
                    e.selectorText.includes(':')
                  )
                    return (function (e) {
                      const t = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
                      return e.replace(t, '$1\\$2');
                    })(e.cssText);
                  return t || e.cssText;
                }
                !(function (e) {
                  (e[(e.Document = 0)] = 'Document'),
                    (e[(e.DocumentType = 1)] = 'DocumentType'),
                    (e[(e.Element = 2)] = 'Element'),
                    (e[(e.Text = 3)] = 'Text'),
                    (e[(e.CDATA = 4)] = 'CDATA'),
                    (e[(e.Comment = 5)] = 'Comment');
                })(b || (b = {}));
                class S {
                  constructor() {
                    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
                  }
                  getId(e) {
                    if (!e) return -1;
                    return g(
                      y([
                        this,
                        'access',
                        e => e.getMeta,
                        'call',
                        t => t(e),
                        'optionalAccess',
                        e => e.id,
                      ]),
                      () => -1
                    );
                  }
                  getNode(e) {
                    return this.idNodeMap.get(e) || null;
                  }
                  getIds() {
                    return Array.from(this.idNodeMap.keys());
                  }
                  getMeta(e) {
                    return this.nodeMetaMap.get(e) || null;
                  }
                  removeNodeFromMap(e) {
                    const t = this.getId(e);
                    this.idNodeMap.delete(t),
                      e.childNodes && e.childNodes.forEach(e => this.removeNodeFromMap(e));
                  }
                  has(e) {
                    return this.idNodeMap.has(e);
                  }
                  hasNode(e) {
                    return this.nodeMetaMap.has(e);
                  }
                  add(e, t) {
                    const n = t.id;
                    this.idNodeMap.set(n, e), this.nodeMetaMap.set(e, t);
                  }
                  replace(e, t) {
                    const n = this.getNode(e);
                    if (n) {
                      const e = this.nodeMetaMap.get(n);
                      e && this.nodeMetaMap.set(t, e);
                    }
                    this.idNodeMap.set(e, t);
                  }
                  reset() {
                    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
                  }
                }
                function x({ maskInputOptions: e, tagName: t, type: n }) {
                  return (
                    'OPTION' === t && (t = 'SELECT'),
                    Boolean(
                      e[t.toLowerCase()] ||
                        (n && e[n]) ||
                        'password' === n ||
                        ('INPUT' === t && !n && e.text)
                    )
                  );
                }
                function T({ isMasked: e, element: t, value: n, maskInputFn: r }) {
                  let s = n || '';
                  return e ? (r && (s = r(s, t)), '*'.repeat(s.length)) : s;
                }
                function I(e) {
                  return e.toLowerCase();
                }
                function k(e) {
                  return e.toUpperCase();
                }
                const A = '__rrweb_original__';
                function C(e) {
                  const t = e.type;
                  return e.hasAttribute('data-rr-is-password') ? 'password' : t ? I(t) : null;
                }
                function B(e, t, n) {
                  return 'INPUT' !== t || ('radio' !== n && 'checkbox' !== n)
                    ? e.value
                    : e.getAttribute('value') || '';
                }
                function O(e, t) {
                  let n;
                  try {
                    n = new URL(
                      e,
                      g(t, () => window.location.href)
                    );
                  } catch (e) {
                    return null;
                  }
                  return g(
                    y([n.pathname.match(/\.([0-9a-z]+)(?:$)/i), 'optionalAccess', e => e[1]]),
                    () => null
                  );
                }
                const j = {};
                function R(e) {
                  const t = j[e];
                  if (t) return t;
                  const n = window.document;
                  let r = window[e];
                  if (n && 'function' == typeof n.createElement)
                    try {
                      const t = n.createElement('iframe');
                      (t.hidden = !0), n.head.appendChild(t);
                      const s = t.contentWindow;
                      s && s[e] && (r = s[e]), n.head.removeChild(t);
                    } catch (e) {}
                  return (j[e] = r.bind(window));
                }
                function P(...e) {
                  return R('setTimeout')(...e);
                }
                function N(...e) {
                  return R('clearTimeout')(...e);
                }
                let L = 1;
                const M = new RegExp('[^a-z0-9-_:]'),
                  D = -2;
                function F() {
                  return L++;
                }
                let H, U;
                const W = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
                  G = /^(?:[a-z+]+:)?\/\//i,
                  z = /^www\..*/i,
                  q = /^(data:)([^,]*),(.*)/i;
                function $(e, t) {
                  return (e || '').replace(W, (e, n, r, s, o, i) => {
                    const a = r || o || i,
                      c = n || s || '';
                    if (!a) return e;
                    if (G.test(a) || z.test(a)) return `url(${c}${a}${c})`;
                    if (q.test(a)) return `url(${c}${a}${c})`;
                    if ('/' === a[0])
                      return `url(${c}${
                        (function (e) {
                          let t = '';
                          return (
                            (t =
                              e.indexOf('//') > -1
                                ? e.split('/').slice(0, 3).join('/')
                                : e.split('/')[0]),
                            (t = t.split('?')[0]),
                            t
                          );
                        })(t) + a
                      }${c})`;
                    const u = t.split('/'),
                      l = a.split('/');
                    u.pop();
                    for (const e of l) '.' !== e && ('..' === e ? u.pop() : u.push(e));
                    return `url(${c}${u.join('/')}${c})`;
                  });
                }
                const V = /^[^ \t\n\r\u000c]+/,
                  K = /^[, \t\n\r\u000c]+/;
                function X(e, t) {
                  if (!t || '' === t.trim()) return t;
                  const n = e.createElement('a');
                  return (n.href = t), n.href;
                }
                function Y(e) {
                  return Boolean('svg' === e.tagName || e.ownerSVGElement);
                }
                function J() {
                  const e = document.createElement('a');
                  return (e.href = ''), e.href;
                }
                function Z(e, t, n, r, s, o) {
                  return r
                    ? 'src' === n ||
                      ('href' === n && ('use' !== t || '#' !== r[0])) ||
                      ('xlink:href' === n && '#' !== r[0])
                      ? X(e, r)
                      : 'background' !== n || ('table' !== t && 'td' !== t && 'th' !== t)
                        ? 'srcset' === n
                          ? (function (e, t) {
                              if ('' === t.trim()) return t;
                              let n = 0;
                              function r(e) {
                                let r;
                                const s = e.exec(t.substring(n));
                                return s ? ((r = s[0]), (n += r.length), r) : '';
                              }
                              const s = [];
                              for (; r(K), !(n >= t.length); ) {
                                let o = r(V);
                                if (',' === o.slice(-1))
                                  (o = X(e, o.substring(0, o.length - 1))), s.push(o);
                                else {
                                  let r = '';
                                  o = X(e, o);
                                  let i = !1;
                                  for (;;) {
                                    const e = t.charAt(n);
                                    if ('' === e) {
                                      s.push((o + r).trim());
                                      break;
                                    }
                                    if (i) ')' === e && (i = !1);
                                    else {
                                      if (',' === e) {
                                        (n += 1), s.push((o + r).trim());
                                        break;
                                      }
                                      '(' === e && (i = !0);
                                    }
                                    (r += e), (n += 1);
                                  }
                                }
                              }
                              return s.join(', ');
                            })(e, r)
                          : 'style' === n
                            ? $(r, J())
                            : 'object' === t && 'data' === n
                              ? X(e, r)
                              : 'function' == typeof o
                                ? o(n, r, s)
                                : r
                        : X(e, r)
                    : r;
                }
                function Q(e, t, n) {
                  return ('video' === e || 'audio' === e) && 'autoplay' === t;
                }
                function ee(e, t, n = Infinity, r = 0) {
                  return e
                    ? e.nodeType !== e.ELEMENT_NODE || r > n
                      ? -1
                      : t(e)
                        ? r
                        : ee(e.parentNode, t, n, r + 1)
                    : -1;
                }
                function te(e, t) {
                  return n => {
                    const r = n;
                    if (null === r) return !1;
                    try {
                      if (e)
                        if ('string' == typeof e) {
                          if (r.matches(`.${e}`)) return !0;
                        } else if (
                          (function (e, t) {
                            for (let n = e.classList.length; n--; ) {
                              const r = e.classList[n];
                              if (t.test(r)) return !0;
                            }
                            return !1;
                          })(r, e)
                        )
                          return !0;
                      return !(!t || !r.matches(t));
                    } catch (e) {
                      return !1;
                    }
                  };
                }
                function ne(e, t, n, r, s, o) {
                  try {
                    const i = e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
                    if (null === i) return !1;
                    if ('INPUT' === i.tagName) {
                      const e = i.getAttribute('autocomplete');
                      if (
                        [
                          'current-password',
                          'new-password',
                          'cc-number',
                          'cc-exp',
                          'cc-exp-month',
                          'cc-exp-year',
                          'cc-csc',
                        ].includes(e)
                      )
                        return !0;
                    }
                    let a = -1,
                      c = -1;
                    if (o) {
                      if (((c = ee(i, te(r, s))), c < 0)) return !0;
                      a = ee(i, te(t, n), c >= 0 ? c : Infinity);
                    } else {
                      if (((a = ee(i, te(t, n))), a < 0)) return !1;
                      c = ee(i, te(r, s), a >= 0 ? a : Infinity);
                    }
                    return a >= 0 ? !(c >= 0) || a <= c : !(c >= 0) && !!o;
                  } catch (e) {}
                  return !!o;
                }
                function re(e, t) {
                  const {
                      doc: n,
                      mirror: r,
                      blockClass: s,
                      blockSelector: o,
                      unblockSelector: i,
                      maskAllText: a,
                      maskAttributeFn: c,
                      maskTextClass: u,
                      unmaskTextClass: l,
                      maskTextSelector: d,
                      unmaskTextSelector: f,
                      inlineStylesheet: h,
                      maskInputOptions: p = {},
                      maskTextFn: m,
                      maskInputFn: g,
                      dataURLOptions: w = {},
                      inlineImages: v,
                      recordCanvas: E,
                      keepIframeSrcFn: S,
                      newlyAddedElement: O = !1,
                    } = t,
                    j = (function (e, t) {
                      if (!t.hasNode(e)) return undefined;
                      const n = t.getId(e);
                      return 1 === n ? undefined : n;
                    })(n, r);
                  switch (e.nodeType) {
                    case e.DOCUMENT_NODE:
                      return 'CSS1Compat' !== e.compatMode
                        ? { type: b.Document, childNodes: [], compatMode: e.compatMode }
                        : { type: b.Document, childNodes: [] };
                    case e.DOCUMENT_TYPE_NODE:
                      return {
                        type: b.DocumentType,
                        name: e.name,
                        publicId: e.publicId,
                        systemId: e.systemId,
                        rootId: j,
                      };
                    case e.ELEMENT_NODE:
                      return (function (e, t) {
                        const {
                            doc: n,
                            blockClass: r,
                            blockSelector: s,
                            unblockSelector: o,
                            inlineStylesheet: i,
                            maskInputOptions: a = {},
                            maskAttributeFn: c,
                            maskInputFn: u,
                            dataURLOptions: l = {},
                            inlineImages: d,
                            recordCanvas: f,
                            keepIframeSrcFn: h,
                            newlyAddedElement: p = !1,
                            rootId: m,
                            maskAllText: g,
                            maskTextClass: y,
                            unmaskTextClass: w,
                            maskTextSelector: v,
                            unmaskTextSelector: E,
                          } = t,
                          S = (function (e, t, n, r) {
                            try {
                              if (r && e.matches(r)) return !1;
                              if ('string' == typeof t) {
                                if (e.classList.contains(t)) return !0;
                              } else
                                for (let n = e.classList.length; n--; ) {
                                  const r = e.classList[n];
                                  if (t.test(r)) return !0;
                                }
                              if (n) return e.matches(n);
                            } catch (e) {}
                            return !1;
                          })(e, r, s, o),
                          O = (function (e) {
                            if (e instanceof HTMLFormElement) return 'form';
                            const t = I(e.tagName);
                            return M.test(t) ? 'div' : t;
                          })(e);
                        let j = {};
                        const R = e.attributes.length;
                        for (let t = 0; t < R; t++) {
                          const r = e.attributes[t];
                          r.name &&
                            !Q(O, r.name, r.value) &&
                            (j[r.name] = Z(n, O, I(r.name), r.value, e, c));
                        }
                        if ('link' === O && i) {
                          const t = Array.from(n.styleSheets).find(t => t.href === e.href);
                          let r = null;
                          t && (r = _(t)),
                            r && (delete j.rel, delete j.href, (j._cssText = $(r, t.href)));
                        }
                        if (
                          'style' === O &&
                          e.sheet &&
                          !(e.innerText || e.textContent || '').trim().length
                        ) {
                          const t = _(e.sheet);
                          t && (j._cssText = $(t, J()));
                        }
                        if ('input' === O || 'textarea' === O || 'select' === O || 'option' === O) {
                          const t = e,
                            n = C(t),
                            r = B(t, k(O), n),
                            s = t.checked;
                          if ('submit' !== n && 'button' !== n && r) {
                            const e = ne(
                              t,
                              y,
                              v,
                              w,
                              E,
                              x({ type: n, tagName: k(O), maskInputOptions: a })
                            );
                            j.value = T({ isMasked: e, element: t, value: r, maskInputFn: u });
                          }
                          s && (j.checked = s);
                        }
                        'option' === O &&
                          (e.selected && !a.select ? (j.selected = !0) : delete j.selected);
                        if ('canvas' === O && f)
                          if ('2d' === e.__context)
                            (function (e) {
                              const t = e.getContext('2d');
                              if (!t) return !0;
                              for (let n = 0; n < e.width; n += 50)
                                for (let r = 0; r < e.height; r += 50) {
                                  const s = t.getImageData,
                                    o = A in s ? s[A] : s;
                                  if (
                                    new Uint32Array(
                                      o.call(
                                        t,
                                        n,
                                        r,
                                        Math.min(50, e.width - n),
                                        Math.min(50, e.height - r)
                                      ).data.buffer
                                    ).some(e => 0 !== e)
                                  )
                                    return !1;
                                }
                              return !0;
                            })(e) || (j.rr_dataURL = e.toDataURL(l.type, l.quality));
                          else if (!('__context' in e)) {
                            const t = e.toDataURL(l.type, l.quality),
                              n = document.createElement('canvas');
                            (n.width = e.width), (n.height = e.height);
                            t !== n.toDataURL(l.type, l.quality) && (j.rr_dataURL = t);
                          }
                        if ('img' === O && d) {
                          H || ((H = n.createElement('canvas')), (U = H.getContext('2d')));
                          const t = e,
                            r = t.crossOrigin;
                          t.crossOrigin = 'anonymous';
                          const s = () => {
                            t.removeEventListener('load', s);
                            try {
                              (H.width = t.naturalWidth),
                                (H.height = t.naturalHeight),
                                U.drawImage(t, 0, 0),
                                (j.rr_dataURL = H.toDataURL(l.type, l.quality));
                            } catch (e) {
                              console.warn(`Cannot inline img src=${t.currentSrc}! Error: ${e}`);
                            }
                            r ? (j.crossOrigin = r) : t.removeAttribute('crossorigin');
                          };
                          t.complete && 0 !== t.naturalWidth ? s() : t.addEventListener('load', s);
                        }
                        ('audio' !== O && 'video' !== O) ||
                          ((j.rr_mediaState = e.paused ? 'paused' : 'played'),
                          (j.rr_mediaCurrentTime = e.currentTime));
                        p ||
                          (e.scrollLeft && (j.rr_scrollLeft = e.scrollLeft),
                          e.scrollTop && (j.rr_scrollTop = e.scrollTop));
                        if (S) {
                          const { width: t, height: n } = e.getBoundingClientRect();
                          j = { class: j.class, rr_width: `${t}px`, rr_height: `${n}px` };
                        }
                        'iframe' !== O ||
                          h(j.src) ||
                          (S || e.contentDocument || (j.rr_src = j.src), delete j.src);
                        let P;
                        try {
                          customElements.get(O) && (P = !0);
                        } catch (e) {}
                        return {
                          type: b.Element,
                          tagName: O,
                          attributes: j,
                          childNodes: [],
                          isSVG: Y(e) || undefined,
                          needBlock: S,
                          rootId: m,
                          isCustom: P,
                        };
                      })(e, {
                        doc: n,
                        blockClass: s,
                        blockSelector: o,
                        unblockSelector: i,
                        inlineStylesheet: h,
                        maskAttributeFn: c,
                        maskInputOptions: p,
                        maskInputFn: g,
                        dataURLOptions: w,
                        inlineImages: v,
                        recordCanvas: E,
                        keepIframeSrcFn: S,
                        newlyAddedElement: O,
                        rootId: j,
                        maskAllText: a,
                        maskTextClass: u,
                        unmaskTextClass: l,
                        maskTextSelector: d,
                        unmaskTextSelector: f,
                      });
                    case e.TEXT_NODE:
                      return (function (e, t) {
                        const {
                            maskAllText: n,
                            maskTextClass: r,
                            unmaskTextClass: s,
                            maskTextSelector: o,
                            unmaskTextSelector: i,
                            maskTextFn: a,
                            maskInputOptions: c,
                            maskInputFn: u,
                            rootId: l,
                          } = t,
                          d = e.parentNode && e.parentNode.tagName;
                        let f = e.textContent;
                        const h = 'STYLE' === d || undefined,
                          p = 'SCRIPT' === d || undefined,
                          m = 'TEXTAREA' === d || undefined;
                        if (h && f) {
                          try {
                            e.nextSibling ||
                              e.previousSibling ||
                              (y([
                                e,
                                'access',
                                e => e.parentNode,
                                'access',
                                e => e.sheet,
                                'optionalAccess',
                                e => e.cssRules,
                              ]) &&
                                (f = _(e.parentNode.sheet)));
                          } catch (t) {
                            console.warn(
                              `Cannot get CSS styles from text's parentNode. Error: ${t}`,
                              e
                            );
                          }
                          f = $(f, J());
                        }
                        p && (f = 'SCRIPT_PLACEHOLDER');
                        const g = ne(e, r, o, s, i, n);
                        h ||
                          p ||
                          m ||
                          !f ||
                          !g ||
                          (f = a ? a(f, e.parentElement) : f.replace(/[\S]/g, '*'));
                        m &&
                          f &&
                          (c.textarea || g) &&
                          (f = u ? u(f, e.parentNode) : f.replace(/[\S]/g, '*'));
                        if ('OPTION' === d && f) {
                          f = T({
                            isMasked: ne(
                              e,
                              r,
                              o,
                              s,
                              i,
                              x({ type: null, tagName: d, maskInputOptions: c })
                            ),
                            element: e,
                            value: f,
                            maskInputFn: u,
                          });
                        }
                        return { type: b.Text, textContent: f || '', isStyle: h, rootId: l };
                      })(e, {
                        maskAllText: a,
                        maskTextClass: u,
                        unmaskTextClass: l,
                        maskTextSelector: d,
                        unmaskTextSelector: f,
                        maskTextFn: m,
                        maskInputOptions: p,
                        maskInputFn: g,
                        rootId: j,
                      });
                    case e.CDATA_SECTION_NODE:
                      return { type: b.CDATA, textContent: '', rootId: j };
                    case e.COMMENT_NODE:
                      return { type: b.Comment, textContent: e.textContent || '', rootId: j };
                    default:
                      return !1;
                  }
                }
                function se(e) {
                  return e === undefined || null === e ? '' : e.toLowerCase();
                }
                function oe(e, t) {
                  const {
                    doc: n,
                    mirror: r,
                    blockClass: s,
                    blockSelector: o,
                    unblockSelector: i,
                    maskAllText: a,
                    maskTextClass: c,
                    unmaskTextClass: u,
                    maskTextSelector: l,
                    unmaskTextSelector: d,
                    skipChild: f = !1,
                    inlineStylesheet: h = !0,
                    maskInputOptions: p = {},
                    maskAttributeFn: m,
                    maskTextFn: g,
                    maskInputFn: y,
                    slimDOMOptions: _,
                    dataURLOptions: E = {},
                    inlineImages: S = !1,
                    recordCanvas: x = !1,
                    onSerialize: T,
                    onIframeLoad: I,
                    iframeLoadTimeout: k = 5e3,
                    onStylesheetLoad: A,
                    stylesheetLoadTimeout: C = 5e3,
                    keepIframeSrcFn: B = () => !1,
                    newlyAddedElement: j = !1,
                  } = t;
                  let { preserveWhiteSpace: R = !0 } = t;
                  const L = re(e, {
                    doc: n,
                    mirror: r,
                    blockClass: s,
                    blockSelector: o,
                    maskAllText: a,
                    unblockSelector: i,
                    maskTextClass: c,
                    unmaskTextClass: u,
                    maskTextSelector: l,
                    unmaskTextSelector: d,
                    inlineStylesheet: h,
                    maskInputOptions: p,
                    maskAttributeFn: m,
                    maskTextFn: g,
                    maskInputFn: y,
                    dataURLOptions: E,
                    inlineImages: S,
                    recordCanvas: x,
                    keepIframeSrcFn: B,
                    newlyAddedElement: j,
                  });
                  if (!L) return console.warn(e, 'not serialized'), null;
                  let M;
                  M = r.hasNode(e)
                    ? r.getId(e)
                    : !(function (e, t) {
                          if (t.comment && e.type === b.Comment) return !0;
                          if (e.type === b.Element) {
                            if (
                              t.script &&
                              ('script' === e.tagName ||
                                ('link' === e.tagName &&
                                  ('preload' === e.attributes.rel ||
                                    'modulepreload' === e.attributes.rel) &&
                                  'script' === e.attributes.as) ||
                                ('link' === e.tagName &&
                                  'prefetch' === e.attributes.rel &&
                                  'string' == typeof e.attributes.href &&
                                  'js' === O(e.attributes.href)))
                            )
                              return !0;
                            if (
                              t.headFavicon &&
                              (('link' === e.tagName && 'shortcut icon' === e.attributes.rel) ||
                                ('meta' === e.tagName &&
                                  (se(e.attributes.name).match(
                                    /^msapplication-tile(image|color)$/
                                  ) ||
                                    'application-name' === se(e.attributes.name) ||
                                    'icon' === se(e.attributes.rel) ||
                                    'apple-touch-icon' === se(e.attributes.rel) ||
                                    'shortcut icon' === se(e.attributes.rel))))
                            )
                              return !0;
                            if ('meta' === e.tagName) {
                              if (
                                t.headMetaDescKeywords &&
                                se(e.attributes.name).match(/^description|keywords$/)
                              )
                                return !0;
                              if (
                                t.headMetaSocial &&
                                (se(e.attributes.property).match(/^(og|twitter|fb):/) ||
                                  se(e.attributes.name).match(/^(og|twitter):/) ||
                                  'pinterest' === se(e.attributes.name))
                              )
                                return !0;
                              if (
                                t.headMetaRobots &&
                                ('robots' === se(e.attributes.name) ||
                                  'googlebot' === se(e.attributes.name) ||
                                  'bingbot' === se(e.attributes.name))
                              )
                                return !0;
                              if (t.headMetaHttpEquiv && e.attributes['http-equiv'] !== undefined)
                                return !0;
                              if (
                                t.headMetaAuthorship &&
                                ('author' === se(e.attributes.name) ||
                                  'generator' === se(e.attributes.name) ||
                                  'framework' === se(e.attributes.name) ||
                                  'publisher' === se(e.attributes.name) ||
                                  'progid' === se(e.attributes.name) ||
                                  se(e.attributes.property).match(/^article:/) ||
                                  se(e.attributes.property).match(/^product:/))
                              )
                                return !0;
                              if (
                                t.headMetaVerification &&
                                ('google-site-verification' === se(e.attributes.name) ||
                                  'yandex-verification' === se(e.attributes.name) ||
                                  'csrf-token' === se(e.attributes.name) ||
                                  'p:domain_verify' === se(e.attributes.name) ||
                                  'verify-v1' === se(e.attributes.name) ||
                                  'verification' === se(e.attributes.name) ||
                                  'shopify-checkout-api-token' === se(e.attributes.name))
                              )
                                return !0;
                            }
                          }
                          return !1;
                        })(L, _) &&
                        (R ||
                          L.type !== b.Text ||
                          L.isStyle ||
                          L.textContent.replace(/^\s+|\s+$/gm, '').length)
                      ? F()
                      : D;
                  const H = Object.assign(L, { id: M });
                  if ((r.add(e, H), M === D)) return null;
                  T && T(e);
                  let U = !f;
                  if (H.type === b.Element) {
                    (U = U && !H.needBlock), delete H.needBlock;
                    const t = e.shadowRoot;
                    t && v(t) && (H.isShadowHost = !0);
                  }
                  if ((H.type === b.Document || H.type === b.Element) && U) {
                    _.headWhitespace && H.type === b.Element && 'head' === H.tagName && (R = !1);
                    const t = {
                      doc: n,
                      mirror: r,
                      blockClass: s,
                      blockSelector: o,
                      maskAllText: a,
                      unblockSelector: i,
                      maskTextClass: c,
                      unmaskTextClass: u,
                      maskTextSelector: l,
                      unmaskTextSelector: d,
                      skipChild: f,
                      inlineStylesheet: h,
                      maskInputOptions: p,
                      maskAttributeFn: m,
                      maskTextFn: g,
                      maskInputFn: y,
                      slimDOMOptions: _,
                      dataURLOptions: E,
                      inlineImages: S,
                      recordCanvas: x,
                      preserveWhiteSpace: R,
                      onSerialize: T,
                      onIframeLoad: I,
                      iframeLoadTimeout: k,
                      onStylesheetLoad: A,
                      stylesheetLoadTimeout: C,
                      keepIframeSrcFn: B,
                    };
                    for (const n of Array.from(e.childNodes)) {
                      const e = oe(n, t);
                      e && H.childNodes.push(e);
                    }
                    if (
                      (function (e) {
                        return e.nodeType === e.ELEMENT_NODE;
                      })(e) &&
                      e.shadowRoot
                    )
                      for (const n of Array.from(e.shadowRoot.childNodes)) {
                        const r = oe(n, t);
                        r && (v(e.shadowRoot) && (r.isShadow = !0), H.childNodes.push(r));
                      }
                  }
                  return (
                    e.parentNode && w(e.parentNode) && v(e.parentNode) && (H.isShadow = !0),
                    H.type === b.Element &&
                      'iframe' === H.tagName &&
                      (function (e, t, n) {
                        const r = e.contentWindow;
                        if (!r) return;
                        let s,
                          o = !1;
                        try {
                          s = r.document.readyState;
                        } catch (e) {
                          return;
                        }
                        if ('complete' !== s) {
                          const r = P(() => {
                            o || (t(), (o = !0));
                          }, n);
                          return void e.addEventListener('load', () => {
                            N(r), (o = !0), t();
                          });
                        }
                        const i = 'about:blank';
                        if (r.location.href !== i || e.src === i || '' === e.src)
                          return P(t, 0), e.addEventListener('load', t);
                        e.addEventListener('load', t);
                      })(
                        e,
                        () => {
                          const t = e.contentDocument;
                          if (t && I) {
                            const n = oe(t, {
                              doc: t,
                              mirror: r,
                              blockClass: s,
                              blockSelector: o,
                              unblockSelector: i,
                              maskAllText: a,
                              maskTextClass: c,
                              unmaskTextClass: u,
                              maskTextSelector: l,
                              unmaskTextSelector: d,
                              skipChild: !1,
                              inlineStylesheet: h,
                              maskInputOptions: p,
                              maskAttributeFn: m,
                              maskTextFn: g,
                              maskInputFn: y,
                              slimDOMOptions: _,
                              dataURLOptions: E,
                              inlineImages: S,
                              recordCanvas: x,
                              preserveWhiteSpace: R,
                              onSerialize: T,
                              onIframeLoad: I,
                              iframeLoadTimeout: k,
                              onStylesheetLoad: A,
                              stylesheetLoadTimeout: C,
                              keepIframeSrcFn: B,
                            });
                            n && I(e, n);
                          }
                        },
                        k
                      ),
                    H.type === b.Element &&
                      'link' === H.tagName &&
                      'string' == typeof H.attributes.rel &&
                      ('stylesheet' === H.attributes.rel ||
                        ('preload' === H.attributes.rel &&
                          'string' == typeof H.attributes.href &&
                          'css' === O(H.attributes.href))) &&
                      (function (e, t, n) {
                        let r,
                          s = !1;
                        try {
                          r = e.sheet;
                        } catch (e) {
                          return;
                        }
                        if (r) return;
                        const o = P(() => {
                          s || (t(), (s = !0));
                        }, n);
                        e.addEventListener('load', () => {
                          N(o), (s = !0), t();
                        });
                      })(
                        e,
                        () => {
                          if (A) {
                            const t = oe(e, {
                              doc: n,
                              mirror: r,
                              blockClass: s,
                              blockSelector: o,
                              unblockSelector: i,
                              maskAllText: a,
                              maskTextClass: c,
                              unmaskTextClass: u,
                              maskTextSelector: l,
                              unmaskTextSelector: d,
                              skipChild: !1,
                              inlineStylesheet: h,
                              maskInputOptions: p,
                              maskAttributeFn: m,
                              maskTextFn: g,
                              maskInputFn: y,
                              slimDOMOptions: _,
                              dataURLOptions: E,
                              inlineImages: S,
                              recordCanvas: x,
                              preserveWhiteSpace: R,
                              onSerialize: T,
                              onIframeLoad: I,
                              iframeLoadTimeout: k,
                              onStylesheetLoad: A,
                              stylesheetLoadTimeout: C,
                              keepIframeSrcFn: B,
                            });
                            t && A(e, t);
                          }
                        },
                        C
                      ),
                    H
                  );
                }
                function ie(e) {
                  let t = undefined,
                    n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    const s = e[r],
                      o = e[r + 1];
                    if (((r += 2), ('optionalAccess' === s || 'optionalCall' === s) && null == n))
                      return undefined;
                    'access' === s || 'optionalAccess' === s
                      ? ((t = n), (n = o(n)))
                      : ('call' !== s && 'optionalCall' !== s) ||
                        ((n = o((...e) => n.call(t, ...e))), (t = undefined));
                  }
                  return n;
                }
                function ae(e, t, n = document) {
                  const r = { capture: !0, passive: !0 };
                  return n.addEventListener(e, t, r), () => n.removeEventListener(e, t, r);
                }
                const ce =
                  'Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.';
                let ue = {
                  map: {},
                  getId: () => (console.error(ce), -1),
                  getNode: () => (console.error(ce), null),
                  removeNodeFromMap() {
                    console.error(ce);
                  },
                  has: () => (console.error(ce), !1),
                  reset() {
                    console.error(ce);
                  },
                };
                function le(e, t, n = {}) {
                  let r = null,
                    s = 0;
                  return function (...o) {
                    const i = Date.now();
                    s || !1 !== n.leading || (s = i);
                    const a = t - (i - s),
                      c = this;
                    a <= 0 || a > t
                      ? (r &&
                          (!(function (...e) {
                            Be('clearTimeout')(...e);
                          })(r),
                          (r = null)),
                        (s = i),
                        e.apply(c, o))
                      : r ||
                        !1 === n.trailing ||
                        (r = Oe(() => {
                          (s = !1 === n.leading ? 0 : Date.now()), (r = null), e.apply(c, o);
                        }, a));
                  };
                }
                function de(e, t, n, r, s = window) {
                  const o = s.Object.getOwnPropertyDescriptor(e, t);
                  return (
                    s.Object.defineProperty(
                      e,
                      t,
                      r
                        ? n
                        : {
                            set(e) {
                              Oe(() => {
                                n.set.call(this, e);
                              }, 0),
                                o && o.set && o.set.call(this, e);
                            },
                          }
                    ),
                    () => de(e, t, o || {}, !0)
                  );
                }
                function fe(e, t, n) {
                  try {
                    if (!(t in e)) return () => {};
                    const r = e[t],
                      s = n(r);
                    return (
                      'function' == typeof s &&
                        ((s.prototype = s.prototype || {}),
                        Object.defineProperties(s, {
                          __rrweb_original__: { enumerable: !1, value: r },
                        })),
                      (e[t] = s),
                      () => {
                        e[t] = r;
                      }
                    );
                  } catch (e) {
                    return () => {};
                  }
                }
                'undefined' != typeof window &&
                  window.Proxy &&
                  window.Reflect &&
                  (ue = new Proxy(ue, {
                    get: (e, t, n) => ('map' === t && console.error(ce), Reflect.get(e, t, n)),
                  }));
                let he = Date.now;
                function pe(e) {
                  const t = e.document;
                  return {
                    left: t.scrollingElement
                      ? t.scrollingElement.scrollLeft
                      : e.pageXOffset !== undefined
                        ? e.pageXOffset
                        : ie([
                            t,
                            'optionalAccess',
                            e => e.documentElement,
                            'access',
                            e => e.scrollLeft,
                          ]) ||
                          ie([
                            t,
                            'optionalAccess',
                            e => e.body,
                            'optionalAccess',
                            e => e.parentElement,
                            'optionalAccess',
                            e => e.scrollLeft,
                          ]) ||
                          ie([
                            t,
                            'optionalAccess',
                            e => e.body,
                            'optionalAccess',
                            e => e.scrollLeft,
                          ]) ||
                          0,
                    top: t.scrollingElement
                      ? t.scrollingElement.scrollTop
                      : e.pageYOffset !== undefined
                        ? e.pageYOffset
                        : ie([
                            t,
                            'optionalAccess',
                            e => e.documentElement,
                            'access',
                            e => e.scrollTop,
                          ]) ||
                          ie([
                            t,
                            'optionalAccess',
                            e => e.body,
                            'optionalAccess',
                            e => e.parentElement,
                            'optionalAccess',
                            e => e.scrollTop,
                          ]) ||
                          ie([
                            t,
                            'optionalAccess',
                            e => e.body,
                            'optionalAccess',
                            e => e.scrollTop,
                          ]) ||
                          0,
                  };
                }
                function me() {
                  return (
                    window.innerHeight ||
                    (document.documentElement && document.documentElement.clientHeight) ||
                    (document.body && document.body.clientHeight)
                  );
                }
                function ge() {
                  return (
                    window.innerWidth ||
                    (document.documentElement && document.documentElement.clientWidth) ||
                    (document.body && document.body.clientWidth)
                  );
                }
                function ye(e) {
                  if (!e) return null;
                  return e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
                }
                function be(e, t, n, r, s) {
                  if (!e) return !1;
                  const o = ye(e);
                  if (!o) return !1;
                  const i = te(t, n);
                  if (!s) {
                    const e = r && o.matches(r);
                    return i(o) && !e;
                  }
                  const a = ee(o, i);
                  let c = -1;
                  return !(a < 0) && (r && (c = ee(o, te(null, r))), (a > -1 && c < 0) || a < c);
                }
                function we(e, t) {
                  return t.getId(e) === D;
                }
                function ve(e, t) {
                  if (w(e)) return !1;
                  const n = t.getId(e);
                  return (
                    !t.has(n) ||
                    ((!e.parentNode || e.parentNode.nodeType !== e.DOCUMENT_NODE) &&
                      (!e.parentNode || ve(e.parentNode, t)))
                  );
                }
                function _e(e) {
                  return Boolean(e.changedTouches);
                }
                function Ee(e, t) {
                  return Boolean('IFRAME' === e.nodeName && t.getMeta(e));
                }
                function Se(e, t) {
                  return Boolean(
                    'LINK' === e.nodeName &&
                      e.nodeType === e.ELEMENT_NODE &&
                      e.getAttribute &&
                      'stylesheet' === e.getAttribute('rel') &&
                      t.getMeta(e)
                  );
                }
                function xe(e) {
                  return Boolean(ie([e, 'optionalAccess', e => e.shadowRoot]));
                }
                /[1-9][0-9]{12}/.test(Date.now().toString()) || (he = () => new Date().getTime());
                class Te {
                  constructor() {
                    (this.id = 1), (this.styleIDMap = new WeakMap()), (this.idStyleMap = new Map());
                  }
                  getId(e) {
                    return r(this.styleIDMap.get(e), () => -1);
                  }
                  has(e) {
                    return this.styleIDMap.has(e);
                  }
                  add(e, t) {
                    if (this.has(e)) return this.getId(e);
                    let n;
                    return (
                      (n = t === undefined ? this.id++ : t),
                      this.styleIDMap.set(e, n),
                      this.idStyleMap.set(n, e),
                      n
                    );
                  }
                  getStyle(e) {
                    return this.idStyleMap.get(e) || null;
                  }
                  reset() {
                    (this.styleIDMap = new WeakMap()), (this.idStyleMap = new Map()), (this.id = 1);
                  }
                  generateId() {
                    return this.id++;
                  }
                }
                function Ie(e) {
                  let t = null;
                  return (
                    ie([
                      e,
                      'access',
                      e => e.getRootNode,
                      'optionalCall',
                      e => e(),
                      'optionalAccess',
                      e => e.nodeType,
                    ]) === Node.DOCUMENT_FRAGMENT_NODE &&
                      e.getRootNode().host &&
                      (t = e.getRootNode().host),
                    t
                  );
                }
                function ke(e) {
                  const t = e.ownerDocument;
                  if (!t) return !1;
                  const n = (function (e) {
                    let t,
                      n = e;
                    for (; (t = Ie(n)); ) n = t;
                    return n;
                  })(e);
                  return t.contains(n);
                }
                function Ae(e) {
                  const t = e.ownerDocument;
                  return !!t && (t.contains(e) || ke(e));
                }
                const Ce = {};
                function Be(e) {
                  const t = Ce[e];
                  if (t) return t;
                  const n = window.document;
                  let r = window[e];
                  if (n && 'function' == typeof n.createElement)
                    try {
                      const t = n.createElement('iframe');
                      (t.hidden = !0), n.head.appendChild(t);
                      const s = t.contentWindow;
                      s && s[e] && (r = s[e]), n.head.removeChild(t);
                    } catch (e) {}
                  return (Ce[e] = r.bind(window));
                }
                function Oe(...e) {
                  return Be('setTimeout')(...e);
                }
                var je = (e => (
                    (e[(e.DomContentLoaded = 0)] = 'DomContentLoaded'),
                    (e[(e.Load = 1)] = 'Load'),
                    (e[(e.FullSnapshot = 2)] = 'FullSnapshot'),
                    (e[(e.IncrementalSnapshot = 3)] = 'IncrementalSnapshot'),
                    (e[(e.Meta = 4)] = 'Meta'),
                    (e[(e.Custom = 5)] = 'Custom'),
                    (e[(e.Plugin = 6)] = 'Plugin'),
                    e
                  ))(je || {}),
                  Re = (e => (
                    (e[(e.Mutation = 0)] = 'Mutation'),
                    (e[(e.MouseMove = 1)] = 'MouseMove'),
                    (e[(e.MouseInteraction = 2)] = 'MouseInteraction'),
                    (e[(e.Scroll = 3)] = 'Scroll'),
                    (e[(e.ViewportResize = 4)] = 'ViewportResize'),
                    (e[(e.Input = 5)] = 'Input'),
                    (e[(e.TouchMove = 6)] = 'TouchMove'),
                    (e[(e.MediaInteraction = 7)] = 'MediaInteraction'),
                    (e[(e.StyleSheetRule = 8)] = 'StyleSheetRule'),
                    (e[(e.CanvasMutation = 9)] = 'CanvasMutation'),
                    (e[(e.Font = 10)] = 'Font'),
                    (e[(e.Log = 11)] = 'Log'),
                    (e[(e.Drag = 12)] = 'Drag'),
                    (e[(e.StyleDeclaration = 13)] = 'StyleDeclaration'),
                    (e[(e.Selection = 14)] = 'Selection'),
                    (e[(e.AdoptedStyleSheet = 15)] = 'AdoptedStyleSheet'),
                    (e[(e.CustomElement = 16)] = 'CustomElement'),
                    e
                  ))(Re || {}),
                  Pe = (e => (
                    (e[(e.MouseUp = 0)] = 'MouseUp'),
                    (e[(e.MouseDown = 1)] = 'MouseDown'),
                    (e[(e.Click = 2)] = 'Click'),
                    (e[(e.ContextMenu = 3)] = 'ContextMenu'),
                    (e[(e.DblClick = 4)] = 'DblClick'),
                    (e[(e.Focus = 5)] = 'Focus'),
                    (e[(e.Blur = 6)] = 'Blur'),
                    (e[(e.TouchStart = 7)] = 'TouchStart'),
                    (e[(e.TouchMove_Departed = 8)] = 'TouchMove_Departed'),
                    (e[(e.TouchEnd = 9)] = 'TouchEnd'),
                    (e[(e.TouchCancel = 10)] = 'TouchCancel'),
                    e
                  ))(Pe || {}),
                  Ne = (e => (
                    (e[(e.Mouse = 0)] = 'Mouse'),
                    (e[(e.Pen = 1)] = 'Pen'),
                    (e[(e.Touch = 2)] = 'Touch'),
                    e
                  ))(Ne || {});
                function Le(e) {
                  let t = undefined,
                    n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    const s = e[r],
                      o = e[r + 1];
                    if (((r += 2), ('optionalAccess' === s || 'optionalCall' === s) && null == n))
                      return undefined;
                    'access' === s || 'optionalAccess' === s
                      ? ((t = n), (n = o(n)))
                      : ('call' !== s && 'optionalCall' !== s) ||
                        ((n = o((...e) => n.call(t, ...e))), (t = undefined));
                  }
                  return n;
                }
                function Me(e) {
                  return '__ln' in e;
                }
                class De {
                  constructor() {
                    (this.length = 0), (this.head = null), (this.tail = null);
                  }
                  get(e) {
                    if (e >= this.length) throw new Error('Position outside of list range');
                    let t = this.head;
                    for (let n = 0; n < e; n++) t = Le([t, 'optionalAccess', e => e.next]) || null;
                    return t;
                  }
                  addNode(e) {
                    const t = { value: e, previous: null, next: null };
                    if (((e.__ln = t), e.previousSibling && Me(e.previousSibling))) {
                      const n = e.previousSibling.__ln.next;
                      (t.next = n),
                        (t.previous = e.previousSibling.__ln),
                        (e.previousSibling.__ln.next = t),
                        n && (n.previous = t);
                    } else if (e.nextSibling && Me(e.nextSibling) && e.nextSibling.__ln.previous) {
                      const n = e.nextSibling.__ln.previous;
                      (t.previous = n),
                        (t.next = e.nextSibling.__ln),
                        (e.nextSibling.__ln.previous = t),
                        n && (n.next = t);
                    } else
                      this.head && (this.head.previous = t), (t.next = this.head), (this.head = t);
                    null === t.next && (this.tail = t), this.length++;
                  }
                  removeNode(e) {
                    const t = e.__ln;
                    this.head &&
                      (t.previous
                        ? ((t.previous.next = t.next),
                          t.next ? (t.next.previous = t.previous) : (this.tail = t.previous))
                        : ((this.head = t.next),
                          this.head ? (this.head.previous = null) : (this.tail = null)),
                      e.__ln && delete e.__ln,
                      this.length--);
                  }
                }
                const Fe = (e, t) => `${e}@${t}`;
                class He {
                  constructor() {
                    (this.frozen = !1),
                      (this.locked = !1),
                      (this.texts = []),
                      (this.attributes = []),
                      (this.attributeMap = new WeakMap()),
                      (this.removes = []),
                      (this.mapRemoves = []),
                      (this.movedMap = {}),
                      (this.addedSet = new Set()),
                      (this.movedSet = new Set()),
                      (this.droppedSet = new Set()),
                      (this.processMutations = e => {
                        e.forEach(this.processMutation), this.emit();
                      }),
                      (this.emit = () => {
                        if (this.frozen || this.locked) return;
                        const e = [],
                          t = new Set(),
                          n = new De(),
                          r = e => {
                            let t = e,
                              n = D;
                            for (; n === D; )
                              (t = t && t.nextSibling), (n = t && this.mirror.getId(t));
                            return n;
                          },
                          s = s => {
                            if (!s.parentNode || !Ae(s)) return;
                            const o = w(s.parentNode)
                                ? this.mirror.getId(Ie(s))
                                : this.mirror.getId(s.parentNode),
                              i = r(s);
                            if (-1 === o || -1 === i) return n.addNode(s);
                            const a = oe(s, {
                              doc: this.doc,
                              mirror: this.mirror,
                              blockClass: this.blockClass,
                              blockSelector: this.blockSelector,
                              maskAllText: this.maskAllText,
                              unblockSelector: this.unblockSelector,
                              maskTextClass: this.maskTextClass,
                              unmaskTextClass: this.unmaskTextClass,
                              maskTextSelector: this.maskTextSelector,
                              unmaskTextSelector: this.unmaskTextSelector,
                              skipChild: !0,
                              newlyAddedElement: !0,
                              inlineStylesheet: this.inlineStylesheet,
                              maskInputOptions: this.maskInputOptions,
                              maskAttributeFn: this.maskAttributeFn,
                              maskTextFn: this.maskTextFn,
                              maskInputFn: this.maskInputFn,
                              slimDOMOptions: this.slimDOMOptions,
                              dataURLOptions: this.dataURLOptions,
                              recordCanvas: this.recordCanvas,
                              inlineImages: this.inlineImages,
                              onSerialize: e => {
                                Ee(e, this.mirror) &&
                                  !be(
                                    e,
                                    this.blockClass,
                                    this.blockSelector,
                                    this.unblockSelector,
                                    !1
                                  ) &&
                                  this.iframeManager.addIframe(e),
                                  Se(e, this.mirror) && this.stylesheetManager.trackLinkElement(e),
                                  xe(s) &&
                                    this.shadowDomManager.addShadowRoot(s.shadowRoot, this.doc);
                              },
                              onIframeLoad: (e, t) => {
                                be(
                                  e,
                                  this.blockClass,
                                  this.blockSelector,
                                  this.unblockSelector,
                                  !1
                                ) ||
                                  (this.iframeManager.attachIframe(e, t),
                                  e.contentWindow && this.canvasManager.addWindow(e.contentWindow),
                                  this.shadowDomManager.observeAttachShadow(e));
                              },
                              onStylesheetLoad: (e, t) => {
                                this.stylesheetManager.attachLinkElement(e, t);
                              },
                            });
                            a && (e.push({ parentId: o, nextId: i, node: a }), t.add(a.id));
                          };
                        for (; this.mapRemoves.length; )
                          this.mirror.removeNodeFromMap(this.mapRemoves.shift());
                        for (const e of this.movedSet)
                          (We(this.removes, e, this.mirror) && !this.movedSet.has(e.parentNode)) ||
                            s(e);
                        for (const e of this.addedSet)
                          ze(this.droppedSet, e) || We(this.removes, e, this.mirror)
                            ? ze(this.movedSet, e)
                              ? s(e)
                              : this.droppedSet.add(e)
                            : s(e);
                        let o = null;
                        for (; n.length; ) {
                          let e = null;
                          if (o) {
                            const t = this.mirror.getId(o.value.parentNode),
                              n = r(o.value);
                            -1 !== t && -1 !== n && (e = o);
                          }
                          if (!e) {
                            let t = n.tail;
                            for (; t; ) {
                              const n = t;
                              if (((t = t.previous), n)) {
                                const t = this.mirror.getId(n.value.parentNode);
                                if (-1 === r(n.value)) continue;
                                if (-1 !== t) {
                                  e = n;
                                  break;
                                }
                                {
                                  const t = n.value;
                                  if (
                                    t.parentNode &&
                                    t.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                                  ) {
                                    const r = t.parentNode.host;
                                    if (-1 !== this.mirror.getId(r)) {
                                      e = n;
                                      break;
                                    }
                                  }
                                }
                              }
                            }
                          }
                          if (!e) {
                            for (; n.head; ) n.removeNode(n.head.value);
                            break;
                          }
                          (o = e.previous), n.removeNode(e.value), s(e.value);
                        }
                        const i = {
                          texts: this.texts
                            .map(e => ({ id: this.mirror.getId(e.node), value: e.value }))
                            .filter(e => !t.has(e.id))
                            .filter(e => this.mirror.has(e.id)),
                          attributes: this.attributes
                            .map(e => {
                              const { attributes: t } = e;
                              if ('string' == typeof t.style) {
                                const n = JSON.stringify(e.styleDiff),
                                  r = JSON.stringify(e._unchangedStyles);
                                n.length < t.style.length &&
                                  (n + r).split('var(').length === t.style.split('var(').length &&
                                  (t.style = e.styleDiff);
                              }
                              return { id: this.mirror.getId(e.node), attributes: t };
                            })
                            .filter(e => !t.has(e.id))
                            .filter(e => this.mirror.has(e.id)),
                          removes: this.removes,
                          adds: e,
                        };
                        (i.texts.length ||
                          i.attributes.length ||
                          i.removes.length ||
                          i.adds.length) &&
                          ((this.texts = []),
                          (this.attributes = []),
                          (this.attributeMap = new WeakMap()),
                          (this.removes = []),
                          (this.addedSet = new Set()),
                          (this.movedSet = new Set()),
                          (this.droppedSet = new Set()),
                          (this.movedMap = {}),
                          this.mutationCb(i));
                      }),
                      (this.processMutation = e => {
                        if (!we(e.target, this.mirror))
                          switch (e.type) {
                            case 'characterData': {
                              const t = e.target.textContent;
                              be(
                                e.target,
                                this.blockClass,
                                this.blockSelector,
                                this.unblockSelector,
                                !1
                              ) ||
                                t === e.oldValue ||
                                this.texts.push({
                                  value:
                                    ne(
                                      e.target,
                                      this.maskTextClass,
                                      this.maskTextSelector,
                                      this.unmaskTextClass,
                                      this.unmaskTextSelector,
                                      this.maskAllText
                                    ) && t
                                      ? this.maskTextFn
                                        ? this.maskTextFn(t, ye(e.target))
                                        : t.replace(/[\S]/g, '*')
                                      : t,
                                  node: e.target,
                                });
                              break;
                            }
                            case 'attributes': {
                              const t = e.target;
                              let n = e.attributeName,
                                r = e.target.getAttribute(n);
                              if ('value' === n) {
                                const n = C(t),
                                  s = t.tagName;
                                r = B(t, s, n);
                                const o = x({
                                  maskInputOptions: this.maskInputOptions,
                                  tagName: s,
                                  type: n,
                                });
                                r = T({
                                  isMasked: ne(
                                    e.target,
                                    this.maskTextClass,
                                    this.maskTextSelector,
                                    this.unmaskTextClass,
                                    this.unmaskTextSelector,
                                    o
                                  ),
                                  element: t,
                                  value: r,
                                  maskInputFn: this.maskInputFn,
                                });
                              }
                              if (
                                be(
                                  e.target,
                                  this.blockClass,
                                  this.blockSelector,
                                  this.unblockSelector,
                                  !1
                                ) ||
                                r === e.oldValue
                              )
                                return;
                              let s = this.attributeMap.get(e.target);
                              if (
                                'IFRAME' === t.tagName &&
                                'src' === n &&
                                !this.keepIframeSrcFn(r)
                              ) {
                                if (t.contentDocument) return;
                                n = 'rr_src';
                              }
                              if (
                                (s ||
                                  ((s = {
                                    node: e.target,
                                    attributes: {},
                                    styleDiff: {},
                                    _unchangedStyles: {},
                                  }),
                                  this.attributes.push(s),
                                  this.attributeMap.set(e.target, s)),
                                'type' === n &&
                                  'INPUT' === t.tagName &&
                                  'password' === (e.oldValue || '').toLowerCase() &&
                                  t.setAttribute('data-rr-is-password', 'true'),
                                !Q(t.tagName, n) &&
                                  ((s.attributes[n] = Z(
                                    this.doc,
                                    I(t.tagName),
                                    I(n),
                                    r,
                                    t,
                                    this.maskAttributeFn
                                  )),
                                  'style' === n))
                              ) {
                                if (!this.unattachedDoc)
                                  try {
                                    this.unattachedDoc =
                                      document.implementation.createHTMLDocument();
                                  } catch (e) {
                                    this.unattachedDoc = this.doc;
                                  }
                                const n = this.unattachedDoc.createElement('span');
                                e.oldValue && n.setAttribute('style', e.oldValue);
                                for (const e of Array.from(t.style)) {
                                  const r = t.style.getPropertyValue(e),
                                    o = t.style.getPropertyPriority(e);
                                  r !== n.style.getPropertyValue(e) ||
                                  o !== n.style.getPropertyPriority(e)
                                    ? (s.styleDiff[e] = '' === o ? r : [r, o])
                                    : (s._unchangedStyles[e] = [r, o]);
                                }
                                for (const e of Array.from(n.style))
                                  '' === t.style.getPropertyValue(e) && (s.styleDiff[e] = !1);
                              }
                              break;
                            }
                            case 'childList':
                              if (
                                be(
                                  e.target,
                                  this.blockClass,
                                  this.blockSelector,
                                  this.unblockSelector,
                                  !0
                                )
                              )
                                return;
                              e.addedNodes.forEach(t => this.genAdds(t, e.target)),
                                e.removedNodes.forEach(t => {
                                  const n = this.mirror.getId(t),
                                    r = w(e.target)
                                      ? this.mirror.getId(e.target.host)
                                      : this.mirror.getId(e.target);
                                  be(
                                    e.target,
                                    this.blockClass,
                                    this.blockSelector,
                                    this.unblockSelector,
                                    !1
                                  ) ||
                                    we(t, this.mirror) ||
                                    !(function (e, t) {
                                      return -1 !== t.getId(e);
                                    })(t, this.mirror) ||
                                    (this.addedSet.has(t)
                                      ? (Ue(this.addedSet, t), this.droppedSet.add(t))
                                      : (this.addedSet.has(e.target) && -1 === n) ||
                                        ve(e.target, this.mirror) ||
                                        (this.movedSet.has(t) && this.movedMap[Fe(n, r)]
                                          ? Ue(this.movedSet, t)
                                          : this.removes.push({
                                              parentId: r,
                                              id: n,
                                              isShadow:
                                                !(!w(e.target) || !v(e.target)) || undefined,
                                            })),
                                    this.mapRemoves.push(t));
                                });
                          }
                      }),
                      (this.genAdds = (e, t) => {
                        if (
                          !this.processedNodeManager.inOtherBuffer(e, this) &&
                          !this.addedSet.has(e) &&
                          !this.movedSet.has(e)
                        ) {
                          if (this.mirror.hasNode(e)) {
                            if (we(e, this.mirror)) return;
                            this.movedSet.add(e);
                            let n = null;
                            t && this.mirror.hasNode(t) && (n = this.mirror.getId(t)),
                              n && -1 !== n && (this.movedMap[Fe(this.mirror.getId(e), n)] = !0);
                          } else this.addedSet.add(e), this.droppedSet.delete(e);
                          be(e, this.blockClass, this.blockSelector, this.unblockSelector, !1) ||
                            (e.childNodes.forEach(e => this.genAdds(e)),
                            xe(e) &&
                              e.shadowRoot.childNodes.forEach(t => {
                                this.processedNodeManager.add(t, this), this.genAdds(t, e);
                              }));
                        }
                      });
                  }
                  init(e) {
                    [
                      'mutationCb',
                      'blockClass',
                      'blockSelector',
                      'unblockSelector',
                      'maskAllText',
                      'maskTextClass',
                      'unmaskTextClass',
                      'maskTextSelector',
                      'unmaskTextSelector',
                      'inlineStylesheet',
                      'maskInputOptions',
                      'maskAttributeFn',
                      'maskTextFn',
                      'maskInputFn',
                      'keepIframeSrcFn',
                      'recordCanvas',
                      'inlineImages',
                      'slimDOMOptions',
                      'dataURLOptions',
                      'doc',
                      'mirror',
                      'iframeManager',
                      'stylesheetManager',
                      'shadowDomManager',
                      'canvasManager',
                      'processedNodeManager',
                    ].forEach(t => {
                      this[t] = e[t];
                    });
                  }
                  freeze() {
                    (this.frozen = !0), this.canvasManager.freeze();
                  }
                  unfreeze() {
                    (this.frozen = !1), this.canvasManager.unfreeze(), this.emit();
                  }
                  isFrozen() {
                    return this.frozen;
                  }
                  lock() {
                    (this.locked = !0), this.canvasManager.lock();
                  }
                  unlock() {
                    (this.locked = !1), this.canvasManager.unlock(), this.emit();
                  }
                  reset() {
                    this.shadowDomManager.reset(), this.canvasManager.reset();
                  }
                }
                function Ue(e, t) {
                  e.delete(t), t.childNodes.forEach(t => Ue(e, t));
                }
                function We(e, t, n) {
                  return 0 !== e.length && Ge(e, t, n);
                }
                function Ge(e, t, n) {
                  const { parentNode: r } = t;
                  if (!r) return !1;
                  const s = n.getId(r);
                  return !!e.some(e => e.id === s) || Ge(e, r, n);
                }
                function ze(e, t) {
                  return 0 !== e.size && qe(e, t);
                }
                function qe(e, t) {
                  const { parentNode: n } = t;
                  return !!n && (!!e.has(n) || qe(e, n));
                }
                let $e;
                function Ve(e) {
                  $e = e;
                }
                function Ke() {
                  $e = undefined;
                }
                const Xe = e => {
                  if (!$e) return e;
                  return (...t) => {
                    try {
                      return e(...t);
                    } catch (e) {
                      if ($e && !0 === $e(e)) return () => {};
                      throw e;
                    }
                  };
                };
                function Ye(e) {
                  let t = undefined,
                    n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    const s = e[r],
                      o = e[r + 1];
                    if (((r += 2), ('optionalAccess' === s || 'optionalCall' === s) && null == n))
                      return undefined;
                    'access' === s || 'optionalAccess' === s
                      ? ((t = n), (n = o(n)))
                      : ('call' !== s && 'optionalCall' !== s) ||
                        ((n = o((...e) => n.call(t, ...e))), (t = undefined));
                  }
                  return n;
                }
                const Je = [];
                function Ze(e) {
                  try {
                    if ('composedPath' in e) {
                      const t = e.composedPath();
                      if (t.length) return t[0];
                    } else if ('path' in e && e.path.length) return e.path[0];
                  } catch (e) {}
                  return e && e.target;
                }
                function Qe(e, t) {
                  const n = new He();
                  Je.push(n), n.init(e);
                  let r = window.MutationObserver || window.__rrMutationObserver;
                  const s = Ye([
                    window,
                    'optionalAccess',
                    e => e.Zone,
                    'optionalAccess',
                    e => e.__symbol__,
                    'optionalCall',
                    e => e('MutationObserver'),
                  ]);
                  s && window[s] && (r = window[s]);
                  const o = new r(
                    Xe(t => {
                      (e.onMutation && !1 === e.onMutation(t)) || n.processMutations.bind(n)(t);
                    })
                  );
                  return (
                    o.observe(t, {
                      attributes: !0,
                      attributeOldValue: !0,
                      characterData: !0,
                      characterDataOldValue: !0,
                      childList: !0,
                      subtree: !0,
                    }),
                    o
                  );
                }
                function et({
                  mouseInteractionCb: e,
                  doc: t,
                  mirror: n,
                  blockClass: r,
                  blockSelector: s,
                  unblockSelector: o,
                  sampling: i,
                }) {
                  if (!1 === i.mouseInteraction) return () => {};
                  const a =
                      !0 === i.mouseInteraction || i.mouseInteraction === undefined
                        ? {}
                        : i.mouseInteraction,
                    c = [];
                  let u = null;
                  return (
                    Object.keys(Pe)
                      .filter(
                        e => Number.isNaN(Number(e)) && !e.endsWith('_Departed') && !1 !== a[e]
                      )
                      .forEach(i => {
                        let a = I(i);
                        const l = (t => i => {
                          const a = Ze(i);
                          if (be(a, r, s, o, !0)) return;
                          let c = null,
                            l = t;
                          if ('pointerType' in i) {
                            switch (i.pointerType) {
                              case 'mouse':
                                c = Ne.Mouse;
                                break;
                              case 'touch':
                                c = Ne.Touch;
                                break;
                              case 'pen':
                                c = Ne.Pen;
                            }
                            c === Ne.Touch
                              ? Pe[t] === Pe.MouseDown
                                ? (l = 'TouchStart')
                                : Pe[t] === Pe.MouseUp && (l = 'TouchEnd')
                              : Ne.Pen;
                          } else _e(i) && (c = Ne.Touch);
                          null !== c
                            ? ((u = c),
                              ((l.startsWith('Touch') && c === Ne.Touch) ||
                                (l.startsWith('Mouse') && c === Ne.Mouse)) &&
                                (c = null))
                            : Pe[t] === Pe.Click && ((c = u), (u = null));
                          const d = _e(i) ? i.changedTouches[0] : i;
                          if (!d) return;
                          const f = n.getId(a),
                            { clientX: h, clientY: p } = d;
                          Xe(e)({
                            type: Pe[l],
                            id: f,
                            x: h,
                            y: p,
                            ...(null !== c && { pointerType: c }),
                          });
                        })(i);
                        if (window.PointerEvent)
                          switch (Pe[i]) {
                            case Pe.MouseDown:
                            case Pe.MouseUp:
                              a = a.replace('mouse', 'pointer');
                              break;
                            case Pe.TouchStart:
                            case Pe.TouchEnd:
                              return;
                          }
                        c.push(ae(a, l, t));
                      }),
                    Xe(() => {
                      c.forEach(e => e());
                    })
                  );
                }
                function tt({
                  scrollCb: e,
                  doc: t,
                  mirror: n,
                  blockClass: r,
                  blockSelector: s,
                  unblockSelector: o,
                  sampling: i,
                }) {
                  return ae(
                    'scroll',
                    Xe(
                      le(
                        Xe(i => {
                          const a = Ze(i);
                          if (!a || be(a, r, s, o, !0)) return;
                          const c = n.getId(a);
                          if (a === t && t.defaultView) {
                            const n = pe(t.defaultView);
                            e({ id: c, x: n.left, y: n.top });
                          } else e({ id: c, x: a.scrollLeft, y: a.scrollTop });
                        }),
                        i.scroll || 100
                      )
                    ),
                    t
                  );
                }
                const nt = ['INPUT', 'TEXTAREA', 'SELECT'],
                  rt = new WeakMap();
                function st({
                  inputCb: e,
                  doc: t,
                  mirror: n,
                  blockClass: r,
                  blockSelector: s,
                  unblockSelector: o,
                  ignoreClass: i,
                  ignoreSelector: a,
                  maskInputOptions: c,
                  maskInputFn: u,
                  sampling: l,
                  userTriggeredOnInput: d,
                  maskTextClass: f,
                  unmaskTextClass: h,
                  maskTextSelector: p,
                  unmaskTextSelector: m,
                }) {
                  function g(e) {
                    let n = Ze(e);
                    const l = e.isTrusted,
                      g = n && k(n.tagName);
                    if (
                      ('OPTION' === g && (n = n.parentElement),
                      !n || !g || nt.indexOf(g) < 0 || be(n, r, s, o, !0))
                    )
                      return;
                    const b = n;
                    if (b.classList.contains(i) || (a && b.matches(a))) return;
                    const w = C(n);
                    let v = B(b, g, w),
                      _ = !1;
                    const E = x({ maskInputOptions: c, tagName: g, type: w }),
                      S = ne(n, f, p, h, m, E);
                    ('radio' !== w && 'checkbox' !== w) || (_ = n.checked),
                      (v = T({ isMasked: S, element: n, value: v, maskInputFn: u })),
                      y(
                        n,
                        d ? { text: v, isChecked: _, userTriggered: l } : { text: v, isChecked: _ }
                      );
                    const I = n.name;
                    'radio' === w &&
                      I &&
                      _ &&
                      t.querySelectorAll(`input[type="radio"][name="${I}"]`).forEach(e => {
                        if (e !== n) {
                          const t = T({
                            isMasked: S,
                            element: e,
                            value: B(e, g, w),
                            maskInputFn: u,
                          });
                          y(
                            e,
                            d
                              ? { text: t, isChecked: !_, userTriggered: !1 }
                              : { text: t, isChecked: !_ }
                          );
                        }
                      });
                  }
                  function y(t, r) {
                    const s = rt.get(t);
                    if (!s || s.text !== r.text || s.isChecked !== r.isChecked) {
                      rt.set(t, r);
                      const s = n.getId(t);
                      Xe(e)({ ...r, id: s });
                    }
                  }
                  const b = ('last' === l.input ? ['change'] : ['input', 'change']).map(e =>
                      ae(e, Xe(g), t)
                    ),
                    w = t.defaultView;
                  if (!w)
                    return () => {
                      b.forEach(e => e());
                    };
                  const v = w.Object.getOwnPropertyDescriptor(
                      w.HTMLInputElement.prototype,
                      'value'
                    ),
                    _ = [
                      [w.HTMLInputElement.prototype, 'value'],
                      [w.HTMLInputElement.prototype, 'checked'],
                      [w.HTMLSelectElement.prototype, 'value'],
                      [w.HTMLTextAreaElement.prototype, 'value'],
                      [w.HTMLSelectElement.prototype, 'selectedIndex'],
                      [w.HTMLOptionElement.prototype, 'selected'],
                    ];
                  return (
                    v &&
                      v.set &&
                      b.push(
                        ..._.map(e =>
                          de(
                            e[0],
                            e[1],
                            {
                              set() {
                                Xe(g)({ target: this, isTrusted: !1 });
                              },
                            },
                            !1,
                            w
                          )
                        )
                      ),
                    Xe(() => {
                      b.forEach(e => e());
                    })
                  );
                }
                function ot(e) {
                  return (function (e, t) {
                    if (
                      (ut('CSSGroupingRule') && e.parentRule instanceof CSSGroupingRule) ||
                      (ut('CSSMediaRule') && e.parentRule instanceof CSSMediaRule) ||
                      (ut('CSSSupportsRule') && e.parentRule instanceof CSSSupportsRule) ||
                      (ut('CSSConditionRule') && e.parentRule instanceof CSSConditionRule)
                    ) {
                      const n = Array.from(e.parentRule.cssRules).indexOf(e);
                      t.unshift(n);
                    } else if (e.parentStyleSheet) {
                      const n = Array.from(e.parentStyleSheet.cssRules).indexOf(e);
                      t.unshift(n);
                    }
                    return t;
                  })(e, []);
                }
                function it(e, t, n) {
                  let r, s;
                  return e
                    ? (e.ownerNode ? (r = t.getId(e.ownerNode)) : (s = n.getId(e)),
                      { styleId: s, id: r })
                    : {};
                }
                function at({ mirror: e, stylesheetManager: t }, n) {
                  let r = null;
                  r = '#document' === n.nodeName ? e.getId(n) : e.getId(n.host);
                  const s =
                      '#document' === n.nodeName
                        ? Ye([n, 'access', e => e.defaultView, 'optionalAccess', e => e.Document])
                        : Ye([
                            n,
                            'access',
                            e => e.ownerDocument,
                            'optionalAccess',
                            e => e.defaultView,
                            'optionalAccess',
                            e => e.ShadowRoot,
                          ]),
                    o = Ye([s, 'optionalAccess', e => e.prototype])
                      ? Object.getOwnPropertyDescriptor(
                          Ye([s, 'optionalAccess', e => e.prototype]),
                          'adoptedStyleSheets'
                        )
                      : undefined;
                  return null !== r && -1 !== r && s && o
                    ? (Object.defineProperty(n, 'adoptedStyleSheets', {
                        configurable: o.configurable,
                        enumerable: o.enumerable,
                        get() {
                          return Ye([
                            o,
                            'access',
                            e => e.get,
                            'optionalAccess',
                            e => e.call,
                            'call',
                            e => e(this),
                          ]);
                        },
                        set(e) {
                          const n = Ye([
                            o,
                            'access',
                            e => e.set,
                            'optionalAccess',
                            e => e.call,
                            'call',
                            t => t(this, e),
                          ]);
                          if (null !== r && -1 !== r)
                            try {
                              t.adoptStyleSheets(e, r);
                            } catch (e) {}
                          return n;
                        },
                      }),
                      Xe(() => {
                        Object.defineProperty(n, 'adoptedStyleSheets', {
                          configurable: o.configurable,
                          enumerable: o.enumerable,
                          get: o.get,
                          set: o.set,
                        });
                      }))
                    : () => {};
                }
                function ct(e, t = {}) {
                  const n = e.doc.defaultView;
                  if (!n) return () => {};
                  let r;
                  e.recordDOM && (r = Qe(e, e.doc));
                  const s = (function ({ mousemoveCb: e, sampling: t, doc: n, mirror: r }) {
                      if (!1 === t.mousemove) return () => {};
                      const s = 'number' == typeof t.mousemove ? t.mousemove : 50,
                        o = 'number' == typeof t.mousemoveCallback ? t.mousemoveCallback : 500;
                      let i,
                        a = [];
                      const c = le(
                          Xe(t => {
                            const n = Date.now() - i;
                            e(
                              a.map(e => ((e.timeOffset -= n), e)),
                              t
                            ),
                              (a = []),
                              (i = null);
                          }),
                          o
                        ),
                        u = Xe(
                          le(
                            Xe(e => {
                              const t = Ze(e),
                                { clientX: n, clientY: s } = _e(e) ? e.changedTouches[0] : e;
                              i || (i = he()),
                                a.push({ x: n, y: s, id: r.getId(t), timeOffset: he() - i }),
                                c(
                                  'undefined' != typeof DragEvent && e instanceof DragEvent
                                    ? Re.Drag
                                    : e instanceof MouseEvent
                                      ? Re.MouseMove
                                      : Re.TouchMove
                                );
                            }),
                            s,
                            { trailing: !1 }
                          )
                        ),
                        l = [ae('mousemove', u, n), ae('touchmove', u, n), ae('drag', u, n)];
                      return Xe(() => {
                        l.forEach(e => e());
                      });
                    })(e),
                    o = et(e),
                    i = tt(e),
                    a = (function ({ viewportResizeCb: e }, { win: t }) {
                      let n = -1,
                        r = -1;
                      return ae(
                        'resize',
                        Xe(
                          le(
                            Xe(() => {
                              const t = me(),
                                s = ge();
                              (n === t && r === s) ||
                                (e({ width: Number(s), height: Number(t) }), (n = t), (r = s));
                            }),
                            200
                          )
                        ),
                        t
                      );
                    })(e, { win: n }),
                    c = st(e),
                    u = (function ({
                      mediaInteractionCb: e,
                      blockClass: t,
                      blockSelector: n,
                      unblockSelector: r,
                      mirror: s,
                      sampling: o,
                      doc: i,
                    }) {
                      const a = Xe(i =>
                          le(
                            Xe(o => {
                              const a = Ze(o);
                              if (!a || be(a, t, n, r, !0)) return;
                              const { currentTime: c, volume: u, muted: l, playbackRate: d } = a;
                              e({
                                type: i,
                                id: s.getId(a),
                                currentTime: c,
                                volume: u,
                                muted: l,
                                playbackRate: d,
                              });
                            }),
                            o.media || 500
                          )
                        ),
                        c = [
                          ae('play', a(0), i),
                          ae('pause', a(1), i),
                          ae('seeked', a(2), i),
                          ae('volumechange', a(3), i),
                          ae('ratechange', a(4), i),
                        ];
                      return Xe(() => {
                        c.forEach(e => e());
                      });
                    })(e);
                  let l = () => {},
                    d = () => {},
                    f = () => {},
                    h = () => {};
                  e.recordDOM &&
                    ((l = (function (
                      { styleSheetRuleCb: e, mirror: t, stylesheetManager: n },
                      { win: r }
                    ) {
                      if (!r.CSSStyleSheet || !r.CSSStyleSheet.prototype) return () => {};
                      const s = r.CSSStyleSheet.prototype.insertRule;
                      r.CSSStyleSheet.prototype.insertRule = new Proxy(s, {
                        apply: Xe((r, s, o) => {
                          const [i, a] = o,
                            { id: c, styleId: u } = it(s, t, n.styleMirror);
                          return (
                            ((c && -1 !== c) || (u && -1 !== u)) &&
                              e({ id: c, styleId: u, adds: [{ rule: i, index: a }] }),
                            r.apply(s, o)
                          );
                        }),
                      });
                      const o = r.CSSStyleSheet.prototype.deleteRule;
                      let i, a;
                      (r.CSSStyleSheet.prototype.deleteRule = new Proxy(o, {
                        apply: Xe((r, s, o) => {
                          const [i] = o,
                            { id: a, styleId: c } = it(s, t, n.styleMirror);
                          return (
                            ((a && -1 !== a) || (c && -1 !== c)) &&
                              e({ id: a, styleId: c, removes: [{ index: i }] }),
                            r.apply(s, o)
                          );
                        }),
                      })),
                        r.CSSStyleSheet.prototype.replace &&
                          ((i = r.CSSStyleSheet.prototype.replace),
                          (r.CSSStyleSheet.prototype.replace = new Proxy(i, {
                            apply: Xe((r, s, o) => {
                              const [i] = o,
                                { id: a, styleId: c } = it(s, t, n.styleMirror);
                              return (
                                ((a && -1 !== a) || (c && -1 !== c)) &&
                                  e({ id: a, styleId: c, replace: i }),
                                r.apply(s, o)
                              );
                            }),
                          }))),
                        r.CSSStyleSheet.prototype.replaceSync &&
                          ((a = r.CSSStyleSheet.prototype.replaceSync),
                          (r.CSSStyleSheet.prototype.replaceSync = new Proxy(a, {
                            apply: Xe((r, s, o) => {
                              const [i] = o,
                                { id: a, styleId: c } = it(s, t, n.styleMirror);
                              return (
                                ((a && -1 !== a) || (c && -1 !== c)) &&
                                  e({ id: a, styleId: c, replaceSync: i }),
                                r.apply(s, o)
                              );
                            }),
                          })));
                      const c = {};
                      lt('CSSGroupingRule')
                        ? (c.CSSGroupingRule = r.CSSGroupingRule)
                        : (lt('CSSMediaRule') && (c.CSSMediaRule = r.CSSMediaRule),
                          lt('CSSConditionRule') && (c.CSSConditionRule = r.CSSConditionRule),
                          lt('CSSSupportsRule') && (c.CSSSupportsRule = r.CSSSupportsRule));
                      const u = {};
                      return (
                        Object.entries(c).forEach(([r, s]) => {
                          (u[r] = {
                            insertRule: s.prototype.insertRule,
                            deleteRule: s.prototype.deleteRule,
                          }),
                            (s.prototype.insertRule = new Proxy(u[r].insertRule, {
                              apply: Xe((r, s, o) => {
                                const [i, a] = o,
                                  { id: c, styleId: u } = it(s.parentStyleSheet, t, n.styleMirror);
                                return (
                                  ((c && -1 !== c) || (u && -1 !== u)) &&
                                    e({
                                      id: c,
                                      styleId: u,
                                      adds: [{ rule: i, index: [...ot(s), a || 0] }],
                                    }),
                                  r.apply(s, o)
                                );
                              }),
                            })),
                            (s.prototype.deleteRule = new Proxy(u[r].deleteRule, {
                              apply: Xe((r, s, o) => {
                                const [i] = o,
                                  { id: a, styleId: c } = it(s.parentStyleSheet, t, n.styleMirror);
                                return (
                                  ((a && -1 !== a) || (c && -1 !== c)) &&
                                    e({ id: a, styleId: c, removes: [{ index: [...ot(s), i] }] }),
                                  r.apply(s, o)
                                );
                              }),
                            }));
                        }),
                        Xe(() => {
                          (r.CSSStyleSheet.prototype.insertRule = s),
                            (r.CSSStyleSheet.prototype.deleteRule = o),
                            i && (r.CSSStyleSheet.prototype.replace = i),
                            a && (r.CSSStyleSheet.prototype.replaceSync = a),
                            Object.entries(c).forEach(([e, t]) => {
                              (t.prototype.insertRule = u[e].insertRule),
                                (t.prototype.deleteRule = u[e].deleteRule);
                            });
                        })
                      );
                    })(e, { win: n })),
                    (d = at(e, e.doc)),
                    (f = (function (
                      {
                        styleDeclarationCb: e,
                        mirror: t,
                        ignoreCSSAttributes: n,
                        stylesheetManager: r,
                      },
                      { win: s }
                    ) {
                      const o = s.CSSStyleDeclaration.prototype.setProperty;
                      s.CSSStyleDeclaration.prototype.setProperty = new Proxy(o, {
                        apply: Xe((s, i, a) => {
                          const [c, u, l] = a;
                          if (n.has(c)) return o.apply(i, [c, u, l]);
                          const { id: d, styleId: f } = it(
                            Ye([
                              i,
                              'access',
                              e => e.parentRule,
                              'optionalAccess',
                              e => e.parentStyleSheet,
                            ]),
                            t,
                            r.styleMirror
                          );
                          return (
                            ((d && -1 !== d) || (f && -1 !== f)) &&
                              e({
                                id: d,
                                styleId: f,
                                set: { property: c, value: u, priority: l },
                                index: ot(i.parentRule),
                              }),
                            s.apply(i, a)
                          );
                        }),
                      });
                      const i = s.CSSStyleDeclaration.prototype.removeProperty;
                      return (
                        (s.CSSStyleDeclaration.prototype.removeProperty = new Proxy(i, {
                          apply: Xe((s, o, a) => {
                            const [c] = a;
                            if (n.has(c)) return i.apply(o, [c]);
                            const { id: u, styleId: l } = it(
                              Ye([
                                o,
                                'access',
                                e => e.parentRule,
                                'optionalAccess',
                                e => e.parentStyleSheet,
                              ]),
                              t,
                              r.styleMirror
                            );
                            return (
                              ((u && -1 !== u) || (l && -1 !== l)) &&
                                e({
                                  id: u,
                                  styleId: l,
                                  remove: { property: c },
                                  index: ot(o.parentRule),
                                }),
                              s.apply(o, a)
                            );
                          }),
                        })),
                        Xe(() => {
                          (s.CSSStyleDeclaration.prototype.setProperty = o),
                            (s.CSSStyleDeclaration.prototype.removeProperty = i);
                        })
                      );
                    })(e, { win: n })),
                    e.collectFonts &&
                      (h = (function ({ fontCb: e, doc: t }) {
                        const n = t.defaultView;
                        if (!n) return () => {};
                        const r = [],
                          s = new WeakMap(),
                          o = n.FontFace;
                        n.FontFace = function (e, t, n) {
                          const r = new o(e, t, n);
                          return (
                            s.set(r, {
                              family: e,
                              buffer: 'string' != typeof t,
                              descriptors: n,
                              fontSource:
                                'string' == typeof t
                                  ? t
                                  : JSON.stringify(Array.from(new Uint8Array(t))),
                            }),
                            r
                          );
                        };
                        const i = fe(t.fonts, 'add', function (t) {
                          return function (n) {
                            return (
                              Oe(
                                Xe(() => {
                                  const t = s.get(n);
                                  t && (e(t), s.delete(n));
                                }),
                                0
                              ),
                              t.apply(this, [n])
                            );
                          };
                        });
                        return (
                          r.push(() => {
                            n.FontFace = o;
                          }),
                          r.push(i),
                          Xe(() => {
                            r.forEach(e => e());
                          })
                        );
                      })(e)));
                  const p = (function (e) {
                      const {
                        doc: t,
                        mirror: n,
                        blockClass: r,
                        blockSelector: s,
                        unblockSelector: o,
                        selectionCb: i,
                      } = e;
                      let a = !0;
                      const c = Xe(() => {
                        const e = t.getSelection();
                        if (!e || (a && Ye([e, 'optionalAccess', e => e.isCollapsed]))) return;
                        a = e.isCollapsed || !1;
                        const c = [],
                          u = e.rangeCount || 0;
                        for (let t = 0; t < u; t++) {
                          const i = e.getRangeAt(t),
                            {
                              startContainer: a,
                              startOffset: u,
                              endContainer: l,
                              endOffset: d,
                            } = i;
                          be(a, r, s, o, !0) ||
                            be(l, r, s, o, !0) ||
                            c.push({
                              start: n.getId(a),
                              startOffset: u,
                              end: n.getId(l),
                              endOffset: d,
                            });
                        }
                        i({ ranges: c });
                      });
                      return c(), ae('selectionchange', c);
                    })(e),
                    m = (function ({ doc: e, customElementCb: t }) {
                      const n = e.defaultView;
                      return n && n.customElements
                        ? fe(n.customElements, 'define', function (e) {
                            return function (n, r, s) {
                              try {
                                t({ define: { name: n } });
                              } catch (e) {}
                              return e.apply(this, [n, r, s]);
                            };
                          })
                        : () => {};
                    })(e),
                    g = [];
                  for (const t of e.plugins) g.push(t.observer(t.callback, n, t.options));
                  return Xe(() => {
                    Je.forEach(e => e.reset()),
                      Ye([r, 'optionalAccess', e => e.disconnect, 'call', e => e()]),
                      s(),
                      o(),
                      i(),
                      a(),
                      c(),
                      u(),
                      l(),
                      d(),
                      f(),
                      h(),
                      p(),
                      m(),
                      g.forEach(e => e());
                  });
                }
                function ut(e) {
                  return void 0 !== window[e];
                }
                function lt(e) {
                  return Boolean(
                    void 0 !== window[e] &&
                      window[e].prototype &&
                      'insertRule' in window[e].prototype &&
                      'deleteRule' in window[e].prototype
                  );
                }
                class dt {
                  constructor(e) {
                    (this.generateIdFn = e),
                      (this.iframeIdToRemoteIdMap = new WeakMap()),
                      (this.iframeRemoteIdToIdMap = new WeakMap());
                  }
                  getId(e, t, n, r) {
                    const s = n || this.getIdToRemoteIdMap(e),
                      o = r || this.getRemoteIdToIdMap(e);
                    let i = s.get(t);
                    return i || ((i = this.generateIdFn()), s.set(t, i), o.set(i, t)), i;
                  }
                  getIds(e, t) {
                    const n = this.getIdToRemoteIdMap(e),
                      r = this.getRemoteIdToIdMap(e);
                    return t.map(t => this.getId(e, t, n, r));
                  }
                  getRemoteId(e, t, n) {
                    const r = n || this.getRemoteIdToIdMap(e);
                    if ('number' != typeof t) return t;
                    const s = r.get(t);
                    return s || -1;
                  }
                  getRemoteIds(e, t) {
                    const n = this.getRemoteIdToIdMap(e);
                    return t.map(t => this.getRemoteId(e, t, n));
                  }
                  reset(e) {
                    if (!e)
                      return (
                        (this.iframeIdToRemoteIdMap = new WeakMap()),
                        void (this.iframeRemoteIdToIdMap = new WeakMap())
                      );
                    this.iframeIdToRemoteIdMap.delete(e), this.iframeRemoteIdToIdMap.delete(e);
                  }
                  getIdToRemoteIdMap(e) {
                    let t = this.iframeIdToRemoteIdMap.get(e);
                    return t || ((t = new Map()), this.iframeIdToRemoteIdMap.set(e, t)), t;
                  }
                  getRemoteIdToIdMap(e) {
                    let t = this.iframeRemoteIdToIdMap.get(e);
                    return t || ((t = new Map()), this.iframeRemoteIdToIdMap.set(e, t)), t;
                  }
                }
                function ft(e) {
                  let t = undefined,
                    n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    const s = e[r],
                      o = e[r + 1];
                    if (((r += 2), ('optionalAccess' === s || 'optionalCall' === s) && null == n))
                      return undefined;
                    'access' === s || 'optionalAccess' === s
                      ? ((t = n), (n = o(n)))
                      : ('call' !== s && 'optionalCall' !== s) ||
                        ((n = o((...e) => n.call(t, ...e))), (t = undefined));
                  }
                  return n;
                }
                class ht {
                  constructor() {
                    (this.crossOriginIframeMirror = new dt(F)),
                      (this.crossOriginIframeRootIdMap = new WeakMap());
                  }
                  addIframe() {}
                  addLoadListener() {}
                  attachIframe() {}
                }
                class pt {
                  constructor(e) {
                    (this.iframes = new WeakMap()),
                      (this.crossOriginIframeMap = new WeakMap()),
                      (this.crossOriginIframeMirror = new dt(F)),
                      (this.crossOriginIframeRootIdMap = new WeakMap()),
                      (this.mutationCb = e.mutationCb),
                      (this.wrappedEmit = e.wrappedEmit),
                      (this.stylesheetManager = e.stylesheetManager),
                      (this.recordCrossOriginIframes = e.recordCrossOriginIframes),
                      (this.crossOriginIframeStyleMirror = new dt(
                        this.stylesheetManager.styleMirror.generateId.bind(
                          this.stylesheetManager.styleMirror
                        )
                      )),
                      (this.mirror = e.mirror),
                      this.recordCrossOriginIframes &&
                        window.addEventListener('message', this.handleMessage.bind(this));
                  }
                  addIframe(e) {
                    this.iframes.set(e, !0),
                      e.contentWindow && this.crossOriginIframeMap.set(e.contentWindow, e);
                  }
                  addLoadListener(e) {
                    this.loadListener = e;
                  }
                  attachIframe(e, t) {
                    this.mutationCb({
                      adds: [{ parentId: this.mirror.getId(e), nextId: null, node: t }],
                      removes: [],
                      texts: [],
                      attributes: [],
                      isAttachIframe: !0,
                    }),
                      ft([this, 'access', e => e.loadListener, 'optionalCall', t => t(e)]),
                      e.contentDocument &&
                        e.contentDocument.adoptedStyleSheets &&
                        e.contentDocument.adoptedStyleSheets.length > 0 &&
                        this.stylesheetManager.adoptStyleSheets(
                          e.contentDocument.adoptedStyleSheets,
                          this.mirror.getId(e.contentDocument)
                        );
                  }
                  handleMessage(e) {
                    const t = e;
                    if ('rrweb' !== t.data.type || t.origin !== t.data.origin) return;
                    if (!e.source) return;
                    const n = this.crossOriginIframeMap.get(e.source);
                    if (!n) return;
                    const r = this.transformCrossOriginEvent(n, t.data.event);
                    r && this.wrappedEmit(r, t.data.isCheckout);
                  }
                  transformCrossOriginEvent(e, t) {
                    switch (t.type) {
                      case je.FullSnapshot: {
                        this.crossOriginIframeMirror.reset(e),
                          this.crossOriginIframeStyleMirror.reset(e),
                          this.replaceIdOnNode(t.data.node, e);
                        const n = t.data.node.id;
                        return (
                          this.crossOriginIframeRootIdMap.set(e, n),
                          this.patchRootIdOnNode(t.data.node, n),
                          {
                            timestamp: t.timestamp,
                            type: je.IncrementalSnapshot,
                            data: {
                              source: Re.Mutation,
                              adds: [
                                { parentId: this.mirror.getId(e), nextId: null, node: t.data.node },
                              ],
                              removes: [],
                              texts: [],
                              attributes: [],
                              isAttachIframe: !0,
                            },
                          }
                        );
                      }
                      case je.Meta:
                      case je.Load:
                      case je.DomContentLoaded:
                        return !1;
                      case je.Plugin:
                        return t;
                      case je.Custom:
                        return (
                          this.replaceIds(t.data.payload, e, [
                            'id',
                            'parentId',
                            'previousId',
                            'nextId',
                          ]),
                          t
                        );
                      case je.IncrementalSnapshot:
                        switch (t.data.source) {
                          case Re.Mutation:
                            return (
                              t.data.adds.forEach(t => {
                                this.replaceIds(t, e, ['parentId', 'nextId', 'previousId']),
                                  this.replaceIdOnNode(t.node, e);
                                const n = this.crossOriginIframeRootIdMap.get(e);
                                n && this.patchRootIdOnNode(t.node, n);
                              }),
                              t.data.removes.forEach(t => {
                                this.replaceIds(t, e, ['parentId', 'id']);
                              }),
                              t.data.attributes.forEach(t => {
                                this.replaceIds(t, e, ['id']);
                              }),
                              t.data.texts.forEach(t => {
                                this.replaceIds(t, e, ['id']);
                              }),
                              t
                            );
                          case Re.Drag:
                          case Re.TouchMove:
                          case Re.MouseMove:
                            return (
                              t.data.positions.forEach(t => {
                                this.replaceIds(t, e, ['id']);
                              }),
                              t
                            );
                          case Re.ViewportResize:
                            return !1;
                          case Re.MediaInteraction:
                          case Re.MouseInteraction:
                          case Re.Scroll:
                          case Re.CanvasMutation:
                          case Re.Input:
                            return this.replaceIds(t.data, e, ['id']), t;
                          case Re.StyleSheetRule:
                          case Re.StyleDeclaration:
                            return (
                              this.replaceIds(t.data, e, ['id']),
                              this.replaceStyleIds(t.data, e, ['styleId']),
                              t
                            );
                          case Re.Font:
                            return t;
                          case Re.Selection:
                            return (
                              t.data.ranges.forEach(t => {
                                this.replaceIds(t, e, ['start', 'end']);
                              }),
                              t
                            );
                          case Re.AdoptedStyleSheet:
                            return (
                              this.replaceIds(t.data, e, ['id']),
                              this.replaceStyleIds(t.data, e, ['styleIds']),
                              ft([
                                t,
                                'access',
                                e => e.data,
                                'access',
                                e => e.styles,
                                'optionalAccess',
                                e => e.forEach,
                                'call',
                                t =>
                                  t(t => {
                                    this.replaceStyleIds(t, e, ['styleId']);
                                  }),
                              ]),
                              t
                            );
                        }
                    }
                    return !1;
                  }
                  replace(e, t, n, r) {
                    for (const s of r)
                      (Array.isArray(t[s]) || 'number' == typeof t[s]) &&
                        (Array.isArray(t[s])
                          ? (t[s] = e.getIds(n, t[s]))
                          : (t[s] = e.getId(n, t[s])));
                    return t;
                  }
                  replaceIds(e, t, n) {
                    return this.replace(this.crossOriginIframeMirror, e, t, n);
                  }
                  replaceStyleIds(e, t, n) {
                    return this.replace(this.crossOriginIframeStyleMirror, e, t, n);
                  }
                  replaceIdOnNode(e, t) {
                    this.replaceIds(e, t, ['id', 'rootId']),
                      'childNodes' in e &&
                        e.childNodes.forEach(e => {
                          this.replaceIdOnNode(e, t);
                        });
                  }
                  patchRootIdOnNode(e, t) {
                    e.type === b.Document || e.rootId || (e.rootId = t),
                      'childNodes' in e &&
                        e.childNodes.forEach(e => {
                          this.patchRootIdOnNode(e, t);
                        });
                  }
                }
                class mt {
                  init() {}
                  addShadowRoot() {}
                  observeAttachShadow() {}
                  reset() {}
                }
                class gt {
                  constructor(e) {
                    (this.shadowDoms = new WeakSet()),
                      (this.restoreHandlers = []),
                      (this.mutationCb = e.mutationCb),
                      (this.scrollCb = e.scrollCb),
                      (this.bypassOptions = e.bypassOptions),
                      (this.mirror = e.mirror),
                      this.init();
                  }
                  init() {
                    this.reset(), this.patchAttachShadow(Element, document);
                  }
                  addShadowRoot(e, t) {
                    if (!v(e)) return;
                    if (this.shadowDoms.has(e)) return;
                    this.shadowDoms.add(e), this.bypassOptions.canvasManager.addShadowRoot(e);
                    const n = Qe(
                      {
                        ...this.bypassOptions,
                        doc: t,
                        mutationCb: this.mutationCb,
                        mirror: this.mirror,
                        shadowDomManager: this,
                      },
                      e
                    );
                    this.restoreHandlers.push(() => n.disconnect()),
                      this.restoreHandlers.push(
                        tt({
                          ...this.bypassOptions,
                          scrollCb: this.scrollCb,
                          doc: e,
                          mirror: this.mirror,
                        })
                      ),
                      Oe(() => {
                        e.adoptedStyleSheets &&
                          e.adoptedStyleSheets.length > 0 &&
                          this.bypassOptions.stylesheetManager.adoptStyleSheets(
                            e.adoptedStyleSheets,
                            this.mirror.getId(e.host)
                          ),
                          this.restoreHandlers.push(
                            at(
                              {
                                mirror: this.mirror,
                                stylesheetManager: this.bypassOptions.stylesheetManager,
                              },
                              e
                            )
                          );
                      }, 0);
                  }
                  observeAttachShadow(e) {
                    e.contentWindow &&
                      e.contentDocument &&
                      this.patchAttachShadow(e.contentWindow.Element, e.contentDocument);
                  }
                  patchAttachShadow(e, t) {
                    const n = this;
                    this.restoreHandlers.push(
                      fe(e.prototype, 'attachShadow', function (e) {
                        return function (r) {
                          const s = e.call(this, r);
                          return (
                            this.shadowRoot && Ae(this) && n.addShadowRoot(this.shadowRoot, t), s
                          );
                        };
                      })
                    );
                  }
                  reset() {
                    this.restoreHandlers.forEach(e => {
                      try {
                        e();
                      } catch (e) {}
                    }),
                      (this.restoreHandlers = []),
                      (this.shadowDoms = new WeakSet()),
                      this.bypassOptions.canvasManager.resetShadowRoots();
                  }
                }
                class yt {
                  reset() {}
                  freeze() {}
                  unfreeze() {}
                  lock() {}
                  unlock() {}
                  snapshot() {}
                  addWindow() {}
                  addShadowRoot() {}
                  resetShadowRoots() {}
                }
                class bt {
                  constructor(e) {
                    (this.trackedLinkElements = new WeakSet()),
                      (this.styleMirror = new Te()),
                      (this.mutationCb = e.mutationCb),
                      (this.adoptedStyleSheetCb = e.adoptedStyleSheetCb);
                  }
                  attachLinkElement(e, t) {
                    '_cssText' in t.attributes &&
                      this.mutationCb({
                        adds: [],
                        removes: [],
                        texts: [],
                        attributes: [{ id: t.id, attributes: t.attributes }],
                      }),
                      this.trackLinkElement(e);
                  }
                  trackLinkElement(e) {
                    this.trackedLinkElements.has(e) ||
                      (this.trackedLinkElements.add(e), this.trackStylesheetInLinkElement(e));
                  }
                  adoptStyleSheets(e, t) {
                    if (0 === e.length) return;
                    const n = { id: t, styleIds: [] },
                      r = [];
                    for (const t of e) {
                      let e;
                      this.styleMirror.has(t)
                        ? (e = this.styleMirror.getId(t))
                        : ((e = this.styleMirror.add(t)),
                          r.push({
                            styleId: e,
                            rules: Array.from(t.rules || CSSRule, (e, t) => ({
                              rule: E(e),
                              index: t,
                            })),
                          })),
                        n.styleIds.push(e);
                    }
                    r.length > 0 && (n.styles = r), this.adoptedStyleSheetCb(n);
                  }
                  reset() {
                    this.styleMirror.reset(), (this.trackedLinkElements = new WeakSet());
                  }
                  trackStylesheetInLinkElement(e) {}
                }
                class wt {
                  constructor() {
                    (this.nodeMap = new WeakMap()), (this.loop = !0), this.periodicallyClear();
                  }
                  periodicallyClear() {
                    !(function (...e) {
                      Be('requestAnimationFrame')(...e);
                    })(() => {
                      this.clear(), this.loop && this.periodicallyClear();
                    });
                  }
                  inOtherBuffer(e, t) {
                    const n = this.nodeMap.get(e);
                    return n && Array.from(n).some(e => e !== t);
                  }
                  add(e, t) {
                    this.nodeMap.set(e, (this.nodeMap.get(e) || new Set()).add(t));
                  }
                  clear() {
                    this.nodeMap = new WeakMap();
                  }
                  destroy() {
                    this.loop = !1;
                  }
                }
                let vt, _t;
                try {
                  if (2 !== Array.from([1], e => 2 * e)[0]) {
                    const e = document.createElement('iframe');
                    document.body.appendChild(e),
                      (Array.from =
                        s([
                          e,
                          'access',
                          e => e.contentWindow,
                          'optionalAccess',
                          e => e.Array,
                          'access',
                          e => e.from,
                        ]) || Array.from),
                      document.body.removeChild(e);
                  }
                } catch (e) {
                  console.debug('Unable to override Array.from', e);
                }
                const Et = new S();
                function St(e = {}) {
                  const {
                    emit: t,
                    checkoutEveryNms: n,
                    checkoutEveryNth: r,
                    blockClass: o = 'rr-block',
                    blockSelector: i = null,
                    unblockSelector: a = null,
                    ignoreClass: c = 'rr-ignore',
                    ignoreSelector: u = null,
                    maskAllText: l = !1,
                    maskTextClass: d = 'rr-mask',
                    unmaskTextClass: f = null,
                    maskTextSelector: h = null,
                    unmaskTextSelector: p = null,
                    inlineStylesheet: m = !0,
                    maskAllInputs: g,
                    maskInputOptions: y,
                    slimDOMOptions: b,
                    maskAttributeFn: w,
                    maskInputFn: v,
                    maskTextFn: _,
                    maxCanvasSize: E = null,
                    packFn: x,
                    sampling: T = {},
                    dataURLOptions: I = {},
                    mousemoveWait: k,
                    recordDOM: A = !0,
                    recordCanvas: C = !1,
                    recordCrossOriginIframes: B = !1,
                    recordAfter: O = 'DOMContentLoaded' === e.recordAfter ? e.recordAfter : 'load',
                    userTriggeredOnInput: j = !1,
                    collectFonts: R = !1,
                    inlineImages: P = !1,
                    plugins: N,
                    keepIframeSrcFn: L = () => !1,
                    ignoreCSSAttributes: M = new Set([]),
                    errorHandler: D,
                    onMutation: F,
                    getCanvasManager: H,
                  } = e;
                  Ve(D);
                  const U = !B || window.parent === window;
                  let W = !1;
                  if (!U)
                    try {
                      window.parent.document && (W = !1);
                    } catch (e) {
                      W = !0;
                    }
                  if (U && !t) throw new Error('emit function is required');
                  k !== undefined && T.mousemove === undefined && (T.mousemove = k), Et.reset();
                  const G =
                      !0 === g
                        ? {
                            color: !0,
                            date: !0,
                            'datetime-local': !0,
                            email: !0,
                            month: !0,
                            number: !0,
                            range: !0,
                            search: !0,
                            tel: !0,
                            text: !0,
                            time: !0,
                            url: !0,
                            week: !0,
                            textarea: !0,
                            select: !0,
                            radio: !0,
                            checkbox: !0,
                          }
                        : y !== undefined
                          ? y
                          : {},
                    z =
                      !0 === b || 'all' === b
                        ? {
                            script: !0,
                            comment: !0,
                            headFavicon: !0,
                            headWhitespace: !0,
                            headMetaSocial: !0,
                            headMetaRobots: !0,
                            headMetaHttpEquiv: !0,
                            headMetaVerification: !0,
                            headMetaAuthorship: 'all' === b,
                            headMetaDescKeywords: 'all' === b,
                          }
                        : b || {};
                  let q;
                  !(function (e = window) {
                    'NodeList' in e &&
                      !e.NodeList.prototype.forEach &&
                      (e.NodeList.prototype.forEach = Array.prototype.forEach),
                      'DOMTokenList' in e &&
                        !e.DOMTokenList.prototype.forEach &&
                        (e.DOMTokenList.prototype.forEach = Array.prototype.forEach),
                      Node.prototype.contains ||
                        (Node.prototype.contains = (...e) => {
                          let t = e[0];
                          if (!(0 in e)) throw new TypeError('1 argument is required');
                          do {
                            if (this === t) return !0;
                          } while ((t = t && t.parentNode));
                          return !1;
                        });
                  })();
                  let $ = 0;
                  const V = e => {
                    for (const t of N || []) t.eventProcessor && (e = t.eventProcessor(e));
                    return x && !W && (e = x(e)), e;
                  };
                  vt = (e, o) => {
                    const i = e;
                    if (
                      ((i.timestamp = he()),
                      !s([
                        Je,
                        'access',
                        e => e[0],
                        'optionalAccess',
                        e => e.isFrozen,
                        'call',
                        e => e(),
                      ]) ||
                        i.type === je.FullSnapshot ||
                        (i.type === je.IncrementalSnapshot && i.data.source === Re.Mutation) ||
                        Je.forEach(e => e.unfreeze()),
                      U)
                    )
                      s([t, 'optionalCall', e => e(V(i), o)]);
                    else if (W) {
                      const e = {
                        type: 'rrweb',
                        event: V(i),
                        origin: window.location.origin,
                        isCheckout: o,
                      };
                      window.parent.postMessage(e, '*');
                    }
                    if (i.type === je.FullSnapshot) (q = i), ($ = 0);
                    else if (i.type === je.IncrementalSnapshot) {
                      if (i.data.source === Re.Mutation && i.data.isAttachIframe) return;
                      $++;
                      const e = r && $ >= r,
                        t = n && q && i.timestamp - q.timestamp > n;
                      (e || t) && ne(!0);
                    }
                  };
                  const K = e => {
                      vt({ type: je.IncrementalSnapshot, data: { source: Re.Mutation, ...e } });
                    },
                    X = e =>
                      vt({ type: je.IncrementalSnapshot, data: { source: Re.Scroll, ...e } }),
                    Y = e =>
                      vt({
                        type: je.IncrementalSnapshot,
                        data: { source: Re.CanvasMutation, ...e },
                      }),
                    J = new bt({
                      mutationCb: K,
                      adoptedStyleSheetCb: e =>
                        vt({
                          type: je.IncrementalSnapshot,
                          data: { source: Re.AdoptedStyleSheet, ...e },
                        }),
                    }),
                    Z =
                      'boolean' == typeof __RRWEB_EXCLUDE_IFRAME__ && __RRWEB_EXCLUDE_IFRAME__
                        ? new ht()
                        : new pt({
                            mirror: Et,
                            mutationCb: K,
                            stylesheetManager: J,
                            recordCrossOriginIframes: B,
                            wrappedEmit: vt,
                          });
                  for (const e of N || [])
                    e.getMirror &&
                      e.getMirror({
                        nodeMirror: Et,
                        crossOriginIframeMirror: Z.crossOriginIframeMirror,
                        crossOriginIframeStyleMirror: Z.crossOriginIframeStyleMirror,
                      });
                  const Q = new wt(),
                    ee = (function (e, t) {
                      try {
                        return e ? e(t) : new yt();
                      } catch (e) {
                        return console.warn('Unable to initialize CanvasManager'), new yt();
                      }
                    })(H, {
                      mirror: Et,
                      win: window,
                      mutationCb: e =>
                        vt({
                          type: je.IncrementalSnapshot,
                          data: { source: Re.CanvasMutation, ...e },
                        }),
                      recordCanvas: C,
                      blockClass: o,
                      blockSelector: i,
                      unblockSelector: a,
                      maxCanvasSize: E,
                      sampling: T.canvas,
                      dataURLOptions: I,
                      errorHandler: D,
                    }),
                    te =
                      'boolean' == typeof __RRWEB_EXCLUDE_SHADOW_DOM__ &&
                      __RRWEB_EXCLUDE_SHADOW_DOM__
                        ? new mt()
                        : new gt({
                            mutationCb: K,
                            scrollCb: X,
                            bypassOptions: {
                              onMutation: F,
                              blockClass: o,
                              blockSelector: i,
                              unblockSelector: a,
                              maskAllText: l,
                              maskTextClass: d,
                              unmaskTextClass: f,
                              maskTextSelector: h,
                              unmaskTextSelector: p,
                              inlineStylesheet: m,
                              maskInputOptions: G,
                              dataURLOptions: I,
                              maskAttributeFn: w,
                              maskTextFn: _,
                              maskInputFn: v,
                              recordCanvas: C,
                              inlineImages: P,
                              sampling: T,
                              slimDOMOptions: z,
                              iframeManager: Z,
                              stylesheetManager: J,
                              canvasManager: ee,
                              keepIframeSrcFn: L,
                              processedNodeManager: Q,
                            },
                            mirror: Et,
                          }),
                    ne = (e = !1) => {
                      if (!A) return;
                      vt(
                        {
                          type: je.Meta,
                          data: { href: window.location.href, width: ge(), height: me() },
                        },
                        e
                      ),
                        J.reset(),
                        te.init(),
                        Je.forEach(e => e.lock());
                      const t = (function (e, t) {
                        const {
                          mirror: n = new S(),
                          blockClass: r = 'rr-block',
                          blockSelector: s = null,
                          unblockSelector: o = null,
                          maskAllText: i = !1,
                          maskTextClass: a = 'rr-mask',
                          unmaskTextClass: c = null,
                          maskTextSelector: u = null,
                          unmaskTextSelector: l = null,
                          inlineStylesheet: d = !0,
                          inlineImages: f = !1,
                          recordCanvas: h = !1,
                          maskAllInputs: p = !1,
                          maskAttributeFn: m,
                          maskTextFn: g,
                          maskInputFn: y,
                          slimDOM: b = !1,
                          dataURLOptions: w,
                          preserveWhiteSpace: v,
                          onSerialize: _,
                          onIframeLoad: E,
                          iframeLoadTimeout: x,
                          onStylesheetLoad: T,
                          stylesheetLoadTimeout: I,
                          keepIframeSrcFn: k = () => !1,
                        } = t || {};
                        return oe(e, {
                          doc: e,
                          mirror: n,
                          blockClass: r,
                          blockSelector: s,
                          unblockSelector: o,
                          maskAllText: i,
                          maskTextClass: a,
                          unmaskTextClass: c,
                          maskTextSelector: u,
                          unmaskTextSelector: l,
                          skipChild: !1,
                          inlineStylesheet: d,
                          maskInputOptions:
                            !0 === p
                              ? {
                                  color: !0,
                                  date: !0,
                                  'datetime-local': !0,
                                  email: !0,
                                  month: !0,
                                  number: !0,
                                  range: !0,
                                  search: !0,
                                  tel: !0,
                                  text: !0,
                                  time: !0,
                                  url: !0,
                                  week: !0,
                                  textarea: !0,
                                  select: !0,
                                }
                              : !1 === p
                                ? {}
                                : p,
                          maskAttributeFn: m,
                          maskTextFn: g,
                          maskInputFn: y,
                          slimDOMOptions:
                            !0 === b || 'all' === b
                              ? {
                                  script: !0,
                                  comment: !0,
                                  headFavicon: !0,
                                  headWhitespace: !0,
                                  headMetaDescKeywords: 'all' === b,
                                  headMetaSocial: !0,
                                  headMetaRobots: !0,
                                  headMetaHttpEquiv: !0,
                                  headMetaAuthorship: !0,
                                  headMetaVerification: !0,
                                }
                              : !1 === b
                                ? {}
                                : b,
                          dataURLOptions: w,
                          inlineImages: f,
                          recordCanvas: h,
                          preserveWhiteSpace: v,
                          onSerialize: _,
                          onIframeLoad: E,
                          iframeLoadTimeout: x,
                          onStylesheetLoad: T,
                          stylesheetLoadTimeout: I,
                          keepIframeSrcFn: k,
                          newlyAddedElement: !1,
                        });
                      })(document, {
                        mirror: Et,
                        blockClass: o,
                        blockSelector: i,
                        unblockSelector: a,
                        maskAllText: l,
                        maskTextClass: d,
                        unmaskTextClass: f,
                        maskTextSelector: h,
                        unmaskTextSelector: p,
                        inlineStylesheet: m,
                        maskAllInputs: G,
                        maskAttributeFn: w,
                        maskInputFn: v,
                        maskTextFn: _,
                        slimDOM: z,
                        dataURLOptions: I,
                        recordCanvas: C,
                        inlineImages: P,
                        onSerialize: e => {
                          Ee(e, Et) && Z.addIframe(e),
                            Se(e, Et) && J.trackLinkElement(e),
                            xe(e) && te.addShadowRoot(e.shadowRoot, document);
                        },
                        onIframeLoad: (e, t) => {
                          Z.attachIframe(e, t),
                            e.contentWindow && ee.addWindow(e.contentWindow),
                            te.observeAttachShadow(e);
                        },
                        onStylesheetLoad: (e, t) => {
                          J.attachLinkElement(e, t);
                        },
                        keepIframeSrcFn: L,
                      });
                      if (!t) return console.warn('Failed to snapshot the document');
                      vt({ type: je.FullSnapshot, data: { node: t, initialOffset: pe(window) } }),
                        Je.forEach(e => e.unlock()),
                        document.adoptedStyleSheets &&
                          document.adoptedStyleSheets.length > 0 &&
                          J.adoptStyleSheets(document.adoptedStyleSheets, Et.getId(document));
                    };
                  _t = ne;
                  try {
                    const e = [],
                      t = e =>
                        Xe(ct)(
                          {
                            onMutation: F,
                            mutationCb: K,
                            mousemoveCb: (e, t) =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: t, positions: e },
                              }),
                            mouseInteractionCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.MouseInteraction, ...e },
                              }),
                            scrollCb: X,
                            viewportResizeCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.ViewportResize, ...e },
                              }),
                            inputCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.Input, ...e },
                              }),
                            mediaInteractionCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.MediaInteraction, ...e },
                              }),
                            styleSheetRuleCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.StyleSheetRule, ...e },
                              }),
                            styleDeclarationCb: e =>
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.StyleDeclaration, ...e },
                              }),
                            canvasMutationCb: Y,
                            fontCb: e =>
                              vt({ type: je.IncrementalSnapshot, data: { source: Re.Font, ...e } }),
                            selectionCb: e => {
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.Selection, ...e },
                              });
                            },
                            customElementCb: e => {
                              vt({
                                type: je.IncrementalSnapshot,
                                data: { source: Re.CustomElement, ...e },
                              });
                            },
                            blockClass: o,
                            ignoreClass: c,
                            ignoreSelector: u,
                            maskAllText: l,
                            maskTextClass: d,
                            unmaskTextClass: f,
                            maskTextSelector: h,
                            unmaskTextSelector: p,
                            maskInputOptions: G,
                            inlineStylesheet: m,
                            sampling: T,
                            recordDOM: A,
                            recordCanvas: C,
                            inlineImages: P,
                            userTriggeredOnInput: j,
                            collectFonts: R,
                            doc: e,
                            maskAttributeFn: w,
                            maskInputFn: v,
                            maskTextFn: _,
                            keepIframeSrcFn: L,
                            blockSelector: i,
                            unblockSelector: a,
                            slimDOMOptions: z,
                            dataURLOptions: I,
                            mirror: Et,
                            iframeManager: Z,
                            stylesheetManager: J,
                            shadowDomManager: te,
                            processedNodeManager: Q,
                            canvasManager: ee,
                            ignoreCSSAttributes: M,
                            plugins:
                              s([
                                N,
                                'optionalAccess',
                                e => e.filter,
                                'call',
                                e => e(e => e.observer),
                                'optionalAccess',
                                e => e.map,
                                'call',
                                e =>
                                  e(e => ({
                                    observer: e.observer,
                                    options: e.options,
                                    callback: t =>
                                      vt({ type: je.Plugin, data: { plugin: e.name, payload: t } }),
                                  })),
                              ]) || [],
                          },
                          {}
                        );
                    Z.addLoadListener(n => {
                      try {
                        e.push(t(n.contentDocument));
                      } catch (e) {
                        console.warn(e);
                      }
                    });
                    const n = () => {
                      ne(), e.push(t(document));
                    };
                    return (
                      'interactive' === document.readyState || 'complete' === document.readyState
                        ? n()
                        : (e.push(
                            ae('DOMContentLoaded', () => {
                              vt({ type: je.DomContentLoaded, data: {} }),
                                'DOMContentLoaded' === O && n();
                            })
                          ),
                          e.push(
                            ae(
                              'load',
                              () => {
                                vt({ type: je.Load, data: {} }), 'load' === O && n();
                              },
                              window
                            )
                          )),
                      () => {
                        e.forEach(e => e()), Q.destroy(), (_t = undefined), Ke();
                      }
                    );
                  } catch (e) {
                    console.warn(e);
                  }
                }
                (St.mirror = Et),
                  (St.takeFullSnapshot = function (e) {
                    if (!_t) throw new Error('please take full snapshot after start recording');
                    _t(e);
                  });
                const xt = 'undefined' == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
                  Tt = ['info', 'warn', 'error', 'log'],
                  It = '[Replay] ';
                function kt(e, t = 'info') {
                  o.addBreadcrumb(
                    {
                      category: 'console',
                      data: { logger: 'replay' },
                      level: t,
                      message: `${It}${e}`,
                    },
                    { level: t }
                  );
                }
                const At = (function () {
                    let e = !1,
                      t = !1;
                    const n = {
                      exception: () => undefined,
                      infoTick: () => undefined,
                      setConfig: n => {
                        (e = n.captureExceptions), (t = n.traceInternals);
                      },
                    };
                    return (
                      xt
                        ? (Tt.forEach(e => {
                            n[e] = (...n) => {
                              i.logger[e](It, ...n),
                                t && kt(n.join(''), i.severityLevelFromString(e));
                            };
                          }),
                          (n.exception = (r, ...s) => {
                            s.length && n.error && n.error(...s),
                              i.logger.error(It, r),
                              e ? o.captureException(r) : t && kt(r, 'error');
                          }),
                          (n.infoTick = (...e) => {
                            i.logger.info(It, ...e), t && setTimeout(() => kt(e[0]), 0);
                          }))
                        : Tt.forEach(e => {
                            n[e] = () => undefined;
                          }),
                      n
                    );
                  })(),
                  Ct = 3;
                function Bt(e) {
                  return e > 9999999999 ? e : 1e3 * e;
                }
                function Ot(e) {
                  return e > 9999999999 ? e / 1e3 : e;
                }
                function jt(e, t) {
                  'sentry.transaction' !== t.category &&
                    (['ui.click', 'ui.input'].includes(t.category)
                      ? e.triggerUserActivity()
                      : e.checkAndHandleExpiredSession(),
                    e.addUpdate(
                      () => (
                        e.throttledAddEvent({
                          type: je.Custom,
                          timestamp: 1e3 * (t.timestamp || 0),
                          data: { tag: 'breadcrumb', payload: i.normalize(t, 10, 1e3) },
                        }),
                        'console' === t.category
                      )
                    ));
                }
                const Rt = 'button,a';
                function Pt(e) {
                  return e.closest(Rt) || e;
                }
                function Nt(e) {
                  const t = Lt(e);
                  return t && t instanceof Element ? Pt(t) : t;
                }
                function Lt(e) {
                  return (function (e) {
                    return 'object' == typeof e && !!e && 'target' in e;
                  })(e)
                    ? e.target
                    : e;
                }
                let Mt;
                function Dt(e) {
                  return (
                    Mt ||
                      ((Mt = []),
                      i.fill(c, 'open', function (e) {
                        return function (...t) {
                          if (Mt)
                            try {
                              Mt.forEach(e => e());
                            } catch (e) {}
                          return e.apply(c, t);
                        };
                      })),
                    Mt.push(e),
                    () => {
                      const t = Mt ? Mt.indexOf(e) : -1;
                      t > -1 && Mt.splice(t, 1);
                    }
                  );
                }
                const Ft = new Set([
                  Re.Mutation,
                  Re.StyleSheetRule,
                  Re.StyleDeclaration,
                  Re.AdoptedStyleSheet,
                  Re.CanvasMutation,
                  Re.Selection,
                  Re.MediaInteraction,
                ]);
                class Ht {
                  constructor(e, t, n = jt) {
                    (this._lastMutation = 0),
                      (this._lastScroll = 0),
                      (this._clicks = []),
                      (this._timeout = t.timeout / 1e3),
                      (this._threshold = t.threshold / 1e3),
                      (this._scollTimeout = t.scrollTimeout / 1e3),
                      (this._replay = e),
                      (this._ignoreSelector = t.ignoreSelector),
                      (this._addBreadcrumbEvent = n);
                  }
                  addListeners() {
                    const e = Dt(() => {
                      this._lastMutation = Wt();
                    });
                    this._teardown = () => {
                      e(), (this._clicks = []), (this._lastMutation = 0), (this._lastScroll = 0);
                    };
                  }
                  removeListeners() {
                    this._teardown && this._teardown(),
                      this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
                  }
                  handleClick(e, t) {
                    if (
                      (function (e, t) {
                        if (!Ut.includes(e.tagName)) return !0;
                        if (
                          'INPUT' === e.tagName &&
                          !['submit', 'button'].includes(e.getAttribute('type') || '')
                        )
                          return !0;
                        if (
                          'A' === e.tagName &&
                          (e.hasAttribute('download') ||
                            (e.hasAttribute('target') && '_self' !== e.getAttribute('target')))
                        )
                          return !0;
                        if (t && e.matches(t)) return !0;
                        return !1;
                      })(t, this._ignoreSelector) ||
                      !(function (e) {
                        return !(!e.data || 'number' != typeof e.data.nodeId || !e.timestamp);
                      })(e)
                    )
                      return;
                    const n = {
                      timestamp: Ot(e.timestamp),
                      clickBreadcrumb: e,
                      clickCount: 0,
                      node: t,
                    };
                    this._clicks.some(
                      e => e.node === n.node && Math.abs(e.timestamp - n.timestamp) < 1
                    ) ||
                      (this._clicks.push(n),
                      1 === this._clicks.length && this._scheduleCheckClicks());
                  }
                  registerMutation(e = Date.now()) {
                    this._lastMutation = Ot(e);
                  }
                  registerScroll(e = Date.now()) {
                    this._lastScroll = Ot(e);
                  }
                  registerClick(e) {
                    const t = Pt(e);
                    this._handleMultiClick(t);
                  }
                  _handleMultiClick(e) {
                    this._getClicks(e).forEach(e => {
                      e.clickCount++;
                    });
                  }
                  _getClicks(e) {
                    return this._clicks.filter(t => t.node === e);
                  }
                  _checkClicks() {
                    const e = [],
                      t = Wt();
                    this._clicks.forEach(n => {
                      !n.mutationAfter &&
                        this._lastMutation &&
                        (n.mutationAfter =
                          n.timestamp <= this._lastMutation
                            ? this._lastMutation - n.timestamp
                            : undefined),
                        !n.scrollAfter &&
                          this._lastScroll &&
                          (n.scrollAfter =
                            n.timestamp <= this._lastScroll
                              ? this._lastScroll - n.timestamp
                              : undefined),
                        n.timestamp + this._timeout <= t && e.push(n);
                    });
                    for (const t of e) {
                      const e = this._clicks.indexOf(t);
                      e > -1 && (this._generateBreadcrumbs(t), this._clicks.splice(e, 1));
                    }
                    this._clicks.length && this._scheduleCheckClicks();
                  }
                  _generateBreadcrumbs(e) {
                    const t = this._replay,
                      n = e.scrollAfter && e.scrollAfter <= this._scollTimeout,
                      r = e.mutationAfter && e.mutationAfter <= this._threshold,
                      s = !n && !r,
                      { clickCount: o, clickBreadcrumb: i } = e;
                    if (s) {
                      const n = 1e3 * Math.min(e.mutationAfter || this._timeout, this._timeout),
                        r = n < 1e3 * this._timeout ? 'mutation' : 'timeout',
                        s = {
                          type: 'default',
                          message: i.message,
                          timestamp: i.timestamp,
                          category: 'ui.slowClickDetected',
                          data: {
                            ...i.data,
                            url: c.location.href,
                            route: t.getCurrentRoute(),
                            timeAfterClickMs: n,
                            endReason: r,
                            clickCount: o || 1,
                          },
                        };
                      this._addBreadcrumbEvent(t, s);
                    } else if (o > 1) {
                      const e = {
                        type: 'default',
                        message: i.message,
                        timestamp: i.timestamp,
                        category: 'ui.multiClick',
                        data: {
                          ...i.data,
                          url: c.location.href,
                          route: t.getCurrentRoute(),
                          clickCount: o,
                          metric: !0,
                        },
                      };
                      this._addBreadcrumbEvent(t, e);
                    }
                  }
                  _scheduleCheckClicks() {
                    this._checkClickTimeout && clearTimeout(this._checkClickTimeout),
                      (this._checkClickTimeout = a.setTimeout(() => this._checkClicks(), 1e3));
                  }
                }
                const Ut = ['A', 'BUTTON', 'INPUT'];
                function Wt() {
                  return Date.now() / 1e3;
                }
                function Gt(e, t) {
                  try {
                    if (
                      !(function (e) {
                        return e.type === Ct;
                      })(t)
                    )
                      return;
                    const { source: n } = t.data;
                    if (
                      (Ft.has(n) && e.registerMutation(t.timestamp),
                      n === Re.Scroll && e.registerScroll(t.timestamp),
                      (function (e) {
                        return e.data.source === Re.MouseInteraction;
                      })(t))
                    ) {
                      const { type: n, id: r } = t.data,
                        s = St.mirror.getNode(r);
                      s instanceof HTMLElement && n === Pe.Click && e.registerClick(s);
                    }
                  } catch (e) {}
                }
                function zt(e) {
                  return { timestamp: Date.now() / 1e3, type: 'default', ...e };
                }
                var qt;
                !(function (e) {
                  (e[(e.Document = 0)] = 'Document'),
                    (e[(e.DocumentType = 1)] = 'DocumentType'),
                    (e[(e.Element = 2)] = 'Element'),
                    (e[(e.Text = 3)] = 'Text'),
                    (e[(e.CDATA = 4)] = 'CDATA'),
                    (e[(e.Comment = 5)] = 'Comment');
                })(qt || (qt = {}));
                const $t = new Set([
                  'id',
                  'class',
                  'aria-label',
                  'role',
                  'name',
                  'alt',
                  'title',
                  'data-test-id',
                  'data-testid',
                  'disabled',
                  'aria-disabled',
                  'data-sentry-component',
                ]);
                function Vt(e) {
                  const t = {};
                  !e['data-sentry-component'] &&
                    e['data-sentry-element'] &&
                    (e['data-sentry-component'] = e['data-sentry-element']);
                  for (const n in e)
                    if ($t.has(n)) {
                      let r = n;
                      ('data-testid' !== n && 'data-test-id' !== n) || (r = 'testId'),
                        (t[r] = e[n]);
                    }
                  return t;
                }
                const Kt = e => t => {
                  if (!e.isEnabled()) return;
                  const n = (function (e) {
                    const { target: t, message: n } = (function (e) {
                      const t = 'click' === e.name;
                      let n,
                        r = null;
                      try {
                        (r = t ? Nt(e.event) : Lt(e.event)),
                          (n = i.htmlTreeAsString(r, { maxStringLength: 200 }) || '<unknown>');
                      } catch (e) {
                        n = '<unknown>';
                      }
                      return { target: r, message: n };
                    })(e);
                    return zt({ category: `ui.${e.name}`, ...Xt(t, n) });
                  })(t);
                  if (!n) return;
                  const r = 'click' === t.name,
                    s = r ? t.event : undefined;
                  var o, a, c;
                  !(r && e.clickDetector && s && s.target) ||
                    s.altKey ||
                    s.metaKey ||
                    s.ctrlKey ||
                    s.shiftKey ||
                    ((o = e.clickDetector), (a = n), (c = Nt(t.event)), o.handleClick(a, c)),
                    jt(e, n);
                };
                function Xt(e, t) {
                  const n = St.mirror.getId(e),
                    r = n && St.mirror.getNode(n),
                    s = r && St.mirror.getMeta(r),
                    o =
                      s &&
                      (function (e) {
                        return e.type === qt.Element;
                      })(s)
                        ? s
                        : null;
                  return {
                    message: t,
                    data: o
                      ? {
                          nodeId: n,
                          node: {
                            id: n,
                            tagName: o.tagName,
                            textContent: Array.from(o.childNodes)
                              .map(e => e.type === qt.Text && e.textContent)
                              .filter(Boolean)
                              .map(e => e.trim())
                              .join(''),
                            attributes: Vt(o.attributes),
                          },
                        }
                      : {},
                  };
                }
                function Yt(e, t) {
                  if (!e.isEnabled()) return;
                  e.updateUserActivity();
                  const n = (function (e) {
                    const { metaKey: t, shiftKey: n, ctrlKey: r, altKey: s, key: o, target: a } = e;
                    if (
                      !a ||
                      (function (e) {
                        return (
                          'INPUT' === e.tagName || 'TEXTAREA' === e.tagName || e.isContentEditable
                        );
                      })(a) ||
                      !o
                    )
                      return null;
                    const c = t || r || s,
                      u = 1 === o.length;
                    if (!c && u) return null;
                    const l = i.htmlTreeAsString(a, { maxStringLength: 200 }) || '<unknown>',
                      d = Xt(a, l);
                    return zt({
                      category: 'ui.keyDown',
                      message: l,
                      data: { ...d.data, metaKey: t, shiftKey: n, ctrlKey: r, altKey: s, key: o },
                    });
                  })(t);
                  n && jt(e, n);
                }
                const Jt = {
                  resource: function (e) {
                    const {
                      entryType: t,
                      initiatorType: n,
                      name: r,
                      responseEnd: s,
                      startTime: o,
                      decodedBodySize: i,
                      encodedBodySize: a,
                      responseStatus: c,
                      transferSize: u,
                    } = e;
                    if (['fetch', 'xmlhttprequest'].includes(n)) return null;
                    return {
                      type: `${t}.${n}`,
                      start: en(o),
                      end: en(s),
                      name: r,
                      data: { size: u, statusCode: c, decodedBodySize: i, encodedBodySize: a },
                    };
                  },
                  paint: function (e) {
                    const { duration: t, entryType: n, name: r, startTime: s } = e,
                      o = en(s);
                    return { type: n, name: r, start: o, end: o + t, data: undefined };
                  },
                  navigation: function (e) {
                    const {
                      entryType: t,
                      name: n,
                      decodedBodySize: r,
                      duration: s,
                      domComplete: o,
                      encodedBodySize: i,
                      domContentLoadedEventStart: a,
                      domContentLoadedEventEnd: c,
                      domInteractive: u,
                      loadEventStart: l,
                      loadEventEnd: d,
                      redirectCount: f,
                      startTime: h,
                      transferSize: p,
                      type: m,
                    } = e;
                    if (0 === s) return null;
                    return {
                      type: `${t}.${m}`,
                      start: en(h),
                      end: en(o),
                      name: n,
                      data: {
                        size: p,
                        decodedBodySize: r,
                        encodedBodySize: i,
                        duration: s,
                        domInteractive: u,
                        domContentLoadedEventStart: a,
                        domContentLoadedEventEnd: c,
                        loadEventStart: l,
                        loadEventEnd: d,
                        domComplete: o,
                        redirectCount: f,
                      },
                    };
                  },
                };
                function Zt(e, t) {
                  return ({ metric: n }) => {
                    t.replayPerformanceEntries.push(e(n));
                  };
                }
                function Qt(e) {
                  const t = Jt[e.entryType];
                  return t ? t(e) : null;
                }
                function en(e) {
                  return ((i.browserPerformanceTimeOrigin || c.performance.timeOrigin) + e) / 1e3;
                }
                function tn(e) {
                  const t = e.entries[e.entries.length - 1];
                  return an(
                    e,
                    'largest-contentful-paint',
                    t && t.element ? [t.element] : undefined
                  );
                }
                function nn(e) {
                  return e.sources !== undefined;
                }
                function rn(e) {
                  const t = [],
                    n = [];
                  for (const r of e.entries)
                    if (nn(r)) {
                      const e = [];
                      for (const t of r.sources)
                        if (t.node) {
                          n.push(t.node);
                          const r = St.mirror.getId(t.node);
                          r && e.push(r);
                        }
                      t.push({ value: r.value, nodeIds: e.length ? e : undefined });
                    }
                  return an(e, 'cumulative-layout-shift', n, t);
                }
                function sn(e) {
                  const t = e.entries[e.entries.length - 1];
                  return an(e, 'first-input-delay', t && t.target ? [t.target] : undefined);
                }
                function on(e) {
                  const t = e.entries[e.entries.length - 1];
                  return an(e, 'interaction-to-next-paint', t && t.target ? [t.target] : undefined);
                }
                function an(e, t, n, r) {
                  const s = e.value,
                    o = e.rating,
                    i = en(s);
                  return {
                    type: 'web-vital',
                    name: t,
                    start: i,
                    end: i,
                    data: {
                      value: s,
                      size: s,
                      rating: o,
                      nodeIds: n ? n.map(e => St.mirror.getId(e)) : undefined,
                      attributions: r,
                    },
                  };
                }
                const cn =
                  'var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J="undefined"!=typeof TextEncoder&&new TextEncoder,K="undefined"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&"function"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});';
                class un extends Error {
                  constructor() {
                    super('Event buffer exceeded maximum size of 20000000.');
                  }
                }
                class ln {
                  constructor() {
                    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
                  }
                  get hasEvents() {
                    return this.events.length > 0;
                  }
                  get type() {
                    return 'sync';
                  }
                  destroy() {
                    this.events = [];
                  }
                  async addEvent(e) {
                    const t = JSON.stringify(e).length;
                    if (((this._totalSize += t), this._totalSize > p)) throw new un();
                    this.events.push(e);
                  }
                  finish() {
                    return new Promise(e => {
                      const t = this.events;
                      this.clear(), e(JSON.stringify(t));
                    });
                  }
                  clear() {
                    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
                  }
                  getEarliestTimestamp() {
                    const e = this.events.map(e => e.timestamp).sort()[0];
                    return e ? Bt(e) : null;
                  }
                }
                class dn {
                  constructor(e) {
                    (this._worker = e), (this._id = 0);
                  }
                  ensureReady() {
                    return (
                      this._ensureReadyPromise ||
                        (this._ensureReadyPromise = new Promise((e, t) => {
                          this._worker.addEventListener(
                            'message',
                            ({ data: n }) => {
                              n.success ? e() : t();
                            },
                            { once: !0 }
                          ),
                            this._worker.addEventListener(
                              'error',
                              e => {
                                t(e);
                              },
                              { once: !0 }
                            );
                        })),
                      this._ensureReadyPromise
                    );
                  }
                  destroy() {
                    xt && At.info('Destroying compression worker'), this._worker.terminate();
                  }
                  postMessage(e, t) {
                    const n = this._getAndIncrementId();
                    return new Promise((r, s) => {
                      const o = ({ data: t }) => {
                        const i = t;
                        if (i.method === e && i.id === n) {
                          if ((this._worker.removeEventListener('message', o), !i.success))
                            return (
                              xt && At.error('Error in compression worker: ', i.response),
                              void s(new Error('Error in compression worker'))
                            );
                          r(i.response);
                        }
                      };
                      this._worker.addEventListener('message', o),
                        this._worker.postMessage({ id: n, method: e, arg: t });
                    });
                  }
                  _getAndIncrementId() {
                    return this._id++;
                  }
                }
                class fn {
                  constructor(e) {
                    (this._worker = new dn(e)),
                      (this._earliestTimestamp = null),
                      (this._totalSize = 0),
                      (this.hasCheckout = !1);
                  }
                  get hasEvents() {
                    return !!this._earliestTimestamp;
                  }
                  get type() {
                    return 'worker';
                  }
                  ensureReady() {
                    return this._worker.ensureReady();
                  }
                  destroy() {
                    this._worker.destroy();
                  }
                  addEvent(e) {
                    const t = Bt(e.timestamp);
                    (!this._earliestTimestamp || t < this._earliestTimestamp) &&
                      (this._earliestTimestamp = t);
                    const n = JSON.stringify(e);
                    return (
                      (this._totalSize += n.length),
                      this._totalSize > p ? Promise.reject(new un()) : this._sendEventToWorker(n)
                    );
                  }
                  finish() {
                    return this._finishRequest();
                  }
                  clear() {
                    (this._earliestTimestamp = null),
                      (this._totalSize = 0),
                      (this.hasCheckout = !1),
                      this._worker.postMessage('clear').then(null, e => {
                        xt && At.exception(e, 'Sending "clear" message to worker failed', e);
                      });
                  }
                  getEarliestTimestamp() {
                    return this._earliestTimestamp;
                  }
                  _sendEventToWorker(e) {
                    return this._worker.postMessage('addEvent', e);
                  }
                  async _finishRequest() {
                    const e = await this._worker.postMessage('finish');
                    return (this._earliestTimestamp = null), (this._totalSize = 0), e;
                  }
                }
                class hn {
                  constructor(e) {
                    (this._fallback = new ln()),
                      (this._compression = new fn(e)),
                      (this._used = this._fallback),
                      (this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded());
                  }
                  get type() {
                    return this._used.type;
                  }
                  get hasEvents() {
                    return this._used.hasEvents;
                  }
                  get hasCheckout() {
                    return this._used.hasCheckout;
                  }
                  set hasCheckout(e) {
                    this._used.hasCheckout = e;
                  }
                  destroy() {
                    this._fallback.destroy(), this._compression.destroy();
                  }
                  clear() {
                    return this._used.clear();
                  }
                  getEarliestTimestamp() {
                    return this._used.getEarliestTimestamp();
                  }
                  addEvent(e) {
                    return this._used.addEvent(e);
                  }
                  async finish() {
                    return await this.ensureWorkerIsLoaded(), this._used.finish();
                  }
                  ensureWorkerIsLoaded() {
                    return this._ensureWorkerIsLoadedPromise;
                  }
                  async _ensureWorkerIsLoaded() {
                    try {
                      await this._compression.ensureReady();
                    } catch (e) {
                      return void (
                        xt &&
                        At.exception(
                          e,
                          'Failed to load the compression worker, falling back to simple buffer'
                        )
                      );
                    }
                    await this._switchToCompressionWorker();
                  }
                  async _switchToCompressionWorker() {
                    const { events: e, hasCheckout: t } = this._fallback,
                      n = [];
                    for (const t of e) n.push(this._compression.addEvent(t));
                    (this._compression.hasCheckout = t), (this._used = this._compression);
                    try {
                      await Promise.all(n);
                    } catch (e) {
                      xt && At.exception(e, 'Failed to add events when switching buffers.');
                    }
                  }
                }
                function pn({ useCompression: e, workerUrl: t }) {
                  if (e && window.Worker) {
                    const e = (function (e) {
                      try {
                        const t =
                          e ||
                          (function () {
                            if (
                              'undefined' == typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ ||
                              !__SENTRY_EXCLUDE_REPLAY_WORKER__
                            )
                              return (function () {
                                const e = new Blob([cn]);
                                return URL.createObjectURL(e);
                              })();
                            return '';
                          })();
                        if (!t) return;
                        xt && At.info('Using compression worker' + (e ? ` from ${e}` : ''));
                        const n = new Worker(t);
                        return new hn(n);
                      } catch (e) {
                        xt && At.exception(e, 'Failed to create compression worker');
                      }
                    })(t);
                    if (e) return e;
                  }
                  return xt && At.info('Using simple buffer'), new ln();
                }
                function mn() {
                  try {
                    return 'sessionStorage' in c && !!c.sessionStorage;
                  } catch (e) {
                    return !1;
                  }
                }
                function gn(e) {
                  !(function () {
                    if (!mn()) return;
                    try {
                      c.sessionStorage.removeItem(u);
                    } catch (e) {}
                  })(),
                    (e.session = undefined);
                }
                function yn(e) {
                  return e !== undefined && Math.random() < e;
                }
                function bn(e) {
                  const t = Date.now();
                  return {
                    id: e.id || i.uuid4(),
                    started: e.started || t,
                    lastActivity: e.lastActivity || t,
                    segmentId: e.segmentId || 0,
                    sampled: e.sampled,
                    previousSessionId: e.previousSessionId,
                  };
                }
                function wn(e) {
                  if (mn())
                    try {
                      c.sessionStorage.setItem(u, JSON.stringify(e));
                    } catch (e) {}
                }
                function vn(
                  { sessionSampleRate: e, allowBuffering: t, stickySession: n = !1 },
                  { previousSessionId: r } = {}
                ) {
                  const s = (function (e, t) {
                      return yn(e) ? 'session' : !!t && 'buffer';
                    })(e, t),
                    o = bn({ sampled: s, previousSessionId: r });
                  return n && wn(o), o;
                }
                function _n(e, t, n = +new Date()) {
                  return null === e || t === undefined || t < 0 || (0 !== t && e + t <= n);
                }
                function En(
                  e,
                  { maxReplayDuration: t, sessionIdleExpire: n, targetTime: r = Date.now() }
                ) {
                  return _n(e.started, t, r) || _n(e.lastActivity, n, r);
                }
                function Sn(e, { sessionIdleExpire: t, maxReplayDuration: n }) {
                  return (
                    !!En(e, { sessionIdleExpire: t, maxReplayDuration: n }) &&
                    ('buffer' !== e.sampled || 0 !== e.segmentId)
                  );
                }
                function xn(
                  { sessionIdleExpire: e, maxReplayDuration: t, previousSessionId: n },
                  r
                ) {
                  const s =
                    r.stickySession &&
                    (function () {
                      if (!mn()) return null;
                      try {
                        const e = c.sessionStorage.getItem(u);
                        if (!e) return null;
                        const t = JSON.parse(e);
                        return xt && At.infoTick('Loading existing session'), bn(t);
                      } catch (e) {
                        return null;
                      }
                    })();
                  return s
                    ? Sn(s, { sessionIdleExpire: e, maxReplayDuration: t })
                      ? (xt &&
                          At.infoTick('Session in sessionStorage is expired, creating new one...'),
                        vn(r, { previousSessionId: s.id }))
                      : s
                    : (xt && At.infoTick('Creating new session'), vn(r, { previousSessionId: n }));
                }
                function Tn(e, t, n) {
                  return !!kn(e, t) && (In(e, t, n), !0);
                }
                async function In(e, t, n) {
                  if (!e.eventBuffer) return null;
                  try {
                    n && 'buffer' === e.recordingMode && e.eventBuffer.clear(),
                      n && (e.eventBuffer.hasCheckout = !0);
                    const r = (function (e, t) {
                      try {
                        if (
                          'function' == typeof t &&
                          (function (e) {
                            return e.type === je.Custom;
                          })(e)
                        )
                          return t(e);
                      } catch (e) {
                        return (
                          xt &&
                            At.exception(
                              e,
                              'An error occured in the `beforeAddRecordingEvent` callback, skipping the event...'
                            ),
                          null
                        );
                      }
                      return e;
                    })(t, e.getOptions().beforeAddRecordingEvent);
                    if (!r) return;
                    return await e.eventBuffer.addEvent(r);
                  } catch (t) {
                    const n = t && t instanceof un ? 'addEventSizeExceeded' : 'addEvent';
                    e.handleException(t), await e.stop({ reason: n });
                    const r = o.getClient();
                    r && r.recordDroppedEvent('internal_sdk_error', 'replay');
                  }
                }
                function kn(e, t) {
                  if (!e.eventBuffer || e.isPaused() || !e.isEnabled()) return !1;
                  const n = Bt(t.timestamp);
                  return (
                    !(n + e.timeouts.sessionIdlePause < Date.now()) &&
                    (!(n > e.getContext().initialTimestamp + e.getOptions().maxReplayDuration) ||
                      (xt &&
                        At.infoTick(
                          `Skipping event with timestamp ${n} because it is after maxReplayDuration`
                        ),
                      !1))
                  );
                }
                function An(e) {
                  return !e.type;
                }
                function Cn(e) {
                  return 'transaction' === e.type;
                }
                function Bn(e) {
                  return 'feedback' === e.type;
                }
                function On(e) {
                  return (t, n) => {
                    if (!e.isEnabled() || (!An(t) && !Cn(t))) return;
                    const r = n && n.statusCode;
                    !r ||
                      r < 200 ||
                      r >= 300 ||
                      (Cn(t)
                        ? (function (e, t) {
                            const n = e.getContext();
                            t.contexts &&
                              t.contexts.trace &&
                              t.contexts.trace.trace_id &&
                              n.traceIds.size < 100 &&
                              n.traceIds.add(t.contexts.trace.trace_id);
                          })(e, t)
                        : (function (e, t) {
                            const n = e.getContext();
                            t.event_id && n.errorIds.size < 100 && n.errorIds.add(t.event_id);
                            if ('buffer' !== e.recordingMode || !t.tags || !t.tags.replayId) return;
                            const { beforeErrorSampling: r } = e.getOptions();
                            if ('function' == typeof r && !r(t)) return;
                            a.setTimeout(() => {
                              e.sendBufferedReplayOrFlush();
                            });
                          })(e, t));
                  };
                }
                function jn(e) {
                  return t => {
                    e.isEnabled() &&
                      An(t) &&
                      (function (e, t) {
                        const n =
                          t.exception &&
                          t.exception.values &&
                          t.exception.values[0] &&
                          t.exception.values[0].value;
                        if ('string' != typeof n) return;
                        if (
                          n.match(
                            /(reactjs\.org\/docs\/error-decoder\.html\?invariant=|react\.dev\/errors\/)(418|419|422|423|425)/
                          ) ||
                          n.match(/(does not match server-rendered HTML|Hydration failed because)/i)
                        ) {
                          jt(
                            e,
                            zt({
                              category: 'replay.hydrate-error',
                              data: { url: i.getLocationHref() },
                            })
                          );
                        }
                      })(e, t);
                  };
                }
                function Rn(e) {
                  const t = o.getClient();
                  t &&
                    t.on('beforeAddBreadcrumb', t =>
                      (function (e, t) {
                        if (!e.isEnabled() || !Pn(t)) return;
                        const n = (function (e) {
                          if (
                            !Pn(e) ||
                            ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(
                              e.category
                            ) ||
                            e.category.startsWith('ui.')
                          )
                            return null;
                          if ('console' === e.category)
                            return (function (e) {
                              const t = e.data && e.data.arguments;
                              if (!Array.isArray(t) || 0 === t.length) return zt(e);
                              let n = !1;
                              const r = t.map(e => {
                                if (!e) return e;
                                if ('string' == typeof e)
                                  return e.length > h ? ((n = !0), `${e.slice(0, h)}…`) : e;
                                if ('object' == typeof e)
                                  try {
                                    const t = i.normalize(e, 7);
                                    return JSON.stringify(t).length > h
                                      ? ((n = !0), `${JSON.stringify(t, null, 2).slice(0, h)}…`)
                                      : t;
                                  } catch (e) {}
                                return e;
                              });
                              return zt({
                                ...e,
                                data: {
                                  ...e.data,
                                  arguments: r,
                                  ...(n ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),
                                },
                              });
                            })(e);
                          return zt(e);
                        })(t);
                        n && jt(e, n);
                      })(e, t)
                    );
                }
                function Pn(e) {
                  return !!e.category;
                }
                function Nn(e) {
                  return Object.assign(
                    (t, n) => {
                      if (!e.isEnabled() || e.isPaused()) return t;
                      if (
                        (function (e) {
                          return 'replay_event' === e.type;
                        })(t)
                      )
                        return delete t.breadcrumbs, t;
                      if (!An(t) && !Cn(t) && !Bn(t)) return t;
                      if (!e.checkAndHandleExpiredSession()) return t;
                      if (Bn(t))
                        return (
                          e.flush(),
                          (t.contexts.feedback.replay_id = e.getSessionId()),
                          (function (e, t) {
                            e.triggerUserActivity(),
                              e.addUpdate(
                                () =>
                                  !t.timestamp ||
                                  (e.throttledAddEvent({
                                    type: je.Custom,
                                    timestamp: 1e3 * t.timestamp,
                                    data: {
                                      tag: 'breadcrumb',
                                      payload: {
                                        timestamp: t.timestamp,
                                        type: 'default',
                                        category: 'sentry.feedback',
                                        data: { feedbackId: t.event_id },
                                      },
                                    },
                                  }),
                                  !1)
                              );
                          })(e, t),
                          t
                        );
                      if (
                        (function (e, t) {
                          return !(
                            e.type ||
                            !e.exception ||
                            !e.exception.values ||
                            !e.exception.values.length ||
                            !t.originalException ||
                            !t.originalException.__rrweb__
                          );
                        })(t, n) &&
                        !e.getOptions()._experiments.captureExceptions
                      )
                        return xt && At.log('Ignoring error from rrweb internals', t), null;
                      const r = (function (e, t) {
                        return (
                          'buffer' === e.recordingMode &&
                          t.message !== d &&
                          !(!t.exception || t.type) &&
                          yn(e.getOptions().errorSampleRate)
                        );
                      })(e, t);
                      return (
                        (r || 'session' === e.recordingMode) &&
                          (t.tags = { ...t.tags, replayId: e.getSessionId() }),
                        t
                      );
                    },
                    { id: 'Replay' }
                  );
                }
                function Ln(e, t) {
                  return t.map(({ type: t, start: n, end: r, name: s, data: o }) => {
                    const i = e.throttledAddEvent({
                      type: je.Custom,
                      timestamp: n,
                      data: {
                        tag: 'performanceSpan',
                        payload: {
                          op: t,
                          description: s,
                          startTimestamp: n,
                          endTimestamp: r,
                          data: o,
                        },
                      },
                    });
                    return 'string' == typeof i ? Promise.resolve(null) : i;
                  });
                }
                function Mn(e) {
                  return t => {
                    if (!e.isEnabled()) return;
                    const n = (function (e) {
                      const { from: t, to: n } = e,
                        r = Date.now() / 1e3;
                      return {
                        type: 'navigation.push',
                        start: r,
                        end: r,
                        name: n,
                        data: { previous: t },
                      };
                    })(t);
                    null !== n &&
                      (e.getContext().urls.push(n.name),
                      e.triggerUserActivity(),
                      e.addUpdate(() => (Ln(e, [n]), !1)));
                  };
                }
                function Dn(e, t) {
                  e.isEnabled() &&
                    null !== t &&
                    ((function (e, t) {
                      return (
                        (!xt || !e.getOptions()._experiments.traceInternals) &&
                        o.isSentryRequestUrl(t, o.getClient())
                      );
                    })(e, t.name) ||
                      e.addUpdate(() => (Ln(e, [t]), !0)));
                }
                function Fn(e) {
                  if (!e) return undefined;
                  const t = new TextEncoder();
                  try {
                    if ('string' == typeof e) return t.encode(e).length;
                    if (e instanceof URLSearchParams) return t.encode(e.toString()).length;
                    if (e instanceof FormData) {
                      const n = Vn(e);
                      return t.encode(n).length;
                    }
                    if (e instanceof Blob) return e.size;
                    if (e instanceof ArrayBuffer) return e.byteLength;
                  } catch (e) {}
                  return undefined;
                }
                function Hn(e) {
                  if (!e) return undefined;
                  const t = parseInt(e, 10);
                  return isNaN(t) ? undefined : t;
                }
                function Un(e) {
                  try {
                    if ('string' == typeof e) return [e];
                    if (e instanceof URLSearchParams) return [e.toString()];
                    if (e instanceof FormData) return [Vn(e)];
                    if (!e) return [undefined];
                  } catch (t) {
                    return (
                      xt && At.exception(t, 'Failed to serialize body', e),
                      [undefined, 'BODY_PARSE_ERROR']
                    );
                  }
                  return (
                    xt && At.info('Skipping network body because of body type', e),
                    [undefined, 'UNPARSEABLE_BODY_TYPE']
                  );
                }
                function Wn(e, t) {
                  if (!e) return { headers: {}, size: undefined, _meta: { warnings: [t] } };
                  const n = { ...e._meta },
                    r = n.warnings || [];
                  return (n.warnings = [...r, t]), (e._meta = n), e;
                }
                function Gn(e, t) {
                  if (!t) return null;
                  const {
                    startTimestamp: n,
                    endTimestamp: r,
                    url: s,
                    method: o,
                    statusCode: a,
                    request: c,
                    response: u,
                  } = t;
                  return {
                    type: e,
                    start: n / 1e3,
                    end: r / 1e3,
                    name: s,
                    data: i.dropUndefinedKeys({
                      method: o,
                      statusCode: a,
                      request: c,
                      response: u,
                    }),
                  };
                }
                function zn(e) {
                  return { headers: {}, size: e, _meta: { warnings: ['URL_SKIPPED'] } };
                }
                function qn(e, t, n) {
                  if (!t && 0 === Object.keys(e).length) return undefined;
                  if (!t) return { headers: e };
                  if (!n) return { headers: e, size: t };
                  const r = { headers: e, size: t },
                    { body: s, warnings: o } = (function (e) {
                      if (!e || 'string' != typeof e) return { body: e };
                      const t = e.length > f,
                        n = (function (e) {
                          const t = e[0],
                            n = e[e.length - 1];
                          return ('[' === t && ']' === n) || ('{' === t && '}' === n);
                        })(e);
                      if (t) {
                        const t = e.slice(0, f);
                        return n
                          ? { body: t, warnings: ['MAYBE_JSON_TRUNCATED'] }
                          : { body: `${t}…`, warnings: ['TEXT_TRUNCATED'] };
                      }
                      if (n)
                        try {
                          return { body: JSON.parse(e) };
                        } catch (e) {}
                      return { body: e };
                    })(n);
                  return (r.body = s), o && o.length > 0 && (r._meta = { warnings: o }), r;
                }
                function $n(e, t) {
                  return Object.entries(e).reduce((n, [r, s]) => {
                    const o = r.toLowerCase();
                    return t.includes(o) && e[r] && (n[o] = s), n;
                  }, {});
                }
                function Vn(e) {
                  return new URLSearchParams(e).toString();
                }
                function Kn(e, t) {
                  const n = (function (e, t = c.document.baseURI) {
                    if (
                      e.startsWith('http://') ||
                      e.startsWith('https://') ||
                      e.startsWith(c.location.origin)
                    )
                      return e;
                    const n = new URL(e, t);
                    if (n.origin !== new URL(t).origin) return e;
                    const r = n.href;
                    if (!e.endsWith('/') && r.endsWith('/')) return r.slice(0, -1);
                    return r;
                  })(e);
                  return i.stringMatchesSomePattern(n, t);
                }
                async function Xn(e, t, n) {
                  try {
                    const r = await (async function (e, t, n) {
                        const r = Date.now(),
                          { startTimestamp: s = r, endTimestamp: o = r } = t,
                          {
                            url: i,
                            method: c,
                            status_code: u = 0,
                            request_body_size: l,
                            response_body_size: d,
                          } = e.data,
                          f = Kn(i, n.networkDetailAllowUrls) && !Kn(i, n.networkDetailDenyUrls),
                          h = f
                            ? (function (
                                { networkCaptureBodies: e, networkRequestHeaders: t },
                                n,
                                r
                              ) {
                                const s = n
                                  ? (function (e, t) {
                                      if (1 === e.length && 'string' != typeof e[0])
                                        return Zn(e[0], t);
                                      if (2 === e.length) return Zn(e[1], t);
                                      return {};
                                    })(n, t)
                                  : {};
                                if (!e) return qn(s, r, undefined);
                                const o = Yn(n),
                                  [i, a] = Un(o),
                                  c = qn(s, r, i);
                                if (a) return Wn(c, a);
                                return c;
                              })(n, t.input, l)
                            : zn(l),
                          p = await (async function (
                            e,
                            { networkCaptureBodies: t, networkResponseHeaders: n },
                            r,
                            s
                          ) {
                            if (!e && s !== undefined) return zn(s);
                            const o = r ? Jn(r.headers, n) : {};
                            if (!r || (!t && s !== undefined)) return qn(o, s, undefined);
                            const [i, c] = await (async function (e) {
                                const t = (function (e) {
                                  try {
                                    return e.clone();
                                  } catch (e) {
                                    xt && At.exception(e, 'Failed to clone response body');
                                  }
                                })(e);
                                if (!t) return [undefined, 'BODY_PARSE_ERROR'];
                                try {
                                  const e = await (function (e) {
                                    return new Promise((t, n) => {
                                      const r = a.setTimeout(
                                        () =>
                                          n(
                                            new Error('Timeout while trying to read response body')
                                          ),
                                        500
                                      );
                                      (async function (e) {
                                        return await e.text();
                                      })(e)
                                        .then(
                                          e => t(e),
                                          e => n(e)
                                        )
                                        .finally(() => clearTimeout(r));
                                    });
                                  })(t);
                                  return [e];
                                } catch (e) {
                                  return (
                                    xt && At.exception(e, 'Failed to get text body from response'),
                                    [undefined, 'BODY_PARSE_ERROR']
                                  );
                                }
                              })(r),
                              u = (function (
                                e,
                                {
                                  networkCaptureBodies: t,
                                  responseBodySize: n,
                                  captureDetails: r,
                                  headers: s,
                                }
                              ) {
                                try {
                                  const o = e && e.length && n === undefined ? Fn(e) : n;
                                  return r ? qn(s, o, t ? e : undefined) : zn(o);
                                } catch (e) {
                                  return (
                                    xt && At.exception(e, 'Failed to serialize response body'),
                                    qn(s, n, undefined)
                                  );
                                }
                              })(i, {
                                networkCaptureBodies: t,
                                responseBodySize: s,
                                captureDetails: e,
                                headers: o,
                              });
                            if (c) return Wn(u, c);
                            return u;
                          })(f, n, t.response, d);
                        return {
                          startTimestamp: s,
                          endTimestamp: o,
                          url: i,
                          method: c,
                          statusCode: u,
                          request: h,
                          response: p,
                        };
                      })(e, t, n),
                      s = Gn('resource.fetch', r);
                    Dn(n.replay, s);
                  } catch (e) {
                    xt && At.exception(e, 'Failed to capture fetch breadcrumb');
                  }
                }
                function Yn(e = []) {
                  return 2 !== e.length || 'object' != typeof e[1] ? undefined : e[1].body;
                }
                function Jn(e, t) {
                  const n = {};
                  return (
                    t.forEach(t => {
                      e.get(t) && (n[t] = e.get(t));
                    }),
                    n
                  );
                }
                function Zn(e, t) {
                  if (!e) return {};
                  const n = e.headers;
                  return n
                    ? n instanceof Headers
                      ? Jn(n, t)
                      : Array.isArray(n)
                        ? {}
                        : $n(n, t)
                    : {};
                }
                async function Qn(e, t, n) {
                  try {
                    const r = (function (e, t, n) {
                        const r = Date.now(),
                          { startTimestamp: s = r, endTimestamp: o = r, input: i, xhr: c } = t,
                          {
                            url: u,
                            method: l,
                            status_code: d = 0,
                            request_body_size: f,
                            response_body_size: h,
                          } = e.data;
                        if (!u) return null;
                        if (
                          !c ||
                          !Kn(u, n.networkDetailAllowUrls) ||
                          Kn(u, n.networkDetailDenyUrls)
                        ) {
                          return {
                            startTimestamp: s,
                            endTimestamp: o,
                            url: u,
                            method: l,
                            statusCode: d,
                            request: zn(f),
                            response: zn(h),
                          };
                        }
                        const p = c[a.SENTRY_XHR_DATA_KEY],
                          m = p ? $n(p.request_headers, n.networkRequestHeaders) : {},
                          g = $n(
                            (function (e) {
                              const t = e.getAllResponseHeaders();
                              if (!t) return {};
                              return t.split('\r\n').reduce((e, t) => {
                                const [n, r] = t.split(': ');
                                return r && (e[n.toLowerCase()] = r), e;
                              }, {});
                            })(c),
                            n.networkResponseHeaders
                          ),
                          [y, b] = n.networkCaptureBodies ? Un(i) : [undefined],
                          [w, v] = n.networkCaptureBodies
                            ? (function (e) {
                                const t = [];
                                try {
                                  return [e.responseText];
                                } catch (e) {
                                  t.push(e);
                                }
                                try {
                                  return (function (e, t) {
                                    try {
                                      if ('string' == typeof e) return [e];
                                      if (e instanceof Document) return [e.body.outerHTML];
                                      if ('json' === t && e && 'object' == typeof e)
                                        return [JSON.stringify(e)];
                                      if (!e) return [undefined];
                                    } catch (t) {
                                      return (
                                        xt && At.exception(t, 'Failed to serialize body', e),
                                        [undefined, 'BODY_PARSE_ERROR']
                                      );
                                    }
                                    return (
                                      xt &&
                                        At.info('Skipping network body because of body type', e),
                                      [undefined, 'UNPARSEABLE_BODY_TYPE']
                                    );
                                  })(e.response, e.responseType);
                                } catch (e) {
                                  t.push(e);
                                }
                                return (
                                  xt && At.warn('Failed to get xhr response body', ...t),
                                  [undefined]
                                );
                              })(c)
                            : [undefined],
                          _ = qn(m, f, y),
                          E = qn(g, h, w);
                        return {
                          startTimestamp: s,
                          endTimestamp: o,
                          url: u,
                          method: l,
                          statusCode: d,
                          request: b ? Wn(_, b) : _,
                          response: v ? Wn(E, v) : E,
                        };
                      })(e, t, n),
                      s = Gn('resource.xhr', r);
                    Dn(n.replay, s);
                  } catch (e) {
                    xt && At.exception(e, 'Failed to capture xhr breadcrumb');
                  }
                }
                function er(e, t) {
                  const { xhr: n, input: r } = t;
                  if (!n) return;
                  const s = Fn(r),
                    o = n.getResponseHeader('content-length')
                      ? Hn(n.getResponseHeader('content-length'))
                      : (function (e, t) {
                          try {
                            return Fn(
                              'json' === t && e && 'object' == typeof e ? JSON.stringify(e) : e
                            );
                          } catch (e) {
                            return undefined;
                          }
                        })(n.response, n.responseType);
                  s !== undefined && (e.data.request_body_size = s),
                    o !== undefined && (e.data.response_body_size = o);
                }
                function tr(e) {
                  const t = o.getClient();
                  try {
                    const {
                        networkDetailAllowUrls: n,
                        networkDetailDenyUrls: r,
                        networkCaptureBodies: s,
                        networkRequestHeaders: o,
                        networkResponseHeaders: i,
                      } = e.getOptions(),
                      a = {
                        replay: e,
                        networkDetailAllowUrls: n,
                        networkDetailDenyUrls: r,
                        networkCaptureBodies: s,
                        networkRequestHeaders: o,
                        networkResponseHeaders: i,
                      };
                    t &&
                      t.on('beforeAddBreadcrumb', (e, t) =>
                        (function (e, t, n) {
                          if (!t.data) return;
                          try {
                            (function (e) {
                              return 'xhr' === e.category;
                            })(t) &&
                              (function (e) {
                                return e && e.xhr;
                              })(n) &&
                              (er(t, n), Qn(t, n, e)),
                              (function (e) {
                                return 'fetch' === e.category;
                              })(t) &&
                                (function (e) {
                                  return e && e.response;
                                })(n) &&
                                (!(function (e, t) {
                                  const { input: n, response: r } = t,
                                    s = Fn(n ? Yn(n) : undefined),
                                    o = r ? Hn(r.headers.get('content-length')) : undefined;
                                  s !== undefined && (e.data.request_body_size = s),
                                    o !== undefined && (e.data.response_body_size = o);
                                })(t, n),
                                Xn(t, n, e));
                          } catch (e) {
                            xt && At.exception(e, 'Error when enriching network breadcrumb');
                          }
                        })(a, e, t)
                      );
                  } catch (e) {}
                }
                function nr(e) {
                  const { jsHeapSizeLimit: t, totalJSHeapSize: n, usedJSHeapSize: r } = e,
                    s = Date.now() / 1e3;
                  return {
                    type: 'memory',
                    name: 'memory',
                    start: s,
                    end: s,
                    data: { memory: { jsHeapSizeLimit: t, totalJSHeapSize: n, usedJSHeapSize: r } },
                  };
                }
                function rr(e) {
                  let t = !1;
                  return (n, r) => {
                    if (!e.checkAndHandleExpiredSession())
                      return void (xt && At.warn('Received replay event after session expired.'));
                    const s = r || !t;
                    (t = !0),
                      e.clickDetector && Gt(e.clickDetector, n),
                      e.addUpdate(() => {
                        if (
                          ('buffer' === e.recordingMode && s && e.setInitialState(), !Tn(e, n, s))
                        )
                          return !0;
                        if (!s) return !1;
                        const t = e.session;
                        if (
                          ((function (e, t) {
                            if (!t || !e.session || 0 !== e.session.segmentId) return;
                            Tn(
                              e,
                              (function (e) {
                                const t = e.getOptions();
                                return {
                                  type: je.Custom,
                                  timestamp: Date.now(),
                                  data: {
                                    tag: 'options',
                                    payload: {
                                      shouldRecordCanvas: e.isRecordingCanvas(),
                                      sessionSampleRate: t.sessionSampleRate,
                                      errorSampleRate: t.errorSampleRate,
                                      useCompressionOption: t.useCompression,
                                      blockAllMedia: t.blockAllMedia,
                                      maskAllText: t.maskAllText,
                                      maskAllInputs: t.maskAllInputs,
                                      useCompression:
                                        !!e.eventBuffer && 'worker' === e.eventBuffer.type,
                                      networkDetailHasUrls: t.networkDetailAllowUrls.length > 0,
                                      networkCaptureBodies: t.networkCaptureBodies,
                                      networkRequestHasHeaders: t.networkRequestHeaders.length > 0,
                                      networkResponseHasHeaders:
                                        t.networkResponseHeaders.length > 0,
                                    },
                                  },
                                };
                              })(e),
                              !1
                            );
                          })(e, s),
                          t && t.previousSessionId)
                        )
                          return !0;
                        if ('buffer' === e.recordingMode && t && e.eventBuffer) {
                          const n = e.eventBuffer.getEarliestTimestamp();
                          n &&
                            (xt &&
                              At.info(
                                `Updating session start time to earliest event in buffer to ${new Date(n)}`
                              ),
                            (t.started = n),
                            e.getOptions().stickySession && wn(t));
                        }
                        return 'session' === e.recordingMode && e.flush(), !0;
                      });
                  };
                }
                async function sr({
                  recordingData: e,
                  replayId: t,
                  segmentId: n,
                  eventContext: r,
                  timestamp: s,
                  session: a,
                }) {
                  const c = (function ({ recordingData: e, headers: t }) {
                      let n;
                      const r = `${JSON.stringify(t)}\n`;
                      if ('string' == typeof e) n = `${r}${e}`;
                      else {
                        const t = new TextEncoder().encode(r);
                        (n = new Uint8Array(t.length + e.length)), n.set(t), n.set(e, t.length);
                      }
                      return n;
                    })({ recordingData: e, headers: { segment_id: n } }),
                    { urls: u, errorIds: f, traceIds: h, initialTimestamp: p } = r,
                    m = o.getClient(),
                    g = o.getCurrentScope(),
                    y = m && m.getTransport(),
                    b = m && m.getDsn();
                  if (!(m && y && b && a.sampled)) return i.resolvedSyncPromise({});
                  const w = {
                      type: l,
                      replay_start_timestamp: p / 1e3,
                      timestamp: s / 1e3,
                      error_ids: f,
                      trace_ids: h,
                      urls: u,
                      replay_id: t,
                      segment_id: n,
                      replay_type: a.sampled,
                    },
                    v = await (async function ({ client: e, scope: t, replayId: n, event: r }) {
                      const s = {
                        event_id: n,
                        integrations:
                          'object' != typeof e._integrations ||
                          null === e._integrations ||
                          Array.isArray(e._integrations)
                            ? undefined
                            : Object.keys(e._integrations),
                      };
                      e.emit('preprocessEvent', r, s);
                      const i = await o.prepareEvent(
                        e.getOptions(),
                        r,
                        s,
                        t,
                        e,
                        o.getIsolationScope()
                      );
                      if (!i) return null;
                      i.platform = i.platform || 'javascript';
                      const a = e.getSdkMetadata(),
                        { name: c, version: u } = (a && a.sdk) || {};
                      return (
                        (i.sdk = {
                          ...i.sdk,
                          name: c || 'sentry.javascript.unknown',
                          version: u || '0.0.0',
                        }),
                        i
                      );
                    })({ scope: g, client: m, replayId: t, event: w });
                  if (!v)
                    return (
                      m.recordDroppedEvent('event_processor', 'replay', w),
                      xt && At.info('An event processor returned `null`, will not send event.'),
                      i.resolvedSyncPromise({})
                    );
                  delete v.sdkProcessingMetadata;
                  const _ = (function (e, t, n, r) {
                    return i.createEnvelope(
                      i.createEventEnvelopeHeaders(e, i.getSdkMetadataForEnvelopeHeader(e), r, n),
                      [
                        [{ type: 'replay_event' }, e],
                        [
                          {
                            type: 'replay_recording',
                            length:
                              'string' == typeof t ? new TextEncoder().encode(t).length : t.length,
                          },
                          t,
                        ],
                      ]
                    );
                  })(v, c, b, m.getOptions().tunnel);
                  let E;
                  try {
                    E = await y.send(_);
                  } catch (e) {
                    const t = new Error(d);
                    try {
                      t.cause = e;
                    } catch (e) {}
                    throw t;
                  }
                  if (
                    'number' == typeof E.statusCode &&
                    (E.statusCode < 200 || E.statusCode >= 300)
                  )
                    throw new or(E.statusCode);
                  const S = i.updateRateLimits({}, E);
                  if (i.isRateLimited(S, 'replay')) throw new ir(S);
                  return E;
                }
                class or extends Error {
                  constructor(e) {
                    super(`Transport returned status code ${e}`);
                  }
                }
                class ir extends Error {
                  constructor(e) {
                    super('Rate limit hit'), (this.rateLimits = e);
                  }
                }
                async function ar(e, t = { count: 0, interval: 5e3 }) {
                  const { recordingData: n, onError: r } = e;
                  if (n.length)
                    try {
                      return await sr(e), !0;
                    } catch (n) {
                      if (n instanceof or || n instanceof ir) throw n;
                      if (
                        (o.setContext('Replays', { _retryCount: t.count }), r && r(n), t.count >= 3)
                      ) {
                        const e = new Error(`${d} - max retries exceeded`);
                        try {
                          e.cause = n;
                        } catch (e) {}
                        throw e;
                      }
                      return (
                        (t.interval *= ++t.count),
                        new Promise((n, r) => {
                          a.setTimeout(async () => {
                            try {
                              await ar(e, t), n(!0);
                            } catch (e) {
                              r(e);
                            }
                          }, t.interval);
                        })
                      );
                    }
                }
                const cr = '__THROTTLED';
                function ur(e, t, n) {
                  const r = new Map();
                  let s = !1;
                  return (...o) => {
                    const i = Math.floor(Date.now() / 1e3);
                    if (
                      ((e => {
                        const t = e - n;
                        r.forEach((e, n) => {
                          n < t && r.delete(n);
                        });
                      })(i),
                      [...r.values()].reduce((e, t) => e + t, 0) >= t)
                    ) {
                      const e = s;
                      return (s = !0), e ? '__SKIPPED' : cr;
                    }
                    s = !1;
                    const a = r.get(i) || 0;
                    return r.set(i, a + 1), e(...o);
                  };
                }
                class lr {
                  constructor({ options: e, recordingOptions: t }) {
                    lr.prototype.__init.call(this),
                      lr.prototype.__init2.call(this),
                      lr.prototype.__init3.call(this),
                      lr.prototype.__init4.call(this),
                      lr.prototype.__init5.call(this),
                      lr.prototype.__init6.call(this),
                      (this.eventBuffer = null),
                      (this.performanceEntries = []),
                      (this.replayPerformanceEntries = []),
                      (this.recordingMode = 'session'),
                      (this.timeouts = { sessionIdlePause: 3e5, sessionIdleExpire: 9e5 }),
                      (this._lastActivity = Date.now()),
                      (this._isEnabled = !1),
                      (this._isPaused = !1),
                      (this._requiresManualStart = !1),
                      (this._hasInitializedCoreListeners = !1),
                      (this._context = {
                        errorIds: new Set(),
                        traceIds: new Set(),
                        urls: [],
                        initialTimestamp: Date.now(),
                        initialUrl: '',
                      }),
                      (this._recordingOptions = t),
                      (this._options = e),
                      (this._debouncedFlush = (function (e, t, n) {
                        let r, s, o;
                        const i = n && n.maxWait ? Math.max(n.maxWait, t) : 0;
                        function c() {
                          return u(), (r = e()), r;
                        }
                        function u() {
                          s !== undefined && clearTimeout(s),
                            o !== undefined && clearTimeout(o),
                            (s = o = undefined);
                        }
                        function l() {
                          return (
                            s && clearTimeout(s),
                            (s = a.setTimeout(c, t)),
                            i && o === undefined && (o = a.setTimeout(c, i)),
                            r
                          );
                        }
                        return (
                          (l.cancel = u),
                          (l.flush = function () {
                            return s !== undefined || o !== undefined ? c() : r;
                          }),
                          l
                        );
                      })(() => this._flush(), this._options.flushMinDelay, {
                        maxWait: this._options.flushMaxDelay,
                      })),
                      (this._throttledAddEvent = ur(
                        (e, t) =>
                          (function (e, t, n) {
                            return kn(e, t) ? In(e, t, n) : Promise.resolve(null);
                          })(this, e, t),
                        300,
                        5
                      ));
                    const { slowClickTimeout: n, slowClickIgnoreSelectors: r } = this.getOptions(),
                      s = n
                        ? {
                            threshold: Math.min(3e3, n),
                            timeout: n,
                            scrollTimeout: 300,
                            ignoreSelector: r ? r.join(',') : '',
                          }
                        : undefined;
                    if ((s && (this.clickDetector = new Ht(this, s)), xt)) {
                      const t = e._experiments;
                      At.setConfig({
                        captureExceptions: !!t.captureExceptions,
                        traceInternals: !!t.traceInternals,
                      });
                    }
                  }
                  getContext() {
                    return this._context;
                  }
                  isEnabled() {
                    return this._isEnabled;
                  }
                  isPaused() {
                    return this._isPaused;
                  }
                  isRecordingCanvas() {
                    return Boolean(this._canvas);
                  }
                  getOptions() {
                    return this._options;
                  }
                  handleException(e) {
                    xt && At.exception(e), this._options.onError && this._options.onError(e);
                  }
                  initializeSampling(e) {
                    const { errorSampleRate: t, sessionSampleRate: n } = this._options,
                      r = t <= 0 && n <= 0;
                    (this._requiresManualStart = r),
                      r ||
                        (this._initializeSessionForSampling(e),
                        this.session
                          ? !1 !== this.session.sampled &&
                            ((this.recordingMode =
                              'buffer' === this.session.sampled && 0 === this.session.segmentId
                                ? 'buffer'
                                : 'session'),
                            xt && At.infoTick(`Starting replay in ${this.recordingMode} mode`),
                            this._initializeRecording())
                          : xt &&
                            At.exception(new Error('Unable to initialize and create session')));
                  }
                  start() {
                    if (this._isEnabled && 'session' === this.recordingMode)
                      return void (xt && At.info('Recording is already in progress'));
                    if (this._isEnabled && 'buffer' === this.recordingMode)
                      return void (
                        xt && At.info('Buffering is in progress, call `flush()` to save the replay')
                      );
                    xt && At.infoTick('Starting replay in session mode'),
                      this._updateUserActivity();
                    const e = xn(
                      {
                        maxReplayDuration: this._options.maxReplayDuration,
                        sessionIdleExpire: this.timeouts.sessionIdleExpire,
                      },
                      {
                        stickySession: this._options.stickySession,
                        sessionSampleRate: 1,
                        allowBuffering: !1,
                      }
                    );
                    (this.session = e), this._initializeRecording();
                  }
                  startBuffering() {
                    if (this._isEnabled)
                      return void (
                        xt && At.info('Buffering is in progress, call `flush()` to save the replay')
                      );
                    xt && At.infoTick('Starting replay in buffer mode');
                    const e = xn(
                      {
                        sessionIdleExpire: this.timeouts.sessionIdleExpire,
                        maxReplayDuration: this._options.maxReplayDuration,
                      },
                      {
                        stickySession: this._options.stickySession,
                        sessionSampleRate: 0,
                        allowBuffering: !0,
                      }
                    );
                    (this.session = e),
                      (this.recordingMode = 'buffer'),
                      this._initializeRecording();
                  }
                  startRecording() {
                    try {
                      const e = this._canvas;
                      this._stopRecording = St({
                        ...this._recordingOptions,
                        ...('buffer' === this.recordingMode
                          ? { checkoutEveryNms: 6e4 }
                          : this._options._experiments.continuousCheckout && {
                              checkoutEveryNms: Math.max(
                                36e4,
                                this._options._experiments.continuousCheckout
                              ),
                            }),
                        emit: rr(this),
                        onMutation: this._onMutationHandler,
                        ...(e
                          ? {
                              recordCanvas: e.recordCanvas,
                              getCanvasManager: e.getCanvasManager,
                              sampling: e.sampling,
                              dataURLOptions: e.dataURLOptions,
                            }
                          : {}),
                      });
                    } catch (e) {
                      this.handleException(e);
                    }
                  }
                  stopRecording() {
                    try {
                      return (
                        this._stopRecording &&
                          (this._stopRecording(), (this._stopRecording = undefined)),
                        !0
                      );
                    } catch (e) {
                      return this.handleException(e), !1;
                    }
                  }
                  async stop({ forceFlush: e = !1, reason: t } = {}) {
                    if (this._isEnabled) {
                      this._isEnabled = !1;
                      try {
                        xt && At.info('Stopping Replay' + (t ? ` triggered by ${t}` : '')),
                          this._removeListeners(),
                          this.stopRecording(),
                          this._debouncedFlush.cancel(),
                          e && (await this._flush({ force: !0 })),
                          this.eventBuffer && this.eventBuffer.destroy(),
                          (this.eventBuffer = null),
                          gn(this);
                      } catch (e) {
                        this.handleException(e);
                      }
                    }
                  }
                  pause() {
                    this._isPaused ||
                      ((this._isPaused = !0),
                      this.stopRecording(),
                      xt && At.info('Pausing replay'));
                  }
                  resume() {
                    this._isPaused &&
                      this._checkSession() &&
                      ((this._isPaused = !1),
                      this.startRecording(),
                      xt && At.info('Resuming replay'));
                  }
                  async sendBufferedReplayOrFlush({ continueRecording: e = !0 } = {}) {
                    if ('session' === this.recordingMode) return this.flushImmediate();
                    const t = Date.now();
                    xt && At.info('Converting buffer to session'), await this.flushImmediate();
                    const n = this.stopRecording();
                    e &&
                      n &&
                      'session' !== this.recordingMode &&
                      ((this.recordingMode = 'session'),
                      this.session &&
                        (this._updateUserActivity(t),
                        this._updateSessionActivity(t),
                        this._maybeSaveSession()),
                      this.startRecording());
                  }
                  addUpdate(e) {
                    const t = e();
                    'buffer' !== this.recordingMode && !0 !== t && this._debouncedFlush();
                  }
                  triggerUserActivity() {
                    if ((this._updateUserActivity(), this._stopRecording))
                      this.checkAndHandleExpiredSession(), this._updateSessionActivity();
                    else {
                      if (!this._checkSession()) return;
                      this.resume();
                    }
                  }
                  updateUserActivity() {
                    this._updateUserActivity(), this._updateSessionActivity();
                  }
                  conditionalFlush() {
                    return 'buffer' === this.recordingMode
                      ? Promise.resolve()
                      : this.flushImmediate();
                  }
                  flush() {
                    return this._debouncedFlush();
                  }
                  flushImmediate() {
                    return this._debouncedFlush(), this._debouncedFlush.flush();
                  }
                  cancelFlush() {
                    this._debouncedFlush.cancel();
                  }
                  getSessionId() {
                    return this.session && this.session.id;
                  }
                  checkAndHandleExpiredSession() {
                    if (
                      !(
                        this._lastActivity &&
                        _n(this._lastActivity, this.timeouts.sessionIdlePause) &&
                        this.session &&
                        'session' === this.session.sampled
                      )
                    )
                      return !!this._checkSession();
                    this.pause();
                  }
                  setInitialState() {
                    const e = `${c.location.pathname}${c.location.hash}${c.location.search}`,
                      t = `${c.location.origin}${e}`;
                    (this.performanceEntries = []),
                      (this.replayPerformanceEntries = []),
                      this._clearContext(),
                      (this._context.initialUrl = t),
                      (this._context.initialTimestamp = Date.now()),
                      this._context.urls.push(t);
                  }
                  throttledAddEvent(e, t) {
                    const n = this._throttledAddEvent(e, t);
                    if (n === cr) {
                      const e = zt({ category: 'replay.throttled' });
                      this.addUpdate(
                        () =>
                          !Tn(this, {
                            type: 5,
                            timestamp: e.timestamp || 0,
                            data: { tag: 'breadcrumb', payload: e, metric: !0 },
                          })
                      );
                    }
                    return n;
                  }
                  getCurrentRoute() {
                    const e = this.lastActiveSpan || o.getActiveSpan(),
                      t = e && o.getRootSpan(e),
                      n = ((t && o.spanToJSON(t).data) || {})[o.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];
                    return t && n && ['route', 'custom'].includes(n)
                      ? o.spanToJSON(t).description
                      : undefined;
                  }
                  _initializeRecording() {
                    this.setInitialState(),
                      this._updateSessionActivity(),
                      (this.eventBuffer = pn({
                        useCompression: this._options.useCompression,
                        workerUrl: this._options.workerUrl,
                      })),
                      this._removeListeners(),
                      this._addListeners(),
                      (this._isEnabled = !0),
                      (this._isPaused = !1),
                      this.startRecording();
                  }
                  _initializeSessionForSampling(e) {
                    const t = this._options.errorSampleRate > 0,
                      n = xn(
                        {
                          sessionIdleExpire: this.timeouts.sessionIdleExpire,
                          maxReplayDuration: this._options.maxReplayDuration,
                          previousSessionId: e,
                        },
                        {
                          stickySession: this._options.stickySession,
                          sessionSampleRate: this._options.sessionSampleRate,
                          allowBuffering: t,
                        }
                      );
                    this.session = n;
                  }
                  _checkSession() {
                    if (!this.session) return !1;
                    const e = this.session;
                    return (
                      !Sn(e, {
                        sessionIdleExpire: this.timeouts.sessionIdleExpire,
                        maxReplayDuration: this._options.maxReplayDuration,
                      }) || (this._refreshSession(e), !1)
                    );
                  }
                  async _refreshSession(e) {
                    this._isEnabled &&
                      (await this.stop({ reason: 'refresh session' }),
                      this.initializeSampling(e.id));
                  }
                  _addListeners() {
                    try {
                      c.document.addEventListener('visibilitychange', this._handleVisibilityChange),
                        c.addEventListener('blur', this._handleWindowBlur),
                        c.addEventListener('focus', this._handleWindowFocus),
                        c.addEventListener('keydown', this._handleKeyboardEvent),
                        this.clickDetector && this.clickDetector.addListeners(),
                        this._hasInitializedCoreListeners ||
                          (!(function (e) {
                            const t = o.getClient();
                            a.addClickKeypressInstrumentationHandler(Kt(e)),
                              a.addHistoryInstrumentationHandler(Mn(e)),
                              Rn(e),
                              tr(e);
                            const n = Nn(e);
                            o.addEventProcessor(n),
                              t &&
                                (t.on('beforeSendEvent', jn(e)),
                                t.on('afterSendEvent', On(e)),
                                t.on('createDsc', t => {
                                  const n = e.getSessionId();
                                  n &&
                                    e.isEnabled() &&
                                    'session' === e.recordingMode &&
                                    e.checkAndHandleExpiredSession() &&
                                    (t.replay_id = n);
                                }),
                                t.on('spanStart', t => {
                                  e.lastActiveSpan = t;
                                }),
                                t.on('spanEnd', t => {
                                  e.lastActiveSpan = t;
                                }),
                                t.on('beforeSendFeedback', (t, n) => {
                                  const r = e.getSessionId();
                                  n &&
                                    n.includeReplay &&
                                    e.isEnabled() &&
                                    r &&
                                    t.contexts &&
                                    t.contexts.feedback &&
                                    (t.contexts.feedback.replay_id = r);
                                }));
                          })(this),
                          (this._hasInitializedCoreListeners = !0));
                    } catch (e) {
                      this.handleException(e);
                    }
                    this._performanceCleanupCallback = (function (e) {
                      function t(t) {
                        e.performanceEntries.includes(t) || e.performanceEntries.push(t);
                      }
                      function n({ entries: e }) {
                        e.forEach(t);
                      }
                      const r = [];
                      return (
                        ['navigation', 'paint', 'resource'].forEach(e => {
                          r.push(a.addPerformanceInstrumentationHandler(e, n));
                        }),
                        r.push(
                          a.addLcpInstrumentationHandler(Zt(tn, e)),
                          a.addClsInstrumentationHandler(Zt(rn, e)),
                          a.addFidInstrumentationHandler(Zt(sn, e)),
                          a.addInpInstrumentationHandler(Zt(on, e))
                        ),
                        () => {
                          r.forEach(e => e());
                        }
                      );
                    })(this);
                  }
                  _removeListeners() {
                    try {
                      c.document.removeEventListener(
                        'visibilitychange',
                        this._handleVisibilityChange
                      ),
                        c.removeEventListener('blur', this._handleWindowBlur),
                        c.removeEventListener('focus', this._handleWindowFocus),
                        c.removeEventListener('keydown', this._handleKeyboardEvent),
                        this.clickDetector && this.clickDetector.removeListeners(),
                        this._performanceCleanupCallback && this._performanceCleanupCallback();
                    } catch (e) {
                      this.handleException(e);
                    }
                  }
                  __init() {
                    this._handleVisibilityChange = () => {
                      'visible' === c.document.visibilityState
                        ? this._doChangeToForegroundTasks()
                        : this._doChangeToBackgroundTasks();
                    };
                  }
                  __init2() {
                    this._handleWindowBlur = () => {
                      const e = zt({ category: 'ui.blur' });
                      this._doChangeToBackgroundTasks(e);
                    };
                  }
                  __init3() {
                    this._handleWindowFocus = () => {
                      const e = zt({ category: 'ui.focus' });
                      this._doChangeToForegroundTasks(e);
                    };
                  }
                  __init4() {
                    this._handleKeyboardEvent = e => {
                      Yt(this, e);
                    };
                  }
                  _doChangeToBackgroundTasks(e) {
                    if (!this.session) return;
                    En(this.session, {
                      maxReplayDuration: this._options.maxReplayDuration,
                      sessionIdleExpire: this.timeouts.sessionIdleExpire,
                    }) || (e && this._createCustomBreadcrumb(e), this.conditionalFlush());
                  }
                  _doChangeToForegroundTasks(e) {
                    if (!this.session) return;
                    this.checkAndHandleExpiredSession()
                      ? e && this._createCustomBreadcrumb(e)
                      : xt && At.info('Document has become active, but session has expired');
                  }
                  _updateUserActivity(e = Date.now()) {
                    this._lastActivity = e;
                  }
                  _updateSessionActivity(e = Date.now()) {
                    this.session && ((this.session.lastActivity = e), this._maybeSaveSession());
                  }
                  _createCustomBreadcrumb(e) {
                    this.addUpdate(() => {
                      this.throttledAddEvent({
                        type: je.Custom,
                        timestamp: e.timestamp || 0,
                        data: { tag: 'breadcrumb', payload: e },
                      });
                    });
                  }
                  _addPerformanceEntries() {
                    const e = ((t = this.performanceEntries), t.map(Qt).filter(Boolean)).concat(
                      this.replayPerformanceEntries
                    );
                    var t;
                    return (
                      (this.performanceEntries = []),
                      (this.replayPerformanceEntries = []),
                      Promise.all(Ln(this, e))
                    );
                  }
                  _clearContext() {
                    this._context.errorIds.clear(),
                      this._context.traceIds.clear(),
                      (this._context.urls = []);
                  }
                  _updateInitialTimestampFromEventBuffer() {
                    const { session: e, eventBuffer: t } = this;
                    if (!e || !t || this._requiresManualStart) return;
                    if (e.segmentId) return;
                    const n = t.getEarliestTimestamp();
                    n && n < this._context.initialTimestamp && (this._context.initialTimestamp = n);
                  }
                  _popEventContext() {
                    const e = {
                      initialTimestamp: this._context.initialTimestamp,
                      initialUrl: this._context.initialUrl,
                      errorIds: Array.from(this._context.errorIds),
                      traceIds: Array.from(this._context.traceIds),
                      urls: this._context.urls,
                    };
                    return this._clearContext(), e;
                  }
                  async _runFlush() {
                    const e = this.getSessionId();
                    if (this.session && this.eventBuffer && e) {
                      if (
                        (await this._addPerformanceEntries(),
                        this.eventBuffer &&
                          this.eventBuffer.hasEvents &&
                          (await (async function (e) {
                            try {
                              return Promise.all(Ln(e, [nr(c.performance.memory)]));
                            } catch (e) {
                              return [];
                            }
                          })(this),
                          this.eventBuffer && e === this.getSessionId()))
                      )
                        try {
                          this._updateInitialTimestampFromEventBuffer();
                          const t = Date.now();
                          if (
                            t - this._context.initialTimestamp >
                            this._options.maxReplayDuration + 3e4
                          )
                            throw new Error('Session is too long, not sending replay');
                          const n = this._popEventContext(),
                            r = this.session.segmentId++;
                          this._maybeSaveSession();
                          const s = await this.eventBuffer.finish();
                          await ar({
                            replayId: e,
                            recordingData: s,
                            segmentId: r,
                            eventContext: n,
                            session: this.session,
                            timestamp: t,
                            onError: e => this.handleException(e),
                          });
                        } catch (e) {
                          this.handleException(e), this.stop({ reason: 'sendReplay' });
                          const t = o.getClient();
                          if (t) {
                            const n = e instanceof ir ? 'ratelimit_backoff' : 'send_error';
                            t.recordDroppedEvent(n, 'replay');
                          }
                        }
                    } else xt && At.error('No session or eventBuffer found to flush.');
                  }
                  __init5() {
                    this._flush = async ({ force: e = !1 } = {}) => {
                      if (!this._isEnabled && !e) return;
                      if (!this.checkAndHandleExpiredSession())
                        return void (
                          xt && At.error('Attempting to finish replay event after session expired.')
                        );
                      if (!this.session) return;
                      const t = this.session.started,
                        n = Date.now() - t;
                      this._debouncedFlush.cancel();
                      const r = n < this._options.minReplayDuration,
                        s = n > this._options.maxReplayDuration + 5e3;
                      if (r || s)
                        return (
                          xt &&
                            At.info(
                              `Session duration (${Math.floor(n / 1e3)}s) is too ${r ? 'short' : 'long'}, not sending replay.`
                            ),
                          void (r && this._debouncedFlush())
                        );
                      const o = this.eventBuffer;
                      o &&
                        0 === this.session.segmentId &&
                        !o.hasCheckout &&
                        xt &&
                        At.info('Flushing initial segment without checkout.');
                      const i = !!this._flushLock;
                      this._flushLock || (this._flushLock = this._runFlush());
                      try {
                        await this._flushLock;
                      } catch (e) {
                        this.handleException(e);
                      } finally {
                        (this._flushLock = undefined), i && this._debouncedFlush();
                      }
                    };
                  }
                  _maybeSaveSession() {
                    this.session && this._options.stickySession && wn(this.session);
                  }
                  __init6() {
                    this._onMutationHandler = e => {
                      const t = e.length,
                        n = this._options.mutationLimit,
                        r = n && t > n;
                      if (t > this._options.mutationBreadcrumbLimit || r) {
                        const e = zt({
                          category: 'replay.mutations',
                          data: { count: t, limit: r },
                        });
                        this._createCustomBreadcrumb(e);
                      }
                      return (
                        !r ||
                        (this.stop({
                          reason: 'mutationLimit',
                          forceFlush: 'session' === this.recordingMode,
                        }),
                        !1)
                      );
                    };
                  }
                }
                function dr(e, t) {
                  return [...e, ...t].join(',');
                }
                const fr =
                    'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',
                  hr = ['content-length', 'content-type', 'accept'];
                let pr = !1;
                class mr {
                  static __initStatic() {
                    this.id = 'Replay';
                  }
                  constructor({
                    flushMinDelay: e = 5e3,
                    flushMaxDelay: t = 5500,
                    minReplayDuration: n = 4999,
                    maxReplayDuration: r = 36e5,
                    stickySession: s = !0,
                    useCompression: o = !0,
                    workerUrl: a,
                    _experiments: c = {},
                    maskAllText: u = !0,
                    maskAllInputs: l = !0,
                    blockAllMedia: d = !0,
                    mutationBreadcrumbLimit: f = 750,
                    mutationLimit: h = 1e4,
                    slowClickTimeout: p = 7e3,
                    slowClickIgnoreSelectors: g = [],
                    networkDetailAllowUrls: y = [],
                    networkDetailDenyUrls: b = [],
                    networkCaptureBodies: w = !0,
                    networkRequestHeaders: v = [],
                    networkResponseHeaders: _ = [],
                    mask: E = [],
                    maskAttributes: S = ['title', 'placeholder'],
                    unmask: x = [],
                    block: T = [],
                    unblock: I = [],
                    ignore: k = [],
                    maskFn: A,
                    beforeAddRecordingEvent: C,
                    beforeErrorSampling: B,
                  } = {}) {
                    this.name = mr.id;
                    const O = (function ({ mask: e, unmask: t, block: n, unblock: r, ignore: s }) {
                      return {
                        maskTextSelector: dr(e, ['.sentry-mask', '[data-sentry-mask]']),
                        unmaskTextSelector: dr(t, []),
                        blockSelector: dr(n, [
                          '.sentry-block',
                          '[data-sentry-block]',
                          'base[href="/"]',
                        ]),
                        unblockSelector: dr(r, []),
                        ignoreSelector: dr(s, [
                          '.sentry-ignore',
                          '[data-sentry-ignore]',
                          'input[type="file"]',
                        ]),
                      };
                    })({ mask: E, unmask: x, block: T, unblock: I, ignore: k });
                    if (
                      ((this._recordingOptions = {
                        maskAllInputs: l,
                        maskAllText: u,
                        maskInputOptions: { password: !0 },
                        maskTextFn: A,
                        maskInputFn: A,
                        maskAttributeFn: (e, t, n) =>
                          (function ({
                            el: e,
                            key: t,
                            maskAttributes: n,
                            maskAllText: r,
                            privacyOptions: s,
                            value: o,
                          }) {
                            return r
                              ? s.unmaskTextSelector && e.matches(s.unmaskTextSelector)
                                ? o
                                : n.includes(t) ||
                                    ('value' === t &&
                                      'INPUT' === e.tagName &&
                                      ['submit', 'button'].includes(e.getAttribute('type') || ''))
                                  ? o.replace(/[\S]/g, '*')
                                  : o
                              : o;
                          })({
                            maskAttributes: S,
                            maskAllText: u,
                            privacyOptions: O,
                            key: e,
                            value: t,
                            el: n,
                          }),
                        ...O,
                        slimDOMOptions: 'all',
                        inlineStylesheet: !0,
                        inlineImages: !1,
                        collectFonts: !0,
                        errorHandler: e => {
                          try {
                            e.__rrweb__ = !0;
                          } catch (e) {}
                        },
                      }),
                      (this._initialOptions = {
                        flushMinDelay: e,
                        flushMaxDelay: t,
                        minReplayDuration: Math.min(n, 15e3),
                        maxReplayDuration: Math.min(r, m),
                        stickySession: s,
                        useCompression: o,
                        workerUrl: a,
                        blockAllMedia: d,
                        maskAllInputs: l,
                        maskAllText: u,
                        mutationBreadcrumbLimit: f,
                        mutationLimit: h,
                        slowClickTimeout: p,
                        slowClickIgnoreSelectors: g,
                        networkDetailAllowUrls: y,
                        networkDetailDenyUrls: b,
                        networkCaptureBodies: w,
                        networkRequestHeaders: gr(v),
                        networkResponseHeaders: gr(_),
                        beforeAddRecordingEvent: C,
                        beforeErrorSampling: B,
                        _experiments: c,
                      }),
                      this._initialOptions.blockAllMedia &&
                        (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector
                          ? `${this._recordingOptions.blockSelector},${fr}`
                          : fr),
                      this._isInitialized && i.isBrowser())
                    )
                      throw new Error('Multiple Sentry Session Replay instances are not supported');
                    this._isInitialized = !0;
                  }
                  get _isInitialized() {
                    return pr;
                  }
                  set _isInitialized(e) {
                    pr = e;
                  }
                  afterAllSetup(e) {
                    i.isBrowser() && !this._replay && (this._setup(e), this._initialize(e));
                  }
                  start() {
                    this._replay && this._replay.start();
                  }
                  startBuffering() {
                    this._replay && this._replay.startBuffering();
                  }
                  stop() {
                    return this._replay
                      ? this._replay.stop({ forceFlush: 'session' === this._replay.recordingMode })
                      : Promise.resolve();
                  }
                  flush(e) {
                    return this._replay
                      ? this._replay.isEnabled()
                        ? this._replay.sendBufferedReplayOrFlush(e)
                        : (this._replay.start(), Promise.resolve())
                      : Promise.resolve();
                  }
                  getReplayId() {
                    if (this._replay && this._replay.isEnabled())
                      return this._replay.getSessionId();
                  }
                  _initialize(e) {
                    this._replay &&
                      (this._maybeLoadFromReplayCanvasIntegration(e),
                      this._replay.initializeSampling());
                  }
                  _setup(e) {
                    const t = (function (e, t) {
                      const n = t.getOptions(),
                        r = { sessionSampleRate: 0, errorSampleRate: 0, ...i.dropUndefinedKeys(e) },
                        s = o.parseSampleRate(n.replaysSessionSampleRate),
                        a = o.parseSampleRate(n.replaysOnErrorSampleRate);
                      null == s &&
                        null == a &&
                        i.consoleSandbox(() => {
                          console.warn(
                            'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.'
                          );
                        });
                      null != s && (r.sessionSampleRate = s);
                      null != a && (r.errorSampleRate = a);
                      return r;
                    })(this._initialOptions, e);
                    this._replay = new lr({ options: t, recordingOptions: this._recordingOptions });
                  }
                  _maybeLoadFromReplayCanvasIntegration(e) {
                    try {
                      const t = e.getIntegrationByName('ReplayCanvas');
                      if (!t) return;
                      this._replay._canvas = t.getOptions();
                    } catch (e) {}
                  }
                }
                function gr(e) {
                  return [...hr, ...e.map(e => e.toLowerCase())];
                }
                mr.__initStatic(),
                  (n.getReplay = function () {
                    const e = o.getClient();
                    return e && e.getIntegrationByName('Replay');
                  }),
                  (n.replayIntegration = e => new mr(e));
              };
            };
      },
      {
        package: '@sentry/browser>@sentry-internal/replay',
        file: 'node_modules/@sentry-internal/replay/build/npm/cjs/index.js',
      },
    ],
    [
      3130,
      {
        './debug-build.js': 3131,
        './eventbuilder.js': 3132,
        './helpers.js': 3135,
        './userfeedback.js': 3156,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('./debug-build.js'),
                  i = e('./eventbuilder.js'),
                  a = e('./helpers.js'),
                  c = e('./userfeedback.js');
                class u extends r.BaseClient {
                  constructor(e) {
                    const t = { parentSpanIsAlwaysRootSpan: !0, ...e },
                      n = a.WINDOW.SENTRY_SDK_SOURCE || s.getSDKSource();
                    r.applySdkMetadata(t, 'browser', ['browser'], n),
                      super(t),
                      t.sendClientReports &&
                        a.WINDOW.document &&
                        a.WINDOW.document.addEventListener('visibilitychange', () => {
                          'hidden' === a.WINDOW.document.visibilityState && this._flushOutcomes();
                        });
                  }
                  eventFromException(e, t) {
                    return i.eventFromException(
                      this._options.stackParser,
                      e,
                      t,
                      this._options.attachStacktrace
                    );
                  }
                  eventFromMessage(e, t = 'info', n) {
                    return i.eventFromMessage(
                      this._options.stackParser,
                      e,
                      t,
                      n,
                      this._options.attachStacktrace
                    );
                  }
                  captureUserFeedback(e) {
                    if (!this._isEnabled())
                      return void (
                        o.DEBUG_BUILD &&
                        s.logger.warn('SDK not enabled, will not capture user feedback.')
                      );
                    const t = c.createUserFeedbackEnvelope(e, {
                      metadata: this.getSdkMetadata(),
                      dsn: this.getDsn(),
                      tunnel: this.getOptions().tunnel,
                    });
                    this.sendEnvelope(t);
                  }
                  _prepareEvent(e, t, n) {
                    return (e.platform = e.platform || 'javascript'), super._prepareEvent(e, t, n);
                  }
                }
                n.BrowserClient = u;
              };
            };
      },
      { package: '@sentry/browser', file: 'node_modules/@sentry/browser/build/npm/cjs/client.js' },
    ],
    [
      3131,
      {},
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = 'undefined' == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
                n.DEBUG_BUILD = r;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/debug-build.js',
      },
    ],
    [
      3132,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils');
                function o(e, t) {
                  const n = c(e, t),
                    r = { type: t && t.name, value: l(t) };
                  return (
                    n.length && (r.stacktrace = { frames: n }),
                    r.type === undefined &&
                      '' === r.value &&
                      (r.value = 'Unrecoverable error caught'),
                    r
                  );
                }
                function i(e, t, n, i) {
                  const a = r.getClient(),
                    u = a && a.getOptions().normalizeDepth,
                    l = (function (e) {
                      for (const t in e)
                        if (Object.prototype.hasOwnProperty.call(e, t)) {
                          const n = e[t];
                          if (n instanceof Error) return n;
                        }
                      return undefined;
                    })(t),
                    d = { __serialized__: s.normalizeToSize(t, u) };
                  if (l) return { exception: { values: [o(e, l)] }, extra: d };
                  const f = {
                    exception: {
                      values: [
                        {
                          type: s.isEvent(t)
                            ? t.constructor.name
                            : i
                              ? 'UnhandledRejection'
                              : 'Error',
                          value: h(t, { isUnhandledRejection: i }),
                        },
                      ],
                    },
                    extra: d,
                  };
                  if (n) {
                    const t = c(e, n);
                    t.length && (f.exception.values[0].stacktrace = { frames: t });
                  }
                  return f;
                }
                function a(e, t) {
                  return { exception: { values: [o(e, t)] } };
                }
                function c(e, t) {
                  const n = t.stacktrace || t.stack || '',
                    r = (function (e) {
                      if (e && u.test(e.message)) return 1;
                      return 0;
                    })(t),
                    s = (function (e) {
                      if ('number' == typeof e.framesToPop) return e.framesToPop;
                      return 0;
                    })(t);
                  try {
                    return e(n, r, s);
                  } catch (e) {}
                  return [];
                }
                const u = /Minified React error #\d+;/i;
                function l(e) {
                  const t = e && e.message;
                  return t
                    ? t.error && 'string' == typeof t.error.message
                      ? t.error.message
                      : t
                    : 'No error message';
                }
                function d(e, t, n, r, o) {
                  let c;
                  if (s.isErrorEvent(t) && t.error) {
                    return a(e, t.error);
                  }
                  if (s.isDOMError(t) || s.isDOMException(t)) {
                    const o = t;
                    if ('stack' in t) c = a(e, t);
                    else {
                      const t = o.name || (s.isDOMError(o) ? 'DOMError' : 'DOMException'),
                        i = o.message ? `${t}: ${o.message}` : t;
                      (c = f(e, i, n, r)), s.addExceptionTypeValue(c, i);
                    }
                    return (
                      'code' in o && (c.tags = { ...c.tags, 'DOMException.code': `${o.code}` }), c
                    );
                  }
                  if (s.isError(t)) return a(e, t);
                  if (s.isPlainObject(t) || s.isEvent(t)) {
                    return (c = i(e, t, n, o)), s.addExceptionMechanism(c, { synthetic: !0 }), c;
                  }
                  return (
                    (c = f(e, t, n, r)),
                    s.addExceptionTypeValue(c, `${t}`, undefined),
                    s.addExceptionMechanism(c, { synthetic: !0 }),
                    c
                  );
                }
                function f(e, t, n, r) {
                  const o = {};
                  if (r && n) {
                    const r = c(e, n);
                    r.length &&
                      (o.exception = { values: [{ value: t, stacktrace: { frames: r } }] });
                  }
                  if (s.isParameterizedString(t)) {
                    const { __sentry_template_string__: e, __sentry_template_values__: n } = t;
                    return (o.logentry = { message: e, params: n }), o;
                  }
                  return (o.message = t), o;
                }
                function h(e, { isUnhandledRejection: t }) {
                  const n = s.extractExceptionKeysForMessage(e),
                    r = t ? 'promise rejection' : 'exception';
                  if (s.isErrorEvent(e))
                    return `Event \`ErrorEvent\` captured as ${r} with message \`${e.message}\``;
                  if (s.isEvent(e)) {
                    return `Event \`${(function (e) {
                      try {
                        const t = Object.getPrototypeOf(e);
                        return t ? t.constructor.name : undefined;
                      } catch (e) {}
                    })(e)}\` (type=${e.type}) captured as ${r}`;
                  }
                  return `Object captured as ${r} with keys: ${n}`;
                }
                (n.eventFromException = function (e, t, n, r) {
                  const o = d(e, t, (n && n.syntheticException) || undefined, r);
                  return (
                    s.addExceptionMechanism(o),
                    (o.level = 'error'),
                    n && n.event_id && (o.event_id = n.event_id),
                    s.resolvedSyncPromise(o)
                  );
                }),
                  (n.eventFromMessage = function (e, t, n = 'info', r, o) {
                    const i = f(e, t, (r && r.syntheticException) || undefined, o);
                    return (
                      (i.level = n),
                      r && r.event_id && (i.event_id = r.event_id),
                      s.resolvedSyncPromise(i)
                    );
                  }),
                  (n.eventFromUnknownInput = d),
                  (n.exceptionFromError = o);
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/eventbuilder.js',
      },
    ],
    [
      3133,
      { './utils/lazyLoadIntegration.js': 3157, '@sentry-internal/feedback': 3127 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/feedback'),
                  s = e('./utils/lazyLoadIntegration.js'),
                  o = r.buildFeedbackIntegration({ lazyLoadIntegration: s.lazyLoadIntegration });
                n.feedbackAsyncIntegration = o;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/feedbackAsync.js',
      },
    ],
    [
      3134,
      { './utils/lazyLoadIntegration.js': 3157, '@sentry-internal/feedback': 3127 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/feedback'),
                  s = e('./utils/lazyLoadIntegration.js'),
                  o = r.buildFeedbackIntegration({
                    lazyLoadIntegration: s.lazyLoadIntegration,
                    getModalIntegration: () => r.feedbackModalIntegration,
                    getScreenshotIntegration: () => r.feedbackScreenshotIntegration,
                  });
                n.feedbackSyncIntegration = o;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/feedbackSync.js',
      },
    ],
    [
      3135,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = s.GLOBAL_OBJ;
                let i = 0;
                function a() {
                  i++,
                    setTimeout(() => {
                      i--;
                    });
                }
                (n.WINDOW = o),
                  (n.ignoreNextOnError = a),
                  (n.shouldIgnoreOnError = function () {
                    return i > 0;
                  }),
                  (n.wrap = function e(t, n = {}, o) {
                    if ('function' != typeof t) return t;
                    try {
                      const e = t.__sentry_wrapped__;
                      if (e) return 'function' == typeof e ? e : t;
                      if (s.getOriginalFunction(t)) return t;
                    } catch (e) {
                      return t;
                    }
                    const i = function () {
                      const i = Array.prototype.slice.call(arguments);
                      try {
                        o && 'function' == typeof o && o.apply(this, arguments);
                        const r = i.map(t => e(t, n));
                        return t.apply(this, r);
                      } catch (e) {
                        throw (
                          (a(),
                          r.withScope(t => {
                            t.addEventProcessor(
                              e => (
                                n.mechanism &&
                                  (s.addExceptionTypeValue(e, undefined, undefined),
                                  s.addExceptionMechanism(e, n.mechanism)),
                                (e.extra = { ...e.extra, arguments: i }),
                                e
                              )
                            ),
                              r.captureException(e);
                          }),
                          e)
                        );
                      }
                    };
                    try {
                      for (const e in t)
                        Object.prototype.hasOwnProperty.call(t, e) && (i[e] = t[e]);
                    } catch (e) {}
                    s.markFunctionWrapped(i, t),
                      s.addNonEnumerableProperty(t, '__sentry_wrapped__', i);
                    try {
                      Object.getOwnPropertyDescriptor(i, 'name').configurable &&
                        Object.defineProperty(i, 'name', { get: () => t.name });
                    } catch (e) {}
                    return i;
                  });
              };
            };
      },
      { package: '@sentry/browser', file: 'node_modules/@sentry/browser/build/npm/cjs/helpers.js' },
    ],
    [
      3136,
      {
        './client.js': 3130,
        './eventbuilder.js': 3132,
        './feedbackAsync.js': 3133,
        './feedbackSync.js': 3134,
        './helpers.js': 3135,
        './integrations/breadcrumbs.js': 3137,
        './integrations/browserapierrors.js': 3138,
        './integrations/contextlines.js': 3139,
        './integrations/globalhandlers.js': 3140,
        './integrations/httpclient.js': 3141,
        './integrations/httpcontext.js': 3142,
        './integrations/linkederrors.js': 3143,
        './integrations/reportingobserver.js': 3144,
        './metrics.js': 3145,
        './profiling/integration.js': 3146,
        './sdk.js': 3149,
        './stack-parsers.js': 3150,
        './tracing/browserTracingIntegration.js': 3152,
        './tracing/request.js': 3153,
        './transports/fetch.js': 3154,
        './transports/offline.js': 3155,
        './userfeedback.js': 3156,
        './utils/lazyLoadIntegration.js': 3157,
        '@sentry-internal/feedback': 3127,
        '@sentry-internal/replay': 3129,
        '@sentry-internal/replay-canvas': 3128,
        '@sentry/core': 3175,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('./helpers.js'),
                  o = e('./client.js'),
                  i = e('./transports/fetch.js'),
                  a = e('./stack-parsers.js'),
                  c = e('./eventbuilder.js'),
                  u = e('./userfeedback.js'),
                  l = e('./sdk.js'),
                  d = e('./integrations/breadcrumbs.js'),
                  f = e('./integrations/globalhandlers.js'),
                  h = e('./integrations/httpcontext.js'),
                  p = e('./integrations/linkederrors.js'),
                  m = e('./integrations/browserapierrors.js'),
                  g = e('./utils/lazyLoadIntegration.js'),
                  y = e('./integrations/reportingobserver.js'),
                  b = e('./integrations/httpclient.js'),
                  w = e('./integrations/contextlines.js'),
                  v = e('@sentry-internal/replay'),
                  _ = e('@sentry-internal/replay-canvas'),
                  E = e('./feedbackAsync.js'),
                  S = e('./feedbackSync.js'),
                  x = e('@sentry-internal/feedback'),
                  T = e('./metrics.js'),
                  I = e('./tracing/request.js'),
                  k = e('./tracing/browserTracingIntegration.js'),
                  A = e('./transports/offline.js'),
                  C = e('./profiling/integration.js');
                (n.SDK_VERSION = r.SDK_VERSION),
                  (n.SEMANTIC_ATTRIBUTE_SENTRY_OP = r.SEMANTIC_ATTRIBUTE_SENTRY_OP),
                  (n.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = r.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN),
                  (n.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE =
                    r.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE),
                  (n.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = r.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE),
                  (n.Scope = r.Scope),
                  (n.addBreadcrumb = r.addBreadcrumb),
                  (n.addEventProcessor = r.addEventProcessor),
                  (n.addIntegration = r.addIntegration),
                  (n.addTracingExtensions = r.addTracingExtensions),
                  (n.captureConsoleIntegration = r.captureConsoleIntegration),
                  (n.captureEvent = r.captureEvent),
                  (n.captureException = r.captureException),
                  (n.captureFeedback = r.captureFeedback),
                  (n.captureMessage = r.captureMessage),
                  (n.captureSession = r.captureSession),
                  (n.close = r.close),
                  (n.continueTrace = r.continueTrace),
                  (n.createTransport = r.createTransport),
                  (n.debugIntegration = r.debugIntegration),
                  (n.dedupeIntegration = r.dedupeIntegration),
                  (n.endSession = r.endSession),
                  (n.extraErrorDataIntegration = r.extraErrorDataIntegration),
                  (n.flush = r.flush),
                  (n.functionToStringIntegration = r.functionToStringIntegration),
                  (n.getActiveSpan = r.getActiveSpan),
                  (n.getClient = r.getClient),
                  (n.getCurrentHub = r.getCurrentHub),
                  (n.getCurrentScope = r.getCurrentScope),
                  (n.getGlobalScope = r.getGlobalScope),
                  (n.getIsolationScope = r.getIsolationScope),
                  (n.getRootSpan = r.getRootSpan),
                  (n.getSpanDescendants = r.getSpanDescendants),
                  (n.getSpanStatusFromHttpCode = r.getSpanStatusFromHttpCode),
                  (n.inboundFiltersIntegration = r.inboundFiltersIntegration),
                  (n.isInitialized = r.isInitialized),
                  (n.lastEventId = r.lastEventId),
                  (n.makeMultiplexedTransport = r.makeMultiplexedTransport),
                  (n.moduleMetadataIntegration = r.moduleMetadataIntegration),
                  (n.parameterize = r.parameterize),
                  (n.registerSpanErrorInstrumentation = r.registerSpanErrorInstrumentation),
                  (n.rewriteFramesIntegration = r.rewriteFramesIntegration),
                  (n.sessionTimingIntegration = r.sessionTimingIntegration),
                  (n.setContext = r.setContext),
                  (n.setCurrentClient = r.setCurrentClient),
                  (n.setExtra = r.setExtra),
                  (n.setExtras = r.setExtras),
                  (n.setHttpStatus = r.setHttpStatus),
                  (n.setMeasurement = r.setMeasurement),
                  (n.setTag = r.setTag),
                  (n.setTags = r.setTags),
                  (n.setUser = r.setUser),
                  (n.spanToBaggageHeader = r.spanToBaggageHeader),
                  (n.spanToJSON = r.spanToJSON),
                  (n.spanToTraceHeader = r.spanToTraceHeader),
                  (n.startInactiveSpan = r.startInactiveSpan),
                  (n.startNewTrace = r.startNewTrace),
                  (n.startSession = r.startSession),
                  (n.startSpan = r.startSpan),
                  (n.startSpanManual = r.startSpanManual),
                  (n.thirdPartyErrorFilterIntegration = r.thirdPartyErrorFilterIntegration),
                  (n.withActiveSpan = r.withActiveSpan),
                  (n.withIsolationScope = r.withIsolationScope),
                  (n.withScope = r.withScope),
                  (n.zodErrorsIntegration = r.zodErrorsIntegration),
                  (n.WINDOW = s.WINDOW),
                  (n.BrowserClient = o.BrowserClient),
                  (n.makeFetchTransport = i.makeFetchTransport),
                  (n.chromeStackLineParser = a.chromeStackLineParser),
                  (n.defaultStackLineParsers = a.defaultStackLineParsers),
                  (n.defaultStackParser = a.defaultStackParser),
                  (n.geckoStackLineParser = a.geckoStackLineParser),
                  (n.opera10StackLineParser = a.opera10StackLineParser),
                  (n.opera11StackLineParser = a.opera11StackLineParser),
                  (n.winjsStackLineParser = a.winjsStackLineParser),
                  (n.eventFromException = c.eventFromException),
                  (n.eventFromMessage = c.eventFromMessage),
                  (n.exceptionFromError = c.exceptionFromError),
                  (n.createUserFeedbackEnvelope = u.createUserFeedbackEnvelope),
                  (n.captureUserFeedback = l.captureUserFeedback),
                  (n.forceLoad = l.forceLoad),
                  (n.getDefaultIntegrations = l.getDefaultIntegrations),
                  (n.init = l.init),
                  (n.onLoad = l.onLoad),
                  (n.showReportDialog = l.showReportDialog),
                  (n.breadcrumbsIntegration = d.breadcrumbsIntegration),
                  (n.globalHandlersIntegration = f.globalHandlersIntegration),
                  (n.httpContextIntegration = h.httpContextIntegration),
                  (n.linkedErrorsIntegration = p.linkedErrorsIntegration),
                  (n.browserApiErrorsIntegration = m.browserApiErrorsIntegration),
                  (n.lazyLoadIntegration = g.lazyLoadIntegration),
                  (n.reportingObserverIntegration = y.reportingObserverIntegration),
                  (n.httpClientIntegration = b.httpClientIntegration),
                  (n.contextLinesIntegration = w.contextLinesIntegration),
                  (n.getReplay = v.getReplay),
                  (n.replayIntegration = v.replayIntegration),
                  (n.replayCanvasIntegration = _.replayCanvasIntegration),
                  (n.feedbackAsyncIntegration = E.feedbackAsyncIntegration),
                  (n.feedbackIntegration = S.feedbackSyncIntegration),
                  (n.feedbackSyncIntegration = S.feedbackSyncIntegration),
                  (n.getFeedback = x.getFeedback),
                  (n.sendFeedback = x.sendFeedback),
                  (n.metrics = T.metrics),
                  (n.defaultRequestInstrumentationOptions = I.defaultRequestInstrumentationOptions),
                  (n.instrumentOutgoingRequests = I.instrumentOutgoingRequests),
                  (n.browserTracingIntegration = k.browserTracingIntegration),
                  (n.startBrowserTracingNavigationSpan = k.startBrowserTracingNavigationSpan),
                  (n.startBrowserTracingPageLoadSpan = k.startBrowserTracingPageLoadSpan),
                  (n.makeBrowserOfflineTransport = A.makeBrowserOfflineTransport),
                  (n.browserProfilingIntegration = C.browserProfilingIntegration);
              };
            };
      },
      { package: '@sentry/browser', file: 'node_modules/@sentry/browser/build/npm/cjs/index.js' },
    ],
    [
      3137,
      {
        '../debug-build.js': 3131,
        '../helpers.js': 3135,
        '@sentry-internal/browser-utils': 3100,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/browser-utils'),
                  s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('../debug-build.js'),
                  a = e('../helpers.js'),
                  c = 1024,
                  u = s.defineIntegration((e = {}) => {
                    const t = {
                      console: !0,
                      dom: !0,
                      fetch: !0,
                      history: !0,
                      sentry: !0,
                      xhr: !0,
                      ...e,
                    };
                    return {
                      name: 'Breadcrumbs',
                      setup(e) {
                        t.console &&
                          o.addConsoleInstrumentationHandler(
                            (function (e) {
                              return function (t) {
                                if (s.getClient() !== e) return;
                                const n = {
                                  category: 'console',
                                  data: { arguments: t.args, logger: 'console' },
                                  level: o.severityLevelFromString(t.level),
                                  message: o.safeJoin(t.args, ' '),
                                };
                                if ('assert' === t.level) {
                                  if (!1 !== t.args[0]) return;
                                  (n.message = `Assertion failed: ${o.safeJoin(t.args.slice(1), ' ') || 'console.assert'}`),
                                    (n.data.arguments = t.args.slice(1));
                                }
                                s.addBreadcrumb(n, { input: t.args, level: t.level });
                              };
                            })(e)
                          ),
                          t.dom &&
                            r.addClickKeypressInstrumentationHandler(
                              (function (e, t) {
                                return function (n) {
                                  if (s.getClient() !== e) return;
                                  let r,
                                    a,
                                    u = 'object' == typeof t ? t.serializeAttribute : undefined,
                                    l =
                                      'object' == typeof t && 'number' == typeof t.maxStringLength
                                        ? t.maxStringLength
                                        : undefined;
                                  l &&
                                    l > c &&
                                    (i.DEBUG_BUILD &&
                                      o.logger.warn(
                                        `\`dom.maxStringLength\` cannot exceed 1024, but a value of ${l} was configured. Sentry will use 1024 instead.`
                                      ),
                                    (l = c)),
                                    'string' == typeof u && (u = [u]);
                                  try {
                                    const e = n.event,
                                      t = (function (e) {
                                        return !!e && !!e.target;
                                      })(e)
                                        ? e.target
                                        : e;
                                    (r = o.htmlTreeAsString(t, {
                                      keyAttrs: u,
                                      maxStringLength: l,
                                    })),
                                      (a = o.getComponentName(t));
                                  } catch (e) {
                                    r = '<unknown>';
                                  }
                                  if (0 === r.length) return;
                                  const d = { category: `ui.${n.name}`, message: r };
                                  a && (d.data = { 'ui.component_name': a }),
                                    s.addBreadcrumb(d, {
                                      event: n.event,
                                      name: n.name,
                                      global: n.global,
                                    });
                                };
                              })(e, t.dom)
                            ),
                          t.xhr &&
                            r.addXhrInstrumentationHandler(
                              (function (e) {
                                return function (t) {
                                  if (s.getClient() !== e) return;
                                  const { startTimestamp: n, endTimestamp: i } = t,
                                    a = t.xhr[r.SENTRY_XHR_DATA_KEY];
                                  if (!n || !i || !a) return;
                                  const { method: c, url: u, status_code: l, body: d } = a,
                                    f = { method: c, url: u, status_code: l },
                                    h = {
                                      xhr: t.xhr,
                                      input: d,
                                      startTimestamp: n,
                                      endTimestamp: i,
                                    },
                                    p = o.getBreadcrumbLogLevelFromHttpStatusCode(l);
                                  s.addBreadcrumb(
                                    { category: 'xhr', data: f, type: 'http', level: p },
                                    h
                                  );
                                };
                              })(e)
                            ),
                          t.fetch &&
                            o.addFetchInstrumentationHandler(
                              (function (e) {
                                return function (t) {
                                  if (s.getClient() !== e) return;
                                  const { startTimestamp: n, endTimestamp: r } = t;
                                  if (
                                    r &&
                                    (!t.fetchData.url.match(/sentry_key/) ||
                                      'POST' !== t.fetchData.method)
                                  )
                                    if (t.error) {
                                      const e = t.fetchData,
                                        o = {
                                          data: t.error,
                                          input: t.args,
                                          startTimestamp: n,
                                          endTimestamp: r,
                                        };
                                      s.addBreadcrumb(
                                        {
                                          category: 'fetch',
                                          data: e,
                                          level: 'error',
                                          type: 'http',
                                        },
                                        o
                                      );
                                    } else {
                                      const e = t.response,
                                        i = { ...t.fetchData, status_code: e && e.status },
                                        a = {
                                          input: t.args,
                                          response: e,
                                          startTimestamp: n,
                                          endTimestamp: r,
                                        },
                                        c = o.getBreadcrumbLogLevelFromHttpStatusCode(
                                          i.status_code
                                        );
                                      s.addBreadcrumb(
                                        { category: 'fetch', data: i, type: 'http', level: c },
                                        a
                                      );
                                    }
                                };
                              })(e)
                            ),
                          t.history &&
                            r.addHistoryInstrumentationHandler(
                              (function (e) {
                                return function (t) {
                                  if (s.getClient() !== e) return;
                                  let n = t.from,
                                    r = t.to;
                                  const i = o.parseUrl(a.WINDOW.location.href);
                                  let c = n ? o.parseUrl(n) : undefined;
                                  const u = o.parseUrl(r);
                                  (c && c.path) || (c = i),
                                    i.protocol === u.protocol &&
                                      i.host === u.host &&
                                      (r = u.relative),
                                    i.protocol === c.protocol &&
                                      i.host === c.host &&
                                      (n = c.relative),
                                    s.addBreadcrumb({
                                      category: 'navigation',
                                      data: { from: n, to: r },
                                    });
                                };
                              })(e)
                            ),
                          t.sentry &&
                            e.on(
                              'beforeSendEvent',
                              (function (e) {
                                return function (t) {
                                  s.getClient() === e &&
                                    s.addBreadcrumb(
                                      {
                                        category:
                                          'sentry.' +
                                          ('transaction' === t.type ? 'transaction' : 'event'),
                                        event_id: t.event_id,
                                        level: t.level,
                                        message: o.getEventDescription(t),
                                      },
                                      { event: t }
                                    );
                                };
                              })(e)
                            );
                      },
                    };
                  });
                n.breadcrumbsIntegration = u;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/breadcrumbs.js',
      },
    ],
    [
      3138,
      { '../helpers.js': 3135, '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../helpers.js'),
                  i = [
                    'EventTarget',
                    'Window',
                    'Node',
                    'ApplicationCache',
                    'AudioTrackList',
                    'BroadcastChannel',
                    'ChannelMergerNode',
                    'CryptoOperation',
                    'EventSource',
                    'FileReader',
                    'HTMLUnknownElement',
                    'IDBDatabase',
                    'IDBRequest',
                    'IDBTransaction',
                    'KeyOperation',
                    'MediaController',
                    'MessagePort',
                    'ModalWindow',
                    'Notification',
                    'SVGElementInstance',
                    'Screen',
                    'SharedWorker',
                    'TextTrack',
                    'TextTrackCue',
                    'TextTrackList',
                    'WebSocket',
                    'WebSocketWorker',
                    'Worker',
                    'XMLHttpRequest',
                    'XMLHttpRequestEventTarget',
                    'XMLHttpRequestUpload',
                  ],
                  a = r.defineIntegration((e = {}) => {
                    const t = {
                      XMLHttpRequest: !0,
                      eventTarget: !0,
                      requestAnimationFrame: !0,
                      setInterval: !0,
                      setTimeout: !0,
                      ...e,
                    };
                    return {
                      name: 'BrowserApiErrors',
                      setupOnce() {
                        t.setTimeout && s.fill(o.WINDOW, 'setTimeout', c),
                          t.setInterval && s.fill(o.WINDOW, 'setInterval', c),
                          t.requestAnimationFrame && s.fill(o.WINDOW, 'requestAnimationFrame', u),
                          t.XMLHttpRequest &&
                            'XMLHttpRequest' in o.WINDOW &&
                            s.fill(XMLHttpRequest.prototype, 'send', l);
                        const e = t.eventTarget;
                        if (e) {
                          (Array.isArray(e) ? e : i).forEach(d);
                        }
                      },
                    };
                  });
                function c(e) {
                  return function (...t) {
                    const n = t[0];
                    return (
                      (t[0] = o.wrap(n, {
                        mechanism: {
                          data: { function: s.getFunctionName(e) },
                          handled: !1,
                          type: 'instrument',
                        },
                      })),
                      e.apply(this, t)
                    );
                  };
                }
                function u(e) {
                  return function (t) {
                    return e.apply(this, [
                      o.wrap(t, {
                        mechanism: {
                          data: {
                            function: 'requestAnimationFrame',
                            handler: s.getFunctionName(e),
                          },
                          handled: !1,
                          type: 'instrument',
                        },
                      }),
                    ]);
                  };
                }
                function l(e) {
                  return function (...t) {
                    const n = this;
                    return (
                      ['onload', 'onerror', 'onprogress', 'onreadystatechange'].forEach(e => {
                        e in n &&
                          'function' == typeof n[e] &&
                          s.fill(n, e, function (t) {
                            const n = {
                                mechanism: {
                                  data: { function: e, handler: s.getFunctionName(t) },
                                  handled: !1,
                                  type: 'instrument',
                                },
                              },
                              r = s.getOriginalFunction(t);
                            return (
                              r && (n.mechanism.data.handler = s.getFunctionName(r)), o.wrap(t, n)
                            );
                          });
                      }),
                      e.apply(this, t)
                    );
                  };
                }
                function d(e) {
                  const t = o.WINDOW,
                    n = t[e] && t[e].prototype;
                  n &&
                    n.hasOwnProperty &&
                    n.hasOwnProperty('addEventListener') &&
                    (s.fill(n, 'addEventListener', function (t) {
                      return function (n, r, i) {
                        try {
                          'function' == typeof r.handleEvent &&
                            (r.handleEvent = o.wrap(r.handleEvent, {
                              mechanism: {
                                data: {
                                  function: 'handleEvent',
                                  handler: s.getFunctionName(r),
                                  target: e,
                                },
                                handled: !1,
                                type: 'instrument',
                              },
                            }));
                        } catch (e) {}
                        return t.apply(this, [
                          n,
                          o.wrap(r, {
                            mechanism: {
                              data: {
                                function: 'addEventListener',
                                handler: s.getFunctionName(r),
                                target: e,
                              },
                              handled: !1,
                              type: 'instrument',
                            },
                          }),
                          i,
                        ]);
                      };
                    }),
                    s.fill(n, 'removeEventListener', function (e) {
                      return function (t, n, r) {
                        const s = n;
                        try {
                          const n = s && s.__sentry_wrapped__;
                          n && e.call(this, t, n, r);
                        } catch (e) {}
                        return e.call(this, t, s, r);
                      };
                    }));
                }
                n.browserApiErrorsIntegration = a;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/browserapierrors.js',
      },
    ],
    [
      3139,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = s.GLOBAL_OBJ,
                  i = r.defineIntegration((e = {}) => {
                    const t = null != e.frameContextLines ? e.frameContextLines : 7;
                    return {
                      name: 'ContextLines',
                      processEvent: e =>
                        (function (e, t) {
                          const n = o.document,
                            r = o.location && s.stripUrlQueryAndFragment(o.location.href);
                          if (!n || !r) return e;
                          const i = e.exception && e.exception.values;
                          if (!i || !i.length) return e;
                          const c = n.documentElement.innerHTML;
                          if (!c) return e;
                          const u = ['<!DOCTYPE html>', '<html>', ...c.split('\n'), '</html>'];
                          return (
                            i.forEach(e => {
                              const n = e.stacktrace;
                              n && n.frames && (n.frames = n.frames.map(e => a(e, u, r, t)));
                            }),
                            e
                          );
                        })(e, t),
                    };
                  });
                function a(e, t, n, r) {
                  return e.filename === n && e.lineno && t.length
                    ? (s.addContextToFrame(t, e, r), e)
                    : e;
                }
                (n.applySourceContextToFrame = a), (n.contextLinesIntegration = i);
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/contextlines.js',
      },
    ],
    [
      3140,
      {
        '../debug-build.js': 3131,
        '../eventbuilder.js': 3132,
        '../helpers.js': 3135,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('../eventbuilder.js'),
                  a = e('../helpers.js'),
                  c = r.defineIntegration((e = {}) => {
                    const t = { onerror: !0, onunhandledrejection: !0, ...e };
                    return {
                      name: 'GlobalHandlers',
                      setupOnce() {
                        Error.stackTraceLimit = 50;
                      },
                      setup(e) {
                        t.onerror &&
                          (!(function (e) {
                            s.addGlobalErrorInstrumentationHandler(t => {
                              const { stackParser: n, attachStacktrace: o } = l();
                              if (r.getClient() !== e || a.shouldIgnoreOnError()) return;
                              const { msg: c, url: u, line: d, column: f, error: h } = t,
                                p = (function (e, t, n, r) {
                                  const o = (e.exception = e.exception || {}),
                                    i = (o.values = o.values || []),
                                    a = (i[0] = i[0] || {}),
                                    c = (a.stacktrace = a.stacktrace || {}),
                                    u = (c.frames = c.frames || []),
                                    l = isNaN(parseInt(r, 10)) ? undefined : r,
                                    d = isNaN(parseInt(n, 10)) ? undefined : n,
                                    f = s.isString(t) && t.length > 0 ? t : s.getLocationHref();
                                  0 === u.length &&
                                    u.push({
                                      colno: l,
                                      filename: f,
                                      function: s.UNKNOWN_FUNCTION,
                                      in_app: !0,
                                      lineno: d,
                                    });
                                  return e;
                                })(i.eventFromUnknownInput(n, h || c, undefined, o, !1), u, d, f);
                              (p.level = 'error'),
                                r.captureEvent(p, {
                                  originalException: h,
                                  mechanism: { handled: !1, type: 'onerror' },
                                });
                            });
                          })(e),
                          u('onerror')),
                          t.onunhandledrejection &&
                            (!(function (e) {
                              s.addGlobalUnhandledRejectionInstrumentationHandler(t => {
                                const { stackParser: n, attachStacktrace: o } = l();
                                if (r.getClient() !== e || a.shouldIgnoreOnError()) return;
                                const c = (function (e) {
                                    if (s.isPrimitive(e)) return e;
                                    try {
                                      if ('reason' in e) return e.reason;
                                      if ('detail' in e && 'reason' in e.detail)
                                        return e.detail.reason;
                                    } catch (e) {}
                                    return e;
                                  })(t),
                                  u = s.isPrimitive(c)
                                    ? {
                                        exception: {
                                          values: [
                                            {
                                              type: 'UnhandledRejection',
                                              value: `Non-Error promise rejection captured with value: ${String(c)}`,
                                            },
                                          ],
                                        },
                                      }
                                    : i.eventFromUnknownInput(n, c, undefined, o, !0);
                                (u.level = 'error'),
                                  r.captureEvent(u, {
                                    originalException: c,
                                    mechanism: { handled: !1, type: 'onunhandledrejection' },
                                  });
                              });
                            })(e),
                            u('onunhandledrejection'));
                      },
                    };
                  });
                function u(e) {
                  o.DEBUG_BUILD && s.logger.log(`Global Handler attached: ${e}`);
                }
                function l() {
                  const e = r.getClient();
                  return (e && e.getOptions()) || { stackParser: () => [], attachStacktrace: !1 };
                }
                n.globalHandlersIntegration = c;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/globalhandlers.js',
      },
    ],
    [
      3141,
      {
        '../debug-build.js': 3131,
        '@sentry-internal/browser-utils': 3100,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/browser-utils'),
                  s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('../debug-build.js'),
                  a = s.defineIntegration((e = {}) => {
                    const t = {
                      failedRequestStatusCodes: [[500, 599]],
                      failedRequestTargets: [/.*/],
                      ...e,
                    };
                    return {
                      name: 'HttpClient',
                      setup(e) {
                        !(function (e, t) {
                          if (!o.supportsNativeFetch()) return;
                          o.addFetchInstrumentationHandler(n => {
                            if (s.getClient() !== e) return;
                            const { response: r, args: o } = n,
                              [i, a] = o;
                            r &&
                              (function (e, t, n, r) {
                                if (d(e, n.status, n.url)) {
                                  const e = (function (e, t) {
                                    if (!t && e instanceof Request) return e;
                                    if (e instanceof Request && e.bodyUsed) return e;
                                    return new Request(e, t);
                                  })(t, r);
                                  let o, i, a, u;
                                  h() && (([o, a] = c('Cookie', e)), ([i, u] = c('Set-Cookie', n)));
                                  const l = f({
                                    url: e.url,
                                    method: e.method,
                                    status: n.status,
                                    requestHeaders: o,
                                    responseHeaders: i,
                                    requestCookies: a,
                                    responseCookies: u,
                                  });
                                  s.captureEvent(l);
                                }
                              })(t, i, r, a);
                          });
                        })(e, t),
                          (function (e, t) {
                            if (!('XMLHttpRequest' in o.GLOBAL_OBJ)) return;
                            r.addXhrInstrumentationHandler(n => {
                              if (s.getClient() !== e) return;
                              const a = n.xhr,
                                c = a[r.SENTRY_XHR_DATA_KEY];
                              if (!c) return;
                              const { method: u, request_headers: p } = c;
                              try {
                                !(function (e, t, n, r) {
                                  if (d(e, t.status, t.responseURL)) {
                                    let e, a, c;
                                    if (h()) {
                                      try {
                                        const e =
                                          t.getResponseHeader('Set-Cookie') ||
                                          t.getResponseHeader('set-cookie') ||
                                          undefined;
                                        e && (a = l(e));
                                      } catch (e) {
                                        i.DEBUG_BUILD &&
                                          o.logger.log(
                                            'Could not extract cookies from response headers'
                                          );
                                      }
                                      try {
                                        c = (function (e) {
                                          const t = e.getAllResponseHeaders();
                                          if (!t) return {};
                                          return t.split('\r\n').reduce((e, t) => {
                                            const [n, r] = t.split(': ');
                                            return n && r && (e[n] = r), e;
                                          }, {});
                                        })(t);
                                      } catch (e) {
                                        i.DEBUG_BUILD &&
                                          o.logger.log('Could not extract headers from response');
                                      }
                                      e = r;
                                    }
                                    const u = f({
                                      url: t.responseURL,
                                      method: n,
                                      status: t.status,
                                      requestHeaders: e,
                                      responseHeaders: c,
                                      responseCookies: a,
                                    });
                                    s.captureEvent(u);
                                  }
                                })(t, a, u, p);
                              } catch (e) {
                                i.DEBUG_BUILD &&
                                  o.logger.warn(
                                    'Error while extracting response event form XHR response',
                                    e
                                  );
                              }
                            });
                          })(e, t);
                      },
                    };
                  });
                function c(e, t) {
                  const n = (function (e) {
                    const t = {};
                    return (
                      e.forEach((e, n) => {
                        t[n] = e;
                      }),
                      t
                    );
                  })(t.headers);
                  let r;
                  try {
                    const t = n[e] || n[e.toLowerCase()] || undefined;
                    t && (r = l(t));
                  } catch (t) {
                    i.DEBUG_BUILD && o.logger.log(`Could not extract cookies from header ${e}`);
                  }
                  return [n, r];
                }
                function u(e) {
                  if (e) {
                    const t = e['Content-Length'] || e['content-length'];
                    if (t) return parseInt(t, 10);
                  }
                  return undefined;
                }
                function l(e) {
                  return e.split('; ').reduce((e, t) => {
                    const [n, r] = t.split('=');
                    return n && r && (e[n] = r), e;
                  }, {});
                }
                function d(e, t, n) {
                  return (
                    (function (e, t) {
                      return e.some(e => ('number' == typeof e ? e === t : t >= e[0] && t <= e[1]));
                    })(e.failedRequestStatusCodes, t) &&
                    ((r = e.failedRequestTargets),
                    (o = n),
                    r.some(e => ('string' == typeof e ? o.includes(e) : e.test(o)))) &&
                    !s.isSentryRequestUrl(n, s.getClient())
                  );
                  var r, o;
                }
                function f(e) {
                  const t = `HTTP Client Error with status code: ${e.status}`,
                    n = {
                      message: t,
                      exception: { values: [{ type: 'Error', value: t }] },
                      request: {
                        url: e.url,
                        method: e.method,
                        headers: e.requestHeaders,
                        cookies: e.requestCookies,
                      },
                      contexts: {
                        response: {
                          status_code: e.status,
                          headers: e.responseHeaders,
                          cookies: e.responseCookies,
                          body_size: u(e.responseHeaders),
                        },
                      },
                    };
                  return o.addExceptionMechanism(n, { type: 'http.client', handled: !1 }), n;
                }
                function h() {
                  const e = s.getClient();
                  return !!e && Boolean(e.getOptions().sendDefaultPii);
                }
                n.httpClientIntegration = a;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/httpclient.js',
      },
    ],
    [
      3142,
      { '../helpers.js': 3135, '@sentry/core': 3175 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('../helpers.js'),
                  o = r.defineIntegration(() => ({
                    name: 'HttpContext',
                    preprocessEvent(e) {
                      if (!s.WINDOW.navigator && !s.WINDOW.location && !s.WINDOW.document) return;
                      const t =
                          (e.request && e.request.url) ||
                          (s.WINDOW.location && s.WINDOW.location.href),
                        { referrer: n } = s.WINDOW.document || {},
                        { userAgent: r } = s.WINDOW.navigator || {},
                        o = {
                          ...(e.request && e.request.headers),
                          ...(n && { Referer: n }),
                          ...(r && { 'User-Agent': r }),
                        },
                        i = { ...e.request, ...(t && { url: t }), headers: o };
                      e.request = i;
                    },
                  }));
                n.httpContextIntegration = o;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/httpcontext.js',
      },
    ],
    [
      3143,
      { '../eventbuilder.js': 3132, '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../eventbuilder.js'),
                  i = r.defineIntegration((e = {}) => {
                    const t = e.limit || 5,
                      n = e.key || 'cause';
                    return {
                      name: 'LinkedErrors',
                      preprocessEvent(e, r, i) {
                        const a = i.getOptions();
                        s.applyAggregateErrorsToEvent(
                          o.exceptionFromError,
                          a.stackParser,
                          a.maxValueLength,
                          n,
                          t,
                          e,
                          r
                        );
                      },
                    };
                  });
                n.linkedErrorsIntegration = i;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/linkederrors.js',
      },
    ],
    [
      3144,
      { '@sentry/core': 3175, '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = s.GLOBAL_OBJ,
                  i = new WeakMap(),
                  a = r.defineIntegration((e = {}) => {
                    const t = e.types || ['crash', 'deprecation', 'intervention'];
                    function n(e) {
                      if (i.has(r.getClient()))
                        for (const t of e)
                          r.withScope(e => {
                            e.setExtra('url', t.url);
                            const n = `ReportingObserver [${t.type}]`;
                            let s = 'No details available';
                            if (t.body) {
                              const n = {};
                              for (const e in t.body) n[e] = t.body[e];
                              if ((e.setExtra('body', n), 'crash' === t.type)) {
                                const e = t.body;
                                s = [e.crashId || '', e.reason || ''].join(' ').trim() || s;
                              } else {
                                s = t.body.message || s;
                              }
                            }
                            r.captureMessage(`${n}: ${s}`);
                          });
                    }
                    return {
                      name: 'ReportingObserver',
                      setupOnce() {
                        if (!s.supportsReportingObserver()) return;
                        new o.ReportingObserver(n, { buffered: !0, types: t }).observe();
                      },
                      setup(e) {
                        i.set(e, !0);
                      },
                    };
                  });
                n.reportingObserverIntegration = a;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/integrations/reportingobserver.js',
      },
    ],
    [
      3145,
      { '@sentry/core': 3175 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core');
                const s = {
                  increment: function (e, t = 1, n) {
                    r.metrics.increment(r.BrowserMetricsAggregator, e, t, n);
                  },
                  distribution: function (e, t, n) {
                    r.metrics.distribution(r.BrowserMetricsAggregator, e, t, n);
                  },
                  set: function (e, t, n) {
                    r.metrics.set(r.BrowserMetricsAggregator, e, t, n);
                  },
                  gauge: function (e, t, n) {
                    r.metrics.gauge(r.BrowserMetricsAggregator, e, t, n);
                  },
                  timing: function (e, t, n = 'second', s) {
                    return r.metrics.timing(r.BrowserMetricsAggregator, e, t, n, s);
                  },
                };
                n.metrics = s;
              };
            };
      },
      { package: '@sentry/browser', file: 'node_modules/@sentry/browser/build/npm/cjs/metrics.js' },
    ],
    [
      3146,
      {
        '../debug-build.js': 3131,
        './startProfileForSpan.js': 3147,
        './utils.js': 3148,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('./startProfileForSpan.js'),
                  a = e('./utils.js'),
                  c = r.defineIntegration(() => ({
                    name: 'BrowserProfiling',
                    setup(e) {
                      const t = r.getActiveSpan(),
                        n = t && r.getRootSpan(t);
                      n &&
                        a.isAutomatedPageLoadSpan(n) &&
                        a.shouldProfileSpan(n) &&
                        i.startProfileForSpan(n),
                        e.on('spanStart', e => {
                          e === r.getRootSpan(e) &&
                            a.shouldProfileSpan(e) &&
                            i.startProfileForSpan(e);
                        }),
                        e.on('beforeEnvelope', e => {
                          if (!a.getActiveProfilesCount()) return;
                          const t = a.findProfiledTransactionsFromEnvelope(e);
                          if (!t.length) return;
                          const n = [];
                          for (const e of t) {
                            const t = e && e.contexts,
                              r = t && t.profile && t.profile.profile_id,
                              i = t && t.profile && t.profile.start_timestamp;
                            if ('string' != typeof r) {
                              o.DEBUG_BUILD &&
                                s.logger.log(
                                  '[Profiling] cannot find profile for a span without a profile context'
                                );
                              continue;
                            }
                            if (!r) {
                              o.DEBUG_BUILD &&
                                s.logger.log(
                                  '[Profiling] cannot find profile for a span without a profile context'
                                );
                              continue;
                            }
                            t && t.profile && delete t.profile;
                            const c = a.takeProfileFromGlobalCache(r);
                            if (!c) {
                              o.DEBUG_BUILD &&
                                s.logger.log(
                                  `[Profiling] Could not retrieve profile for span: ${r}`
                                );
                              continue;
                            }
                            const u = a.createProfilingEvent(r, i, c, e);
                            u && n.push(u);
                          }
                          a.addProfilesToEnvelope(e, n);
                        });
                    },
                  }));
                n.browserProfilingIntegration = c;
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/profiling/integration.js',
      },
    ],
    [
      3147,
      {
        '../debug-build.js': 3131,
        '../helpers.js': 3135,
        './utils.js': 3148,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('../helpers.js'),
                  a = e('./utils.js');
                n.startProfileForSpan = function (e) {
                  let t;
                  a.isAutomatedPageLoadSpan(e) && (t = 1e3 * s.timestampInSeconds());
                  const n = a.startJSSelfProfile();
                  if (!n) return;
                  o.DEBUG_BUILD &&
                    s.logger.log(
                      `[Profiling] started profiling span: ${r.spanToJSON(e).description}`
                    );
                  const c = s.uuid4();
                  async function u() {
                    if (e && n)
                      return n
                        .stop()
                        .then(t => {
                          l && (i.WINDOW.clearTimeout(l), (l = undefined)),
                            o.DEBUG_BUILD &&
                              s.logger.log(
                                `[Profiling] stopped profiling of span: ${r.spanToJSON(e).description}`
                              ),
                            t
                              ? a.addProfileToGlobalCache(c, t)
                              : o.DEBUG_BUILD &&
                                s.logger.log(
                                  `[Profiling] profiler returned null profile for: ${r.spanToJSON(e).description}`,
                                  'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started'
                                );
                        })
                        .catch(e => {
                          o.DEBUG_BUILD &&
                            s.logger.log('[Profiling] error while stopping profiler:', e);
                        });
                  }
                  r.getCurrentScope().setContext('profile', { profile_id: c, start_timestamp: t });
                  let l = i.WINDOW.setTimeout(() => {
                    o.DEBUG_BUILD &&
                      s.logger.log(
                        '[Profiling] max profile duration elapsed, stopping profiling for:',
                        r.spanToJSON(e).description
                      ),
                      u();
                  }, a.MAX_PROFILE_DURATION_MS);
                  const d = e.end.bind(e);
                  e.end = function () {
                    return e
                      ? (u().then(
                          () => {
                            d();
                          },
                          () => {
                            d();
                          }
                        ),
                        e)
                      : d();
                  };
                };
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/profiling/startProfileForSpan.js',
      },
    ],
    [
      3148,
      {
        '../debug-build.js': 3131,
        '../helpers.js': 3135,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('../helpers.js'),
                  a = 1e6,
                  c = String(0),
                  u = 'main';
                let l = '',
                  d = '',
                  f = '',
                  h = (i.WINDOW.navigator && i.WINDOW.navigator.userAgent) || '',
                  p = '';
                const m =
                  (i.WINDOW.navigator && i.WINDOW.navigator.language) ||
                  (i.WINDOW.navigator &&
                    i.WINDOW.navigator.languages &&
                    i.WINDOW.navigator.languages[0]) ||
                  '';
                const g = i.WINDOW.navigator && i.WINDOW.navigator.userAgentData;
                var y;
                function b(e) {
                  return (function (e) {
                    return !('thread_metadata' in e);
                  })(e)
                    ? v(e)
                    : e;
                }
                function w(e, t, n, a) {
                  if ('transaction' !== a.type)
                    throw new TypeError(
                      'Profiling events may only be attached to transactions, this should never occur.'
                    );
                  if (n === undefined || null === n)
                    throw new TypeError(
                      `Cannot construct profiling event envelope without a valid profile. Got ${n} instead.`
                    );
                  const u = (function (e) {
                      const t = e && e.contexts && e.contexts.trace && e.contexts.trace.trace_id;
                      return (
                        'string' == typeof t &&
                          32 !== t.length &&
                          o.DEBUG_BUILD &&
                          s.logger.log(`[Profiling] Invalid traceId: ${t} on profiled event`),
                        'string' != typeof t ? '' : t
                      );
                    })(a),
                    g = b(n),
                    y =
                      t ||
                      ('number' == typeof a.start_timestamp
                        ? 1e3 * a.start_timestamp
                        : 1e3 * s.timestampInSeconds()),
                    w =
                      'number' == typeof a.timestamp
                        ? 1e3 * a.timestamp
                        : 1e3 * s.timestampInSeconds();
                  return {
                    event_id: e,
                    timestamp: new Date(y).toISOString(),
                    platform: 'javascript',
                    version: '1',
                    release: a.release || '',
                    environment: a.environment || r.DEFAULT_ENVIRONMENT,
                    runtime: { name: 'javascript', version: i.WINDOW.navigator.userAgent },
                    os: { name: l, version: d, build_number: h },
                    device: {
                      locale: m,
                      model: p,
                      manufacturer: h,
                      architecture: f,
                      is_emulator: !1,
                    },
                    debug_meta: { images: E(n.resources) },
                    profile: g,
                    transactions: [
                      {
                        name: a.transaction || '',
                        id: a.event_id || s.uuid4(),
                        trace_id: u,
                        active_thread_id: c,
                        relative_start_ns: '0',
                        relative_end_ns: (1e6 * (w - y)).toFixed(0),
                      },
                    ],
                  };
                }
                function v(e) {
                  let t = undefined,
                    n = 0;
                  const r = {
                      samples: [],
                      stacks: [],
                      frames: [],
                      thread_metadata: { [c]: { name: u } },
                    },
                    o = e.samples[0];
                  if (!o) return r;
                  const i = o.timestamp,
                    l =
                      'number' == typeof performance.timeOrigin
                        ? performance.timeOrigin
                        : s.browserPerformanceTimeOrigin || 0,
                    d = l - (s.browserPerformanceTimeOrigin || l);
                  return (
                    e.samples.forEach((s, o) => {
                      if (s.stackId === undefined)
                        return (
                          t === undefined && ((t = n), (r.stacks[t] = []), n++),
                          void (r.samples[o] = {
                            elapsed_since_start_ns: ((s.timestamp + d - i) * a).toFixed(0),
                            stack_id: t,
                            thread_id: c,
                          })
                        );
                      let u = e.stacks[s.stackId];
                      const l = [];
                      for (; u; ) {
                        l.push(u.frameId);
                        const t = e.frames[u.frameId];
                        t &&
                          r.frames[u.frameId] === undefined &&
                          (r.frames[u.frameId] = {
                            function: t.name,
                            abs_path:
                              'number' == typeof t.resourceId
                                ? e.resources[t.resourceId]
                                : undefined,
                            lineno: t.line,
                            colno: t.column,
                          }),
                          (u = u.parentId === undefined ? undefined : e.stacks[u.parentId]);
                      }
                      const f = {
                        elapsed_since_start_ns: ((s.timestamp + d - i) * a).toFixed(0),
                        stack_id: n,
                        thread_id: c,
                      };
                      (r.stacks[n] = l), (r.samples[o] = f), n++;
                    }),
                    r
                  );
                }
                'object' == typeof (y = g) &&
                  null !== y &&
                  'getHighEntropyValues' in y &&
                  g
                    .getHighEntropyValues([
                      'architecture',
                      'model',
                      'platform',
                      'platformVersion',
                      'fullVersionList',
                    ])
                    .then(e => {
                      if (
                        ((l = e.platform || ''),
                        (f = e.architecture || ''),
                        (p = e.model || ''),
                        (d = e.platformVersion || ''),
                        e.fullVersionList && e.fullVersionList.length > 0)
                      ) {
                        const t = e.fullVersionList[e.fullVersionList.length - 1];
                        h = `${t.brand} ${t.version}`;
                      }
                    })
                    .catch(e => {});
                const _ = new WeakMap();
                function E(e) {
                  const t = s.GLOBAL_OBJ._sentryDebugIds;
                  if (!t) return [];
                  const n = r.getClient(),
                    o = n && n.getOptions(),
                    i = o && o.stackParser;
                  if (!i) return [];
                  let a;
                  const c = _.get(i);
                  c ? (a = c) : ((a = new Map()), _.set(i, a));
                  const u = Object.keys(t).reduce((e, n) => {
                      let r;
                      const s = a.get(n);
                      s ? (r = s) : ((r = i(n)), a.set(n, r));
                      for (let s = r.length - 1; s >= 0; s--) {
                        const o = r[s],
                          i = o && o.filename;
                        if (o && i) {
                          e[i] = t[n];
                          break;
                        }
                      }
                      return e;
                    }, {}),
                    l = [];
                  for (const t of e)
                    t && u[t] && l.push({ type: 'sourcemap', code_file: t, debug_id: u[t] });
                  return l;
                }
                function S(e) {
                  return ('number' != typeof e && 'boolean' != typeof e) ||
                    ('number' == typeof e && isNaN(e))
                    ? (o.DEBUG_BUILD &&
                        s.logger.warn(
                          `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`
                        ),
                      !1)
                    : !0 === e ||
                        !1 === e ||
                        !(e < 0 || e > 1) ||
                        (o.DEBUG_BUILD &&
                          s.logger.warn(
                            `[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${e}.`
                          ),
                        !1);
                }
                let x = !1;
                const T = new Map();
                (n.MAX_PROFILE_DURATION_MS = 3e4),
                  (n.addProfileToGlobalCache = function (e, t) {
                    if ((T.set(e, t), T.size > 30)) {
                      const e = T.keys().next().value;
                      T.delete(e);
                    }
                  }),
                  (n.addProfilesToEnvelope = function (e, t) {
                    if (!t.length) return e;
                    for (const n of t) e[1].push([{ type: 'profile' }, n]);
                    return e;
                  }),
                  (n.applyDebugMetadata = E),
                  (n.convertJSSelfProfileToSampledFormat = v),
                  (n.createProfilePayload = w),
                  (n.createProfilingEvent = function (e, t, n, r) {
                    return (function (e) {
                      return e.samples.length < 2
                        ? (o.DEBUG_BUILD &&
                            s.logger.log(
                              '[Profiling] Discarding profile because it contains less than 2 samples'
                            ),
                          !1)
                        : !!e.frames.length ||
                            (o.DEBUG_BUILD &&
                              s.logger.log(
                                '[Profiling] Discarding profile because it contains no frames'
                              ),
                            !1);
                    })(n)
                      ? w(e, t, n, r)
                      : null;
                  }),
                  (n.enrichWithThreadInformation = b),
                  (n.findProfiledTransactionsFromEnvelope = function (e) {
                    const t = [];
                    return (
                      s.forEachEnvelopeItem(e, (e, n) => {
                        if ('transaction' === n)
                          for (let n = 1; n < e.length; n++) {
                            const r = e[n];
                            r &&
                              r.contexts &&
                              r.contexts.profile &&
                              r.contexts.profile.profile_id &&
                              t.push(e[n]);
                          }
                      }),
                      t
                    );
                  }),
                  (n.getActiveProfilesCount = function () {
                    return T.size;
                  }),
                  (n.isAutomatedPageLoadSpan = function (e) {
                    return 'pageload' === r.spanToJSON(e).op;
                  }),
                  (n.isValidSampleRate = S),
                  (n.shouldProfileSpan = function (e) {
                    if (x)
                      return (
                        o.DEBUG_BUILD &&
                          s.logger.log(
                            '[Profiling] Profiling has been disabled for the duration of the current user session.'
                          ),
                        !1
                      );
                    if (!e.isRecording())
                      return (
                        o.DEBUG_BUILD &&
                          s.logger.log(
                            '[Profiling] Discarding profile because transaction was not sampled.'
                          ),
                        !1
                      );
                    const t = r.getClient(),
                      n = t && t.getOptions();
                    if (!n)
                      return (
                        o.DEBUG_BUILD &&
                          s.logger.log('[Profiling] Profiling disabled, no options found.'),
                        !1
                      );
                    const i = n.profilesSampleRate;
                    return S(i)
                      ? i
                        ? !!(!0 === i || Math.random() < i) ||
                          (o.DEBUG_BUILD &&
                            s.logger.log(
                              `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(i)})`
                            ),
                          !1)
                        : (o.DEBUG_BUILD &&
                            s.logger.log(
                              '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0'
                            ),
                          !1)
                      : (o.DEBUG_BUILD &&
                          s.logger.warn(
                            '[Profiling] Discarding profile because of invalid sample rate.'
                          ),
                        !1);
                  }),
                  (n.startJSSelfProfile = function () {
                    const e = i.WINDOW.Profiler;
                    if ('function' != typeof e)
                      return void (
                        o.DEBUG_BUILD &&
                        s.logger.log(
                          '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.'
                        )
                      );
                    const t = Math.floor(3e3);
                    try {
                      return new e({ sampleInterval: 10, maxBufferSize: t });
                    } catch (e) {
                      o.DEBUG_BUILD &&
                        (s.logger.log(
                          "[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header."
                        ),
                        s.logger.log('[Profiling] Disabling profiling for current user session.')),
                        (x = !0);
                    }
                  }),
                  (n.takeProfileFromGlobalCache = function (e) {
                    const t = T.get(e);
                    return t && T.delete(e), t;
                  });
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/profiling/utils.js',
      },
    ],
    [
      3149,
      {
        './client.js': 3130,
        './debug-build.js': 3131,
        './helpers.js': 3135,
        './integrations/breadcrumbs.js': 3137,
        './integrations/browserapierrors.js': 3138,
        './integrations/globalhandlers.js': 3140,
        './integrations/httpcontext.js': 3142,
        './integrations/linkederrors.js': 3143,
        './stack-parsers.js': 3150,
        './transports/fetch.js': 3154,
        '@sentry-internal/browser-utils': 3100,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('@sentry-internal/browser-utils'),
                  i = e('./client.js'),
                  a = e('./debug-build.js'),
                  c = e('./helpers.js'),
                  u = e('./integrations/breadcrumbs.js'),
                  l = e('./integrations/browserapierrors.js'),
                  d = e('./integrations/globalhandlers.js'),
                  f = e('./integrations/httpcontext.js'),
                  h = e('./integrations/linkederrors.js'),
                  p = e('./stack-parsers.js'),
                  m = e('./transports/fetch.js');
                function g(e) {
                  return [
                    r.inboundFiltersIntegration(),
                    r.functionToStringIntegration(),
                    l.browserApiErrorsIntegration(),
                    u.breadcrumbsIntegration(),
                    d.globalHandlersIntegration(),
                    h.linkedErrorsIntegration(),
                    r.dedupeIntegration(),
                    f.httpContextIntegration(),
                  ];
                }
                (n.captureUserFeedback = function (e) {
                  const t = r.getClient();
                  t && t.captureUserFeedback(e);
                }),
                  (n.forceLoad = function () {}),
                  (n.getDefaultIntegrations = g),
                  (n.init = function (e = {}) {
                    const t = (function (e = {}) {
                      const t = {
                        defaultIntegrations: g(),
                        release:
                          'string' == typeof __SENTRY_RELEASE__
                            ? __SENTRY_RELEASE__
                            : c.WINDOW.SENTRY_RELEASE && c.WINDOW.SENTRY_RELEASE.id
                              ? c.WINDOW.SENTRY_RELEASE.id
                              : undefined,
                        autoSessionTracking: !0,
                        sendClientReports: !0,
                      };
                      return (
                        null == e.defaultIntegrations && delete e.defaultIntegrations,
                        { ...t, ...e }
                      );
                    })(e);
                    if (
                      (function () {
                        const e = void 0 !== c.WINDOW.window && c.WINDOW;
                        if (!e) return !1;
                        const t = e[e.chrome ? 'chrome' : 'browser'],
                          n = t && t.runtime && t.runtime.id,
                          r = (c.WINDOW.location && c.WINDOW.location.href) || '',
                          s =
                            !!n &&
                            c.WINDOW === c.WINDOW.top &&
                            [
                              'chrome-extension:',
                              'moz-extension:',
                              'ms-browser-extension:',
                              'safari-web-extension:',
                            ].some(e => r.startsWith(`${e}//`)),
                          o = void 0 !== e.nw;
                        return !!n && !s && !o;
                      })()
                    )
                      return void s.consoleSandbox(() => {
                        console.error(
                          '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/'
                        );
                      });
                    a.DEBUG_BUILD &&
                      (s.supportsFetch() ||
                        s.logger.warn(
                          'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.'
                        ));
                    const n = {
                        ...t,
                        stackParser: s.stackParserFromStackParserOptions(
                          t.stackParser || p.defaultStackParser
                        ),
                        integrations: r.getIntegrationsToSetup(t),
                        transport: t.transport || m.makeFetchTransport,
                      },
                      u = r.initAndBind(i.BrowserClient, n);
                    return (
                      t.autoSessionTracking &&
                        (function () {
                          if (void 0 === c.WINDOW.document)
                            return void (
                              a.DEBUG_BUILD &&
                              s.logger.warn(
                                'Session tracking in non-browser environment with @sentry/browser is not supported.'
                              )
                            );
                          r.startSession({ ignoreDuration: !0 }),
                            r.captureSession(),
                            o.addHistoryInstrumentationHandler(({ from: e, to: t }) => {
                              e !== undefined &&
                                e !== t &&
                                (r.startSession({ ignoreDuration: !0 }), r.captureSession());
                            });
                        })(),
                      u
                    );
                  }),
                  (n.onLoad = function (e) {
                    e();
                  }),
                  (n.showReportDialog = function (e = {}) {
                    if (!c.WINDOW.document)
                      return void (
                        a.DEBUG_BUILD &&
                        s.logger.error('Global document not defined in showReportDialog call')
                      );
                    const t = r.getCurrentScope(),
                      n = t.getClient(),
                      o = n && n.getDsn();
                    if (!o)
                      return void (
                        a.DEBUG_BUILD &&
                        s.logger.error('DSN not configured for showReportDialog call')
                      );
                    if ((t && (e.user = { ...t.getUser(), ...e.user }), !e.eventId)) {
                      const t = r.lastEventId();
                      t && (e.eventId = t);
                    }
                    const i = c.WINDOW.document.createElement('script');
                    (i.async = !0),
                      (i.crossOrigin = 'anonymous'),
                      (i.src = r.getReportDialogEndpoint(o, e)),
                      e.onLoad && (i.onload = e.onLoad);
                    const { onClose: u } = e;
                    if (u) {
                      const e = t => {
                        if ('__sentry_reportdialog_closed__' === t.data)
                          try {
                            u();
                          } finally {
                            c.WINDOW.removeEventListener('message', e);
                          }
                      };
                      c.WINDOW.addEventListener('message', e);
                    }
                    const l = c.WINDOW.document.head || c.WINDOW.document.body;
                    l
                      ? l.appendChild(i)
                      : a.DEBUG_BUILD &&
                        s.logger.error(
                          'Not injecting report dialog. No injection point found in HTML'
                        );
                  });
              };
            };
      },
      { package: '@sentry/browser', file: 'node_modules/@sentry/browser/build/npm/cjs/sdk.js' },
    ],
    [
      3150,
      { '@sentry/utils': 3256 },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/utils');
                function s(e, t, n, s) {
                  const o = {
                    filename: e,
                    function: '<anonymous>' === t ? r.UNKNOWN_FUNCTION : t,
                    in_app: !0,
                  };
                  return n !== undefined && (o.lineno = n), s !== undefined && (o.colno = s), o;
                }
                const o = /^\s*at (\S+?)(?::(\d+))(?::(\d+))\s*$/i,
                  i =
                    /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
                  a = /\((\S*)(?::(\d+))(?::(\d+))\)/,
                  c = [
                    30,
                    e => {
                      const t = o.exec(e);
                      if (t) {
                        const [, e, n, o] = t;
                        return s(e, r.UNKNOWN_FUNCTION, +n, +o);
                      }
                      const n = i.exec(e);
                      if (n) {
                        if (n[2] && 0 === n[2].indexOf('eval')) {
                          const e = a.exec(n[2]);
                          e && ((n[2] = e[1]), (n[3] = e[2]), (n[4] = e[3]));
                        }
                        const [e, t] = v(n[1] || r.UNKNOWN_FUNCTION, n[2]);
                        return s(t, e, n[3] ? +n[3] : undefined, n[4] ? +n[4] : undefined);
                      }
                    },
                  ],
                  u =
                    /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
                  l = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
                  d = [
                    50,
                    e => {
                      const t = u.exec(e);
                      if (t) {
                        if (t[3] && t[3].indexOf(' > eval') > -1) {
                          const e = l.exec(t[3]);
                          e && ((t[1] = t[1] || 'eval'), (t[3] = e[1]), (t[4] = e[2]), (t[5] = ''));
                        }
                        let e = t[3],
                          n = t[1] || r.UNKNOWN_FUNCTION;
                        return (
                          ([n, e] = v(n, e)),
                          s(e, n, t[4] ? +t[4] : undefined, t[5] ? +t[5] : undefined)
                        );
                      }
                    },
                  ],
                  f =
                    /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
                  h = [
                    40,
                    e => {
                      const t = f.exec(e);
                      return t
                        ? s(t[2], t[1] || r.UNKNOWN_FUNCTION, +t[3], t[4] ? +t[4] : undefined)
                        : undefined;
                    },
                  ],
                  p = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,
                  m = [
                    10,
                    e => {
                      const t = p.exec(e);
                      return t ? s(t[2], t[3] || r.UNKNOWN_FUNCTION, +t[1]) : undefined;
                    },
                  ],
                  g =
                    / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i,
                  y = [
                    20,
                    e => {
                      const t = g.exec(e);
                      return t
                        ? s(t[5], t[3] || t[4] || r.UNKNOWN_FUNCTION, +t[1], +t[2])
                        : undefined;
                    },
                  ],
                  b = [c, d],
                  w = r.createStackParser(...b),
                  v = (e, t) => {
                    const n = -1 !== e.indexOf('safari-extension'),
                      s = -1 !== e.indexOf('safari-web-extension');
                    return n || s
                      ? [
                          -1 !== e.indexOf('@') ? e.split('@')[0] : r.UNKNOWN_FUNCTION,
                          n ? `safari-extension:${t}` : `safari-web-extension:${t}`,
                        ]
                      : [e, t];
                  };
                (n.chromeStackLineParser = c),
                  (n.defaultStackLineParsers = b),
                  (n.defaultStackParser = w),
                  (n.geckoStackLineParser = d),
                  (n.opera10StackLineParser = m),
                  (n.opera11StackLineParser = y),
                  (n.winjsStackLineParser = h);
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/stack-parsers.js',
      },
    ],
    [
      3151,
      {
        '../debug-build.js': 3131,
        '../helpers.js': 3135,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry/core'),
                  s = e('@sentry/utils'),
                  o = e('../debug-build.js'),
                  i = e('../helpers.js');
                n.registerBackgroundTabDetection = function () {
                  i.WINDOW && i.WINDOW.document
                    ? i.WINDOW.document.addEventListener('visibilitychange', () => {
                        const e = r.getActiveSpan();
                        if (!e) return;
                        const t = r.getRootSpan(e);
                        if (i.WINDOW.document.hidden && t) {
                          const e = 'cancelled',
                            { op: n, status: i } = r.spanToJSON(t);
                          o.DEBUG_BUILD &&
                            s.logger.log(
                              `[Tracing] Transaction: ${e} -> since tab moved to the background, op: ${n}`
                            ),
                            i || t.setStatus({ code: r.SPAN_STATUS_ERROR, message: e }),
                            t.setAttribute('sentry.cancellation_reason', 'document.hidden'),
                            t.end();
                        }
                      })
                    : o.DEBUG_BUILD &&
                      s.logger.warn(
                        '[Tracing] Could not set up background tab detection due to lack of global document'
                      );
                };
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/tracing/backgroundtab.js',
      },
    ],
    [
      3152,
      {
        '../debug-build.js': 3131,
        '../helpers.js': 3135,
        './backgroundtab.js': 3151,
        './request.js': 3153,
        '@sentry-internal/browser-utils': 3100,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/browser-utils'),
                  s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('../debug-build.js'),
                  a = e('../helpers.js'),
                  c = e('./backgroundtab.js'),
                  u = e('./request.js'),
                  l = 'BrowserTracing',
                  d = {
                    ...s.TRACING_DEFAULTS,
                    instrumentNavigation: !0,
                    instrumentPageLoad: !0,
                    markBackgroundSpan: !0,
                    enableLongTask: !0,
                    enableLongAnimationFrame: !0,
                    enableInp: !0,
                    _experiments: {},
                    ...u.defaultRequestInstrumentationOptions,
                  };
                function f(e, t, n) {
                  e.emit('startPageLoadSpan', t, n), s.getCurrentScope().setTransactionName(t.name);
                  const r = s.getActiveSpan();
                  return 'pageload' === (r && s.spanToJSON(r).op) ? r : undefined;
                }
                function h(e, t) {
                  s.getIsolationScope().setPropagationContext(o.generatePropagationContext()),
                    s.getCurrentScope().setPropagationContext(o.generatePropagationContext()),
                    e.emit('startNavigationSpan', t),
                    s.getCurrentScope().setTransactionName(t.name);
                  const n = s.getActiveSpan();
                  return 'navigation' === (n && s.spanToJSON(n).op) ? n : undefined;
                }
                function p(e) {
                  const t = o.getDomElement(`meta[name=${e}]`);
                  return t ? t.getAttribute('content') : undefined;
                }
                (n.BROWSER_TRACING_INTEGRATION_ID = l),
                  (n.browserTracingIntegration = (e = {}) => {
                    s.registerSpanErrorInstrumentation();
                    const {
                        enableInp: t,
                        enableLongTask: n,
                        enableLongAnimationFrame: m,
                        _experiments: { enableInteractions: g, enableStandaloneClsSpans: y },
                        beforeStartSpan: b,
                        idleTimeout: w,
                        finalTimeout: v,
                        childSpanTimeout: _,
                        markBackgroundSpan: E,
                        traceFetch: S,
                        traceXHR: x,
                        shouldCreateSpanForRequest: T,
                        enableHTTPTimings: I,
                        instrumentPageLoad: k,
                        instrumentNavigation: A,
                      } = { ...d, ...e },
                      C = r.startTrackingWebVitals({ recordClsStandaloneSpans: y || !1 });
                    t && r.startTrackingINP(),
                      m &&
                      o.GLOBAL_OBJ.PerformanceObserver &&
                      PerformanceObserver.supportedEntryTypes &&
                      PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')
                        ? r.startTrackingLongAnimationFrames()
                        : n && r.startTrackingLongTasks(),
                      g && r.startTrackingInteractions();
                    const B = { name: undefined, source: undefined };
                    function O(e, t) {
                      const n = 'pageload' === t.op,
                        o = b ? b(t) : t,
                        i = o.attributes || {};
                      t.name !== o.name &&
                        ((i[s.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom'), (o.attributes = i)),
                        (B.name = o.name),
                        (B.source = i[s.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]);
                      const c = s.startIdleSpan(o, {
                        idleTimeout: w,
                        finalTimeout: v,
                        childSpanTimeout: _,
                        disableAutoFinish: n,
                        beforeSpanEnd: e => {
                          C(), r.addPerformanceEntries(e, { recordClsOnPageloadSpan: !y });
                        },
                      });
                      function u() {
                        ['interactive', 'complete'].includes(a.WINDOW.document.readyState) &&
                          e.emit('idleSpanEnableAutoFinish', c);
                      }
                      return (
                        n &&
                          a.WINDOW.document &&
                          (a.WINDOW.document.addEventListener('readystatechange', () => {
                            u();
                          }),
                          u()),
                        c
                      );
                    }
                    return {
                      name: l,
                      afterAllSetup(e) {
                        let n,
                          l = a.WINDOW.location && a.WINDOW.location.href;
                        e.on('startNavigationSpan', t => {
                          s.getClient() === e &&
                            (n &&
                              !s.spanToJSON(n).timestamp &&
                              (i.DEBUG_BUILD &&
                                o.logger.log(
                                  `[Tracing] Finishing current root span with op: ${s.spanToJSON(n).op}`
                                ),
                              n.end()),
                            (n = O(e, { op: 'navigation', ...t })));
                        }),
                          e.on('startPageLoadSpan', (t, r = {}) => {
                            if (s.getClient() !== e) return;
                            n &&
                              !s.spanToJSON(n).timestamp &&
                              (i.DEBUG_BUILD &&
                                o.logger.log(
                                  `[Tracing] Finishing current root span with op: ${s.spanToJSON(n).op}`
                                ),
                              n.end());
                            const a = r.sentryTrace || p('sentry-trace'),
                              c = r.baggage || p('baggage'),
                              u = o.propagationContextFromHeaders(a, c);
                            s.getCurrentScope().setPropagationContext(u),
                              (n = O(e, { op: 'pageload', ...t }));
                          }),
                          e.on('spanEnd', e => {
                            const t = s.spanToJSON(e).op;
                            if (e !== s.getRootSpan(e) || ('navigation' !== t && 'pageload' !== t))
                              return;
                            const n = s.getCurrentScope(),
                              r = n.getPropagationContext();
                            n.setPropagationContext({
                              ...r,
                              sampled: r.sampled !== undefined ? r.sampled : s.spanIsSampled(e),
                              dsc: r.dsc || s.getDynamicSamplingContextFromSpan(e),
                            });
                          }),
                          a.WINDOW.location &&
                            (k &&
                              f(e, {
                                name: a.WINDOW.location.pathname,
                                startTime: o.browserPerformanceTimeOrigin
                                  ? o.browserPerformanceTimeOrigin / 1e3
                                  : undefined,
                                attributes: {
                                  [s.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',
                                  [s.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',
                                },
                              }),
                            A &&
                              r.addHistoryInstrumentationHandler(({ to: t, from: n }) => {
                                n === undefined && l && -1 !== l.indexOf(t)
                                  ? (l = undefined)
                                  : n !== t &&
                                    ((l = undefined),
                                    h(e, {
                                      name: a.WINDOW.location.pathname,
                                      attributes: {
                                        [s.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',
                                        [s.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]:
                                          'auto.navigation.browser',
                                      },
                                    }));
                              })),
                          E && c.registerBackgroundTabDetection(),
                          g &&
                            (function (e, t, n, r) {
                              let c;
                              const u = () => {
                                const a = 'ui.action.click',
                                  u = s.getActiveSpan(),
                                  l = u && s.getRootSpan(u);
                                if (l) {
                                  const e = s.spanToJSON(l).op;
                                  if (['navigation', 'pageload'].includes(e))
                                    return (
                                      i.DEBUG_BUILD &&
                                        o.logger.warn(
                                          `[Tracing] Did not create ${a} span because a pageload or navigation span is in progress.`
                                        ),
                                      undefined
                                    );
                                }
                                if (
                                  (c &&
                                    (c.setAttribute(
                                      s.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON,
                                      'interactionInterrupted'
                                    ),
                                    c.end(),
                                    (c = undefined)),
                                  !r.name)
                                )
                                  return (
                                    i.DEBUG_BUILD &&
                                      o.logger.warn(
                                        `[Tracing] Did not create ${a} transaction because _latestRouteName is missing.`
                                      ),
                                    undefined
                                  );
                                c = s.startIdleSpan(
                                  {
                                    name: r.name,
                                    op: a,
                                    attributes: {
                                      [s.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: r.source || 'url',
                                    },
                                  },
                                  { idleTimeout: e, finalTimeout: t, childSpanTimeout: n }
                                );
                              };
                              a.WINDOW.document &&
                                addEventListener('click', u, { once: !1, capture: !0 });
                            })(w, v, _, B),
                          t && r.registerInpInteractionListener(),
                          u.instrumentOutgoingRequests(e, {
                            traceFetch: S,
                            traceXHR: x,
                            tracePropagationTargets: e.getOptions().tracePropagationTargets,
                            shouldCreateSpanForRequest: T,
                            enableHTTPTimings: I,
                          });
                      },
                    };
                  }),
                  (n.getMetaContent = p),
                  (n.startBrowserTracingNavigationSpan = h),
                  (n.startBrowserTracingPageLoadSpan = f);
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/tracing/browserTracingIntegration.js',
      },
    ],
    [
      3153,
      {
        '../helpers.js': 3135,
        '@sentry-internal/browser-utils': 3100,
        '@sentry/core': 3175,
        '@sentry/utils': 3256,
      },
      function () {
        with (this.scopeTerminator)
          with (this.globalThis)
            return function () {
              'use strict';
              return function (e, t, n) {
                Object.defineProperty(n, '__esModule', { value: !0 });
                const r = e('@sentry-internal/browser-utils'),
                  s = e('@sentry/core'),
                  o = e('@sentry/utils'),
                  i = e('../helpers.js'),
                  a = new WeakMap(),
                  c = new Map(),
                  u = { traceFetch: !0, traceXHR: !0, enableHTTPTimings: !0 };
                function l(e) {
                  const { url: t } = s.spanToJSON(e).data || {};
                  if (!t || 'string' != typeof t) return;
                  const n = r.addPerformanceInstrumentationHandler('resource', ({ entries: r }) => {
                    r.forEach(r => {
                      if (
                        (function (e) {
                          return (
                            'resource' === e.entryType &&
                            'initiatorType' in e &&
                            'string' == typeof e.nextHopProtocol &&
                            ('fetch' === e.initiatorType || 'xmlhttprequest' === e.initiatorType)
                          );
                        })(r) &&
                        r.name.endsWith(t)
                      ) {
                        (function (e) {
                          const { name: t, version: n } = d(e.nextHopProtocol),
                            r = [];
                          if (
                            (r.push(['network.protocol.version', n], ['network.protocol.name', t]),
                            !o.browserPerformanceTimeOrigin)
                          )
                            return r;
                          return [
                            ...r,
                            ['http.request.redirect_start', f(e.redirectStart)],
                            ['http.request.fetch_start', f(e.fetchStart)],
                            ['http.request.domain_lookup_start', f(e.domainLookupStart)],
                            ['http.request.domain_lookup_end', f(e.domainLookupEnd)],
                            ['http.request.connect_start', f(e.connectStart)],
                            ['http.request.secure_connection_start', f(e.secureConnectionStart)],
                            ['http.request.connection_end', f(e.connectEnd)],
                            ['http.request.request_start', f(e.requestStart)],
                            ['http.request.response_start', f(e.responseStart)],
                            ['http.request.response_end', f(e.responseEnd)],
                          ];
                        })(r).forEach(t => e.setAttribute(...t)),
                          setTimeout(n);
                      }
                    });
                  });
                }
                function d(e) {
                  let t = 'unknown',
                    n = 'unknown',
                    r = '';
                  for (const s of e) {
                    if ('/' === s) {
                      [t, n] = e.split('/');
                      break;
                    }
                    if (!isNaN(Number(s))) {
                      (t = 'h' === r ? 'http' : r), (n = e.split(r)[1]);
                      break;
                    }
                    r += s;
                  }
                  return r === e && (t = r), { name: t, version: n };
                }
                function f(e = 0) {
                  return ((o.browserPerformanceTimeOrigin || performance.timeOrigin) + e) / 1e3;
                }
                function h(e, t) {
                  const n = i.WINDOW.location && i.WINDOW.location.href;
                  if (n) {
                    let r, s;
                    try {
                      (r = new URL(e, n)), (s = new URL(n).origin);
                    } catch (e) {
                      return !1;
                    }
                    const i = r.origin === s;
                    return t
                      ? o.stringMatchesSomePattern(r.toString(), t) ||
                          (i && o.stringMatchesSomePattern(r.pathname, t))
                      : i;
                  }
                  {
                    const n = !!e.match(/^\/(?!\/)/);
                    return t ? o.stringMatchesSomePattern(e, t) : n;
                  }
                }
                function p(e, t, n, i) {
                  const a = e.xhr,
                    c = a && a[r.SENTRY_XHR_DATA_KEY];
                  if (!a || a.__sentry_own_request__ || !c) return undefined;
                  const u = s.hasTracingEnabled() && t(c.url);
                  if (e.endTimestamp && u) {
                    const e = a.__sentry_xhr_span_id__;
                    if (!e) return;
                    const t = i[e];
                    return (
                      t &&
                        c.status_code !== undefined &&
                        (s.setHttpStatus(t, c.status_code), t.end(), delete i[e]),
                      undefined
                    );
                  }
                  const l = m(c.url),
                    d = l ? o.parseUrl(l).host : undefined,
                    f = !!s.getActiveSpan(),
                    h =
                      u && f
                        ? s.startInactiveSpan({
                            name: `${c.method} ${c.url}`,
                            attributes: {
                              type: 'xhr',
                              'http.method': c.method,
                              'http.url': l,
                              url: c.url,
                              'server.address': d,
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',
                              [s.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',
                            },
                          })
                        : new s.SentryNonRecordingSpan();
                  (a.__sentry_xhr_span_id__ = h.spanContext().spanId),
                    (i[a.__sentry_xhr_span_id__] = h);
                  const p = s.getClient();
                  return (
                    a.setRequestHeader &&
                      n(c.url) &&
                      p &&
                      (function (e, t, n) {
                        const r = s.getCurrentScope(),
                          i = s.getIsolationScope(),
                          {
                            traceId: a,
                            spanId: c,
                            sampled: u,
                            dsc: l,
                          } = { ...i.getPropagationContext(), ...r.getPropagationContext() },
                          d =
                            n && s.hasTracingEnabled()
                              ? s.spanToTraceHeader(n)
                              : o.generateSentryTraceHeader(a, c, u),
                          f = o.dynamicSamplingContextToSentryBaggageHeader(
                            l ||
                              (n
                                ? s.getDynamicSamplingContextFromSpan(n)
                                : s.getDynamicSamplingContextFromClient(a, t))
                          );
                        !(function (e, t, n) {
                          try {
                            e.setRequestHeader('sentry-trace', t),
                              n && e.setRequestHeader(o.BAGGAGE_HEADER_NAME, n);
                          } catch (e) {}
                        })(e, d, f);
                      })(a, p, s.hasTracingEnabled() && f ? h : undefined),
                    h
                  );
                }
                function m(e) {
                  try {
                    return new URL(e, i.WINDOW.location.origin).href;
                  } catch (e) {
                    return undefined;
                  }
                }
                (n.defaultRequestInstrumentationOptions = u),
                  (n.extractNetworkProtocol = d),
                  (n.instrumentOutgoingRequests = function (e, t) {
                    const {
                        traceFetch: n,
                        traceXHR: i,
                        shouldCreateSpanForRequest: d,
                        enableHTTPTimings: f,
                        tracePropagationTargets: g,
                      } = { traceFetch: u.traceFetch, traceXHR: u.traceXHR, ...t },
                      y = 'function' == typeof d ? d : e => !0,
                      b = e => h(e, g),
                      w = {};
                    n &&
                      (e.addEventProcessor(
                        e => (
                          'transaction' === e.type &&
                            e.spans &&
                            e.spans.forEach(e => {
                              if ('http.client' === e.op) {
                                const t = c.get(e.span_id);
                                t && ((e.timestamp = t / 1e3), c.delete(e.span_id));
                              }
                            }),
                          e
                        )
                      ),
                      o.addFetchEndInstrumentationHandler(e => {
                        if (e.response) {
                          const t = a.get(e.response);
                          t && e.endTimestamp && c.set(t, e.endTimestamp);
                        }
                      }),
                      o.addFetchInstrumentationHandler(e => {
                        const t = s.instrumentFetchRequest(e, y, b, w);
                        if (
                          (e.response &&
                            e.fetchData.__span &&
                            a.set(e.response, e.fetchData.__span),
                          t)
                        ) {
                          const n = m(e.fetchData.url),
                            r = n ? o.parseUrl(n).host : undefined;
                          t.setAttributes({ 'http.url': n, 'server.address': r });
                        }
                        f && t && l(t);
                      })),
                      i &&
                        r.addXhrInstrumentationHandler(e => {
                          const t = p(e, y, b, w);
                          f && t && l(t);
                        });
                  }),
                  (n.shouldAttachHeaders = h),
                  (n.xhrCallback = p);
              };
            };
      },
      {
        package: '@sentry/browser',
        file: 'node_modules/@sentry/browser/build/npm/cjs/tracing/request.js',
      },
    ],
  ],
  [],
  {}
);
