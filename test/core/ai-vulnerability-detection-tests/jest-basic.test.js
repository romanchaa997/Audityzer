/**
 * Basic Jest functionality test
 */

describe('Jest Basic Functionality', () => {
  it('should run basic assertions', () => {
    expect(1 + 1).toBe(2);
    expect('hello').toBe('hello');
    expect([1, 2, 3]).toEqual([1, 2, 3]);
  });

  it('should handle async operations', async () => {
    const promise = Promise.resolve('success');
    await expect(promise).resolves.toBe('success');
  });

  it('should handle objects', () => {
    const obj = { name: 'test', value: 42 };
    expect(obj).toHaveProperty('name');
    expect(obj).toHaveProperty('value', 42);
    expect(obj).toEqual(expect.objectContaining({
      name: expect.any(String),
      value: expect.any(Number)
    }));
  });

  it('should handle arrays', () => {
    const arr = [1, 2, 3, 4, 5];
    expect(arr).toHaveLength(5);
    expect(arr).toContain(3);
    expect(arr).toEqual(expect.arrayContaining([1, 2, 3]));
  });

  it('should handle functions', () => {
    const mockFn = jest.fn();
    mockFn('test');

    expect(mockFn).toHaveBeenCalled();
    expect(mockFn).toHaveBeenCalledWith('test');
    expect(mockFn).toHaveBeenCalledTimes(1);
  });
});