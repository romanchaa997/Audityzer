{
  "name": "audityzer",
  "version": "1.1.3",
  "description": "Comprehensive Web3 security testing toolkit for DeFi applications and smart contracts",
  "type": "module",
  "main": "src/index.js",
  "bin": {
    "audityzer": "bin/audityzer.js"
  },
  "files": [
    "bin/",
    "lib/",
    "templates/",
    "src/core/",
    "src/cli/",
    "README.md",
    "LICENSE"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/romanchaa997/audityzer.git"
  },
  "homepage": "https://github.com/romanchaa997/audityzer#readme",
  "dependencies": {
    "axios": "^1.9.0",
    "chalk": "^5.4.1",
    "commander": "^12.1.0",
    "dotenv": "^16.5.0",
    "fs-extra": "^11.3.0",
    "open": "^10.1.2",
    "openai": "^4.98.0",
    "path": "^0.12.7",
    "prettier": "^3.5.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "@lhci/cli": "^0.14.0",
    "@mswjs/data": "^0.16.2",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.29",
    "@types/react": "^19.1.4",
    "@types/react-dom": "^19.1.5",
    "@vitest/coverage-v8": "^3.2.0",
    "@vitest/ui": "^3.2.0",
    "autoprefixer": "^10.4.21",
    "c8": "^10.1.3",
    "cross-env": "^7.0.3",
    "eslint": "^9.28.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.5",
    "globals": "^16.2.0",
    "happy-dom": "^17.5.6",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.6.0",
    "msw": "^2.8.7",
    "nyc": "^17.1.0",
    "playwright": "^1.52.0",
    "postcss": "^8.5.3",
    "puppeteer": "^21.10.0",
    "rimraf": "^6.0.1",
    "serve": "^14.2.4",
    "sharp": "^0.32.6",
    "supertest": "^7.1.1",
    "tailwindcss": "^4.1.7",
    "ts-jest": "^29.3.4",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.33.0",
    "vite": "^6.3.5",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.0"
  },
  "peerDependencies": {
    "ethers": "^5.7.2"
  },
  "scripts": {
    "start": "node bin/audityzer.js start",
    "dev": "vite",
    "build": "vite build && npm run lint && npm run type-check && npm run build:core",
    "build:core": "node scripts/build.js",
    "build:docs": "node scripts/build-docs.js",
    "stop": "node bin/audityzer.js stop",
    "status": "node bin/audityzer.js status",
    "restart": "node bin/audityzer.js restart",
    "demo": "node scripts/create-devforge-demo.js",
    "cli": "node src/cli/index.js",
    "test": "vitest run",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:playwright": "cross-env MOCK_MODE=true TARGET_URL=http://localhost:5000 playwright test",
    "test:security": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/*.test.ts\"",
    "test:phishing": "playwright test examples/security-bug-tests/eth-sign-phishing.test.ts",
    "test:reentrancy": "playwright test examples/security-bug-tests/reentrancy-attack.test.ts",
    "test:e2e": "npm run test:playwright",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:vuln:reentrancy": "playwright test examples/security-bug-tests/reentrancy-attack.test.ts",
    "test:vuln:oracle": "playwright test examples/security-bug-tests/oracle-manipulation.test.ts",
    "test:vuln:front-running": "playwright test examples/security-bug-tests/front-running-detection.test.ts",
    "test:vuln:phishing": "playwright test examples/security-bug-tests/eth-sign-phishing.test.ts",
    "test:vuln:signature-replay": "playwright test examples/security-bug-tests/signature-replay-attack.test.ts",
    "test:vuln:access-control": "playwright test examples/security-bug-tests/access-control-vulnerability.test.ts",
    "test:vuln:flash-loan": "playwright test examples/security-bug-tests/flash-loan-attack.test.ts",
    "test:aa": "playwright test \"examples/security-bug-tests/aa-*.test.js\"",
    "test:aa:userop": "playwright test examples/security-bug-tests/aa-userop-basic.test.js",
    "test:aa:paymaster": "playwright test examples/security-bug-tests/aa-paymaster-gas.test.js",
    "test:aa:bundler": "playwright test examples/security-bug-tests/aa-bundler-attack.test.js",
    "test:aa:simulation": "playwright test examples/security-bug-tests/aa-simulation-mode.test.js",
    "run:aa": "node src/cli/index.js run test-target --aa --report",
    "run:aa:pimlico": "node src/cli/index.js run test-target --pimlico --report",
    "report": "node scripts/generate-security-report.js",
    "report:generate": "node scripts/generate-security-report.js",
    "report:html": "node scripts/generate-security-report.js -f html",
    "report:md": "node scripts/generate-security-report.js -f md",
    "report:upload": "node scripts/generate-security-report.js -c",
    "report:html:upload": "node scripts/generate-security-report.js -f html -c",
    "report:md:upload": "node scripts/generate-security-report.js -f md -c",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "lint:ci": "eslint . --ext .ts,.tsx,.js,.jsx --max-warnings=0",
    "format": "prettier --write '**/*.{js,jsx,ts,tsx,json,css,md}'",
    "format:check": "prettier --check '**/*.{js,jsx,ts,tsx,json,css,md}'",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "clean": "rimraf dist build coverage .nyc_output",
    "clean:deps": "rimraf node_modules package-lock.json",
    "reinstall": "npm run clean:deps && npm install",
    "audit:fix": "npm audit fix",
    "audit:check": "npm audit --audit-level=moderate",
    "security:check": "npm run audit:check && npm run lint:ci",
    "version:patch": "npm version patch",
    "version:minor": "npm version minor",
    "version:major": "npm version major",
    "release": "npm run build && npm run test && npm run security:check",
    "deploy:staging": "node scripts/deploy.js --env=staging",
    "deploy:production": "node scripts/deploy.js --env=production",
    "docker:build": "docker build -t audityzer .",
    "docker:run": "docker run -p 5000:5000 audityzer",
    "docker:dev": "docker-compose up --build",
    "docker:start": "bash scripts/docker-setup.sh start",
    "docker:stop": "bash scripts/docker-setup.sh stop",
    "setup": "node scripts/setup.js",
    "setup:dev": "npm install && npm run setup",
    "setup:windows": "powershell -ExecutionPolicy Bypass -File scripts\\setup-windows.ps1",
    "setup:unix": "bash scripts/setup-unix.sh",
    "firebase:setup": "node -e \"require('fs').writeFileSync('.firebase-config.json', JSON.stringify(require('./.firebase-config.example.json'), null, 2))\"",
    "analytics:setup": "node scripts/setup-analytics.js",
    "analytics:dashboard": "npx serve -s analytics",
    "install:deps": "npm install --legacy-peer-deps",
    "install:playwright": "npx playwright install chromium",
    "postinstall": "node scripts/fix-dependencies.js",
    "precommit": "npm run lint:fix && npm run format && npm run type-check",
    "prepush": "npm run test && npm run security:check",
    "ci": "npm run lint:ci && npm run type-check && npm run test:coverage && npm run security:check"
  },
  "keywords": [
    "web3",
    "dapp",
    "testing",
    "security",
    "blockchain",
    "ethereum",
    "defi",
    "fuzzing",
    "vulnerability",
    "auditing",
    "cross-chain"
  ],
  "author": "Romanchaa997",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0"
  },
  "resolutions": {
    "puppeteer": "^21.10.0",
    "@mermaid-js/mermaid-cli": "^10.6.1",
    "cookie": "^0.7.0",
    "lodash.set": "^4.3.2",
    "@sentry/node": "^7.75.0",
    "tar-fs": "^2.1.1",
    "ws": "^8.17.1",
    "@puppeteer/browsers": "^1.4.2",
    "puppeteer-core": "^22.11.2"
  },
  "overrides": {
    "tar-fs": "^2.1.1",
    "ws": "^8.17.1",
    "lodash.set": "^4.3.2",
    "@sentry/node": "^7.75.0",
    "cookie": "^0.7.0",
    "raven": {
      "cookie": "^0.7.0"
    },
    "@lhci/cli": {
      "@lhci/utils": {
        "lighthouse": {
          "lodash.set": "^4.3.2",
          "raven": {
            "cookie": "^0.7.0"
          }
        }
      },
      "lighthouse": {
        "lodash.set": "^4.3.2",
        "raven": {
          "cookie": "^0.7.0"
        }
      }
    }
  },
  "types": "src/types/index.d.ts"
}
