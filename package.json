{
  "name": "devforge",
  "version": "1.0.0",
  "description": "Intelligent development server with auto port management for web3 security testing",
  "main": "src/core/index.js",
  "bin": {
    "devforge": "bin/devforge.js"
  },
  "files": [
    "bin/",
    "lib/",
    "templates/",
    "src/core/",
    "src/cli/",
    "README.md",
    "LICENSE"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/YourUser/audityzer.git"
  },
  "homepage": "https://github.com/YourUser/audityzer#readme",
  "dependencies": {
    "@mermaid-js/mermaid-cli": "^10.6.1",
    "axios": "^1.6.8",
    "chalk": "^4.1.2",
    "commander": "^11.1.0",
    "dotenv": "^16.5.0",
    "firebase": "^11.7.1",
    "fs-extra": "^11.2.0",
    "path": "^0.12.7",
    "prettier": "^3.2.4"
  },
  "devDependencies": {
    "cross-env": "^7.0.3",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "glob": "^10.4.5",
    "hardhat": "^2.0.0",
    "lighthouse": "^12.6.0",
    "@lhci/cli": "^0.13.1",
    "puppeteer": "^21.10.0",
    "serve": "^14.2.4",
    "sharp": "^0.32.6",
    "typescript": "^5.8.3"
  },
  "peerDependencies": {
    "@playwright/test": "^1.41.2",
    "ethers": "^5.7.2"
  },
  "scripts": {
    "test": "jest",
    "dev": "vite",
    "dev:serve": "node bin/devforge.js start",
    "devforge:start": "node bin/devforge.js start",
    "devforge:stop": "node bin/devforge.js stop",
    "devforge:status": "node bin/devforge.js status",
    "devforge:restart": "node bin/devforge.js restart",
    "devforge:demo": "node scripts/create-devforge-demo.js",
    "stop:serve": "node bin/devforge.js stop",
    "server:status": "node bin/devforge.js status",
    "server:restart": "powershell -ExecutionPolicy Bypass -File \"scripts\\server-manager.ps1\" -Action restart -Port 5000",
    "build": "vite build",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:ci": "eslint --max-warnings=0 .",
    "format": "prettier --write '**/*.{js,jsx,ts,tsx,json,css,md}'",
    "test:playwright": "cross-env MOCK_MODE=true TARGET_URL=http://localhost:5000 playwright test",
    "test:security": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/*.test.ts\"",
    "test:reentrancy": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/reentrancy-attack.test.ts\"",
    "test:oracle": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/oracle-manipulation.test.ts\"",
    "test:front-running": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/front-running-detection.test.ts\"",
    "test:phishing": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/eth-sign-phishing.test.ts\"",
    "test:signature-replay": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/signature-replay-attack.test.ts\"",
    "test:access-control": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/access-control-vulnerability.test.ts\"",
    "test:flash-loan": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/flash-loan-attack.test.ts\"",
    "test:all-vulns": "cross-env MOCK_MODE=true playwright test \"examples/security-bug-tests/{eth-sign-phishing,signature-replay-attack,access-control-vulnerability,flash-loan-attack}.test.ts\"",
    "report:generate": "node scripts/generate-security-report.js",
    "report:html": "node scripts/generate-security-report.js -f html",
    "report:md": "node scripts/generate-security-report.js -f md",
    "report:upload": "node scripts/generate-security-report.js -c",
    "report:html:upload": "node scripts/generate-security-report.js -f html -c",
    "report:md:upload": "node scripts/generate-security-report.js -f md -c",
    "firebase:setup": "node -e \"require('fs').writeFileSync('.firebase-config.json', JSON.stringify(require('./.firebase-config.example.json'), null, 2))\"",
    "demo": "node src/cli/index.js",
    "docker:start": "powershell -ExecutionPolicy Bypass -File \"scripts\\docker-setup.sh\" start",
    "docker:stop": "powershell -ExecutionPolicy Bypass -File \"scripts\\docker-setup.sh\" stop",
    "docker:build": "powershell -ExecutionPolicy Bypass -File \"scripts\\docker-setup.sh\" build",
    "setup:windows": "powershell -ExecutionPolicy Bypass -File \"scripts\\setup-windows.ps1\"",
    "setup:unix": "bash scripts/setup-unix.sh",
    "server:start": "powershell -ExecutionPolicy Bypass -File \"scripts\\server-manager.ps1\" -Action start -Port 5000",
    "server:stop": "powershell -ExecutionPolicy Bypass -File \"scripts\\server-manager.ps1\" -Action stop -Port 5000",
    "install:deps": "npm install --legacy-peer-deps",
    "install:playwright": "npx playwright install chromium",
    "postinstall": "node scripts/fix-dependencies.js",
    "analytics:setup": "node scripts/setup-analytics.js",
    "analytics:dashboard": "npx serve -p 3000 analytics-dashboard",
    "create:demo-gif": "bash create-quickstart-gif.sh",
    "create:demo-video": "bash scripts/create-demo-video.sh",
    "website:test": "lhci autorun",
    "generate:blog": "node scripts/generate-launch-blog.js",
    "generate:posts": "node scripts/generate-social-posts.js",
    "generate:utm-links": "node scripts/generate-utm-links.js",
    "create:documentation": "node scripts/create-documentation.js"
  },
  "keywords": [
    "web3",
    "dapp",
    "testing",
    "security",
    "blockchain",
    "ethereum",
    "defi",
    "fuzzing",
    "vulnerability",
    "auditing",
    "cross-chain"
  ],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0"
  },
  "resolutions": {
    "puppeteer": "^21.10.0",
    "@mermaid-js/mermaid-cli": "^10.6.1"
  }
}
