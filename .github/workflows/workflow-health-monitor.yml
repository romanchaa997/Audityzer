name: Workflow Health Monitor

on:
  schedule:
    - cron: '0 9 * * *'  # Daily at 9 AM UTC
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  monitor:
    name: Monitor Workflow Health
    runs-on: ubuntu-latest
    
    steps:
    - name: Check workflow status
      uses: actions/github-script@v7
      with:
        script: |
          const workflows = [
            { id: 168577534, name: 'CI/CD Pipeline' },
            { id: 168577526, name: 'Security Scanning' },
            { id: 168577533, name: 'Automated Release' }
          ];
          
          let healthReport = '# 🔍 Workflow Health Report\n\n';
          let allHealthy = true;
          
          for (const workflow of workflows) {
            console.log(`\n=== Checking ${workflow.name} ===`);
            
            try {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                per_page: 10
              });
              
              const recentRuns = runs.data.workflow_runs.slice(0, 5);
              const failures = recentRuns.filter(run => 
                run.conclusion === 'failure' || run.conclusion === 'startup_failure'
              );
              const successes = recentRuns.filter(run => run.conclusion === 'success');
              
              const successRate = recentRuns.length > 0 ? 
                (successes.length / recentRuns.length * 100).toFixed(1) : 0;
              
              healthReport += `## ${workflow.name}\n`;
              healthReport += `- **Success Rate**: ${successRate}% (${successes.length}/${recentRuns.length} recent runs)\n`;
              healthReport += `- **Recent Failures**: ${failures.length}\n`;
              
              if (failures.length > 0) {
                allHealthy = false;
                healthReport += `- **Latest Failure**: ${failures[0].html_url}\n`;
                console.log(`⚠️ ${workflow.name} has ${failures.length} recent failures`);
              } else {
                console.log(`✅ ${workflow.name} is healthy`);
              }
              
              healthReport += `- **Last Run**: ${recentRuns[0]?.created_at || 'Never'}\n\n`;
              
            } catch (error) {
              console.log(`❌ Error checking ${workflow.name}: ${error.message}`);
              healthReport += `- **Status**: Error checking workflow\n\n`;
              allHealthy = false;
            }
          }
          
          // Add summary
          const status = allHealthy ? '✅ All workflows healthy' : '⚠️ Some workflows need attention';
          healthReport += `## Summary\n${status}\n\n`;
          healthReport += `**Generated**: ${new Date().toISOString()}\n`;
          
          // Output to step summary
          core.summary.addRaw(healthReport);
          await core.summary.write();
          
          console.log('\n' + healthReport);
          
          // Set output for potential alerting
          core.setOutput('all_healthy', allHealthy);
          core.setOutput('health_report', healthReport);

    - name: Create health badge
      run: |
        echo "Creating workflow health badge..."
        mkdir -p .github/badges
        
        # Simple health status badge
        if [ "${{ steps.monitor.outputs.all_healthy }}" == "true" ]; then
          echo "![Workflow Health](https://img.shields.io/badge/workflows-healthy-green)" > .github/badges/workflow-health.md
        else
          echo "![Workflow Health](https://img.shields.io/badge/workflows-needs%20attention-yellow)" > .github/badges/workflow-health.md
        fi

    - name: Alert on failures (placeholder)
      if: steps.monitor.outputs.all_healthy != 'true'
      run: |
        echo "🚨 ALERT: Some workflows need attention!"
        echo "This is where you could integrate with:"
        echo "- Slack notifications"
        echo "- Email alerts"
        echo "- Discord webhooks"
        echo "- PagerDuty incidents"
        echo ""
        echo "Health report:"
        echo "${{ steps.monitor.outputs.health_report }}"
