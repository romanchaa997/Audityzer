
name: Workflow Health Monitoring

on:
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  workflow_dispatch: # Allow manual triggering

jobs:
  monitor-workflows:
    runs-on: ubuntu-latest
    name: Monitor Workflow Health
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps

    - name: Generate workflow health report
      run: |
        mkdir -p reports
        node -e "
        const { workflowMonitor } = require('./src/monitoring/workflow-monitor');
        
        async function generateReport() {
          await workflowMonitor.updateMetrics('romanchaa997', 'Audityzer');
          const report = workflowMonitor.generateReport();
          require('fs').writeFileSync('reports/workflow-health.md', report);
          console.log('Workflow health report generated');
          
          // Check for critical failures
          const metrics = workflowMonitor.getMetrics();
          let criticalWorkflows = [];
          
          metrics.forEach((metric, name) => {
            if (metric.successRate < 50) {
              criticalWorkflows.push(name);
            }
          });
          
          if (criticalWorkflows.length > 0) {
            console.log('::warning::Critical workflows detected:', criticalWorkflows.join(', '));
          }
        }
        
        generateReport().catch(console.error);
        "
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload health report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: workflow-health-report
        path: reports/
        retention-days: 30

    - name: Create issue for critical failures
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            const report = fs.readFileSync('reports/workflow-health.md', 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Critical Workflow Failures Detected',
              body: `## Workflow Health Alert\n\nCritical workflow failures have been detected. Please review the health report below:\n\n${report}`,
              labels: ['workflow', 'critical', 'ci-cd']
            });
          } catch (error) {
            console.log('Could not create issue:', error.message);
          }
