version: 2.1

orbs:
  node: circleci/node@5.1.0
  browser-tools: circleci/browser-tools@1.4.1

parameters:
  run_security_tests:
    type: boolean
    default: true
  run_static_analysis:
    type: boolean
    default: true

jobs:
  setup:
    docker:
      - image: cimg/node:18.18-browsers
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Playwright
          command: npx playwright install --with-deps chromium
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - package.json
            - package-lock.json

  validate_security_rules:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate Security Rules
          command: npx Audityzer security-validate ./security-rules.json
      - persist_to_workspace:
          root: .
          paths:
            - security-rules.json

  web3_security_tests:
    docker:
      - image: cimg/node:18.18-browsers
    resource_class: large
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: .
      - run:
          name: Create Results Directory
          command: mkdir -p test-results
      - run:
          name: Run Web3 Security Tests
          command: |
            npx Audityzer ci-run \
              --reporter=circleci,html,json,junit \
              --notify=true
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

  static_analysis:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install Static Analysis Tools
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install slither-analyzer
            npm install -g solhint
      - run:
          name: Create Static Analysis Directory
          command: mkdir -p test-results/static-analysis
      - run:
          name: Run Static Analysis
          command: |
            npx Audityzer ci-run \
              --reporter=circleci,html,json \
              --static-analysis=true \
              --contracts-dir=./contracts
      - store_artifacts:
          path: test-results/static-analysis
          destination: static-analysis-results

  deployment_validation:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate Contract Deployments
          command: |
            mkdir -p test-results/deployment
            npx Audityzer deploy-validate \
              --network=mainnet,testnet \
              --check-verification=true \
              --output=./test-results/deployment/validation-report.json
      - store_artifacts:
          path: test-results/deployment
          destination: deployment-validation

workflows:
  web3_security_pipeline:
    jobs:
      - setup
      - validate_security_rules:
          requires:
            - setup
      - web3_security_tests:
          requires:
            - validate_security_rules
          when:
            condition: << pipeline.parameters.run_security_tests >>
      - static_analysis:
          requires:
            - validate_security_rules
          when:
            condition: << pipeline.parameters.run_static_analysis >>
            and:
              equal: [true, << pipeline.parameters.run_static_analysis >>]
      - deployment_validation:
          requires:
            - setup
          filters:
            branches:
              only:
                - main
                - master
