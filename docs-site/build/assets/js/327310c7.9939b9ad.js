"use strict";(self.webpackChunkweb3fuzzforge_docs=self.webpackChunkweb3fuzzforge_docs||[]).push([[743],{5466:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"commands-reference","title":"Commands Reference","description":"This page documents all available Web3FuzzForge CLI commands and their options.","source":"@site/docs/commands-reference.md","sourceDirName":".","slug":"/commands-reference","permalink":"/docs/commands-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/web3fuzzforge/web3-security-test-kit/edit/main/docs-site/docs/commands-reference.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"mainSidebar","previous":{"title":"Quickstart","permalink":"/docs/quickstart"},"next":{"title":"Advanced Guides","permalink":"/docs/advanced-guides"}}');var r=s(4848),d=s(8453);const o={sidebar_position:4},c="Commands Reference",l={},t=[{value:"Global Commands",id:"global-commands",level:2},{value:"<code>help</code>",id:"help",level:3},{value:"<code>doctor</code>",id:"doctor",level:3},{value:"Test Generation Commands",id:"test-generation-commands",level:2},{value:"<code>generate</code>",id:"generate",level:3},{value:"Types",id:"types",level:4},{value:"Common Options",id:"common-options",level:4},{value:"<code>run</code>",id:"run",level:3},{value:"Options",id:"options",level:4},{value:"Configuration Commands",id:"configuration-commands",level:2},{value:"<code>init</code>",id:"init",level:3},{value:"<code>config</code>",id:"config",level:3},{value:"Advanced Commands",id:"advanced-commands",level:2},{value:"<code>snapshot</code>",id:"snapshot",level:3},{value:"<code>report</code>",id:"report",level:3},{value:"<code>fuzz</code>",id:"fuzz",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"commands-reference",children:"Commands Reference"})}),"\n",(0,r.jsx)(n.p,{children:"This page documents all available Web3FuzzForge CLI commands and their options."}),"\n",(0,r.jsx)(n.h2,{id:"global-commands",children:"Global Commands"}),"\n",(0,r.jsx)(n.h3,{id:"help",children:(0,r.jsx)(n.code,{children:"help"})}),"\n",(0,r.jsx)(n.p,{children:"Display help information for any command."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge help\r\nnpx web3fuzzforge help generate\n"})}),"\n",(0,r.jsx)(n.h3,{id:"doctor",children:(0,r.jsx)(n.code,{children:"doctor"})}),"\n",(0,r.jsx)(n.p,{children:"Verify your environment setup is correct."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge doctor\n"})}),"\n",(0,r.jsx)(n.p,{children:"The doctor command checks:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configuration file existence and validity"}),"\n",(0,r.jsx)(n.li,{children:"Required environment variables"}),"\n",(0,r.jsx)(n.li,{children:"Dependency installation status"}),"\n",(0,r.jsx)(n.li,{children:"Template file availability"}),"\n",(0,r.jsx)(n.li,{children:"Browser installation for Playwright"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"test-generation-commands",children:"Test Generation Commands"}),"\n",(0,r.jsx)(n.h3,{id:"generate",children:(0,r.jsx)(n.code,{children:"generate"})}),"\n",(0,r.jsx)(n.p,{children:"Generate test templates with various options."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge generate <type> [options]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"connect"})," - Generate wallet connection tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tx"})," - Generate transaction tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sign"})," - Generate signature tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"custom"})," - Generate custom test templates"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"common-options",children:"Common Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--wallet <name>"})," - Specify wallet type (metamask, coinbase, phantom, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--out <path>"})," - Output file path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--typescript"})," - Generate TypeScript instead of JavaScript"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--preset <name>"})," - Use a predefined configuration preset"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--fuzz"})," - Add fuzzing capabilities to generated tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--self-contained"})," - Generate tests without external dependencies"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"run",children:(0,r.jsx)(n.code,{children:"run"})}),"\n",(0,r.jsx)(n.p,{children:"Run generated tests with various options."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge run [options]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--mock-mode"})," - Run with mocked wallet implementations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--headed"})," - Run tests in headed mode (showing browser UI)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--target-url=<url>"})," - Specify the target dApp URL"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--report"})," - Generate a detailed test report"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--workers=<number>"})," - Specify number of parallel test workers"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-commands",children:"Configuration Commands"}),"\n",(0,r.jsx)(n.h3,{id:"init",children:(0,r.jsx)(n.code,{children:"init"})}),"\n",(0,r.jsx)(n.p,{children:"Initialize a new configuration file for your project."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge init\n"})}),"\n",(0,r.jsx)(n.h3,{id:"config",children:(0,r.jsx)(n.code,{children:"config"})}),"\n",(0,r.jsx)(n.p,{children:"View or edit configuration settings."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge config list\r\nnpx web3fuzzforge config set <key> <value>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-commands",children:"Advanced Commands"}),"\n",(0,r.jsx)(n.h3,{id:"snapshot",children:(0,r.jsx)(n.code,{children:"snapshot"})}),"\n",(0,r.jsx)(n.p,{children:"Create and manage wallet state snapshots."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge snapshot create\r\nnpx web3fuzzforge snapshot list\r\nnpx web3fuzzforge snapshot use <name>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"report",children:(0,r.jsx)(n.code,{children:"report"})}),"\n",(0,r.jsx)(n.p,{children:"Generate and manage test reports."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge report generate\r\nnpx web3fuzzforge report open\n"})}),"\n",(0,r.jsx)(n.h3,{id:"fuzz",children:(0,r.jsx)(n.code,{children:"fuzz"})}),"\n",(0,r.jsx)(n.p,{children:"Run fuzz testing on your dApp."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx web3fuzzforge fuzz --target-url=<url> --wallet <type>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const r={},d=i.createContext(r);function o(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);