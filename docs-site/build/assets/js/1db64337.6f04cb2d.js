"use strict";(self.webpackChunkweb3fuzzforge_docs=self.webpackChunkweb3fuzzforge_docs||[]).push([[413],{2883:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"overview","title":"Overview","description":"Web3FuzzForge is a comprehensive toolkit for testing Web3 dApps, focusing on security and functional testing.","source":"@site/docs/overview.md","sourceDirName":".","slug":"/overview","permalink":"/docs/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/web3fuzzforge/web3-security-test-kit/edit/main/docs-site/docs/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","next":{"title":"Why It Matters","permalink":"/docs/why-it-matters"}}');var s=t(4848),o=t(8453);const r={sidebar_position:1},l="Overview",a={},c=[{value:"What&#39;s Inside",id:"whats-inside",level:2},{value:"Core Features",id:"core-features",level:2},{value:"Technical Foundation",id:"technical-foundation",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,s.jsx)(n.p,{children:"Web3FuzzForge is a comprehensive toolkit for testing Web3 dApps, focusing on security and functional testing."}),"\n",(0,s.jsx)(n.h2,{id:"whats-inside",children:"What's Inside"}),"\n",(0,s.jsx)(n.p,{children:"Web3FuzzForge provides a complete testing solution for Web3 applications:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Wallet Connection Testing"}),": Test connections with popular Web3 wallets like MetaMask, Coinbase, and Phantom"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transaction Flow Testing"}),": Automate transaction signing, sending, and verification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security Testing"}),": Fuzzing tools to identify common Web3 security vulnerabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cross-Chain Support"}),": Test your dApp across multiple EVM and non-EVM chains"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mock Wallet Mode"}),": Test without requiring actual wallet extensions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Self-Contained Tests"}),": Run tests without external dependencies"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"core-features",children:"Core Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code Generation"}),": Create test templates with a single command"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multiple Wallet Support"}),": Test with MetaMask, Coinbase Wallet, WalletConnect, and more"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fuzzing Capabilities"}),": Identify edge cases and security issues"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Snapshot-based Testing"}),": Capture and replay wallet states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI Visibility Handling"}),": Specialized tools for handling Web3 UI components"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-foundation",children:"Technical Foundation"}),"\n",(0,s.jsx)(n.p,{children:"Built on the Playwright testing framework, Web3FuzzForge extends it with specialized tools for Web3 interactions, allowing you to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automate wallet extension interactions"}),"\n",(0,s.jsx)(n.li,{children:"Simulate user actions like connecting wallets and approving transactions"}),"\n",(0,s.jsx)(n.li,{children:"Test RPC method handling"}),"\n",(0,s.jsx)(n.li,{children:"Verify correct transaction flows"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);