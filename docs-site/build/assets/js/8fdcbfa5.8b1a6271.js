"use strict";(self.webpackChunkweb3fuzzforge_docs=self.webpackChunkweb3fuzzforge_docs||[]).push([[820],{6161:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"community-test-examples","title":"Community Test Examples","description":"This section showcases community-contributed test examples for Web3 security testing. These examples provide real-world patterns for testing common Web3 vulnerability scenarios.","source":"@site/docs/community-test-examples.md","sourceDirName":".","slug":"/community-test-examples","permalink":"/docs/community-test-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/web3fuzzforge/web3-security-test-kit/edit/main/docs-site/docs/community-test-examples.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"Vulnerability Categorization","permalink":"/docs/vulnerability-categorization"}}');var s=i(4848),r=i(8453);const l={sidebar_position:2},o="Community Test Examples",a={},c=[{value:"Contributing a Test Example",id:"contributing-a-test-example",level:2},{value:"Available Examples",id:"available-examples",level:2},{value:"Wallet Connection Tests",id:"wallet-connection-tests",level:3},{value:"Transaction Flow Tests",id:"transaction-flow-tests",level:3},{value:"Example Details",id:"example-details",level:2},{value:"Wallet Connection Hijacking Test",id:"wallet-connection-hijacking-test",level:3},{value:"Requesting New Examples",id:"requesting-new-examples",level:2},{value:"Future Plans",id:"future-plans",level:2},{value:"Guidelines for Example Quality",id:"guidelines-for-example-quality",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"community-test-examples",children:"Community Test Examples"})}),"\n",(0,s.jsx)(t.p,{children:"This section showcases community-contributed test examples for Web3 security testing. These examples provide real-world patterns for testing common Web3 vulnerability scenarios."}),"\n",(0,s.jsx)(t.h2,{id:"contributing-a-test-example",children:"Contributing a Test Example"}),"\n",(0,s.jsx)(t.p,{children:"We welcome contributions from the community. To contribute your own test example:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Fork the repository"}),"\n",(0,s.jsxs)(t.li,{children:["Add your example to the appropriate directory in ",(0,s.jsx)(t.code,{children:"web3fuzzforge-community-tests/"})]}),"\n",(0,s.jsx)(t.li,{children:"Include detailed documentation explaining the security concept being tested"}),"\n",(0,s.jsx)(t.li,{children:"Submit a pull request with your example"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"available-examples",children:"Available Examples"}),"\n",(0,s.jsx)(t.h3,{id:"wallet-connection-tests",children:"Wallet Connection Tests"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Author"}),(0,s.jsx)(t.th,{children:"Link"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wallet Connection Hijacking Test"}),(0,s.jsx)(t.td,{children:"Tests for prevention of malicious connection requests"}),(0,s.jsx)(t.td,{children:"@web3-tester"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/web3fuzzforge/web3-security-test-kit/blob/main/web3fuzzforge-community-tests/dapp-tests/wallet-connection/connection-hijacking-test.js",children:"View Example"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Multi-Wallet Support Test"}),(0,s.jsx)(t.td,{children:"Tests dApp compatibility with different wallet providers"}),(0,s.jsx)(t.td,{children:"@chain-defender"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/web3fuzzforge/web3-security-test-kit/blob/main/web3fuzzforge-community-tests/dapp-tests/wallet-connection/multi-wallet-test.js",children:"View Example"})})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"transaction-flow-tests",children:"Transaction Flow Tests"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Author"}),(0,s.jsx)(t.th,{children:"Link"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Transaction Parameter Manipulation"}),(0,s.jsx)(t.td,{children:"Tests for prevention of transaction parameter tampering"}),(0,s.jsx)(t.td,{children:"@smart-audit"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/web3fuzzforge/web3-security-test-kit/blob/main/web3fuzzforge-community-tests/dapp-tests/transaction-flow/tx-parameter-test.js",children:"View Example"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Gas Optimization Test"}),(0,s.jsx)(t.td,{children:"Tests for reasonable gas limits and price suggestions"}),(0,s.jsx)(t.td,{children:"@gas-optimizer"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/web3fuzzforge/web3-security-test-kit/blob/main/web3fuzzforge-community-tests/dapp-tests/transaction-flow/gas-optimization-test.js",children:"View Example"})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"example-details",children:"Example Details"}),"\n",(0,s.jsx)(t.h3,{id:"wallet-connection-hijacking-test",children:"Wallet Connection Hijacking Test"}),"\n",(0,s.jsx)(t.p,{children:"This example tests for proper origin verification in wallet connection flows. It simulates:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"A legitimate connection request"}),"\n",(0,s.jsx)(t.li,{children:"A spoofed connection request from an unexpected origin"}),"\n",(0,s.jsx)(t.li,{children:"Verification that the dApp properly validates connection origins"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The test looks for:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Origin verification in connection requests"}),"\n",(0,s.jsx)(t.li,{children:"Proper error handling for invalid connection attempts"}),"\n",(0,s.jsx)(t.li,{children:"Clear user notifications about connection security"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// Simplified example\ntest('wallet connection origin verification', async ({ page }) => {\n  // Set up legitimate connection\n  await page.goto('https://legitimate-dapp.com');\n  await page.click('#connect-wallet');\n\n  // Verify connection success\n  await page.waitForSelector('[data-testid=\"connected-status\"]');\n\n  // Set up spoofed connection from unexpected origin\n  const spoofedPage = await context.newPage();\n  await spoofedPage.goto('https://legitimate-dapp.com');\n\n  // Attempt to inject malicious origin\n  await spoofedPage.evaluate(() => {\n    // Attempt to spoof origin in connection request\n    window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [{ origin: 'https://legitimate-dapp.com' }],\n    });\n  });\n\n  // Check for proper error handling\n  const errorVisible = await spoofedPage.isVisible('[data-testid=\"connection-error\"]');\n  expect(errorVisible).toBeTruthy();\n});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"requesting-new-examples",children:"Requesting New Examples"}),"\n",(0,s.jsx)(t.p,{children:"If you need examples for specific security scenarios, please open an issue on our GitHub repository with:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"A description of the security scenario"}),"\n",(0,s.jsx)(t.li,{children:"The specific vulnerability or pattern you want to test"}),"\n",(0,s.jsx)(t.li,{children:"Any reference materials or existing exploits"}),"\n",(0,s.jsx)(t.li,{children:"(Optional) A sketch of the test approach you're considering"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"future-plans",children:"Future Plans"}),"\n",(0,s.jsx)(t.p,{children:"We're working to expand our community test examples with:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"More DeFi-specific vulnerability tests"}),"\n",(0,s.jsx)(t.li,{children:"NFT marketplace security tests"}),"\n",(0,s.jsx)(t.li,{children:"Cross-chain security tests"}),"\n",(0,s.jsx)(t.li,{children:"Token bridge vulnerability tests"}),"\n",(0,s.jsx)(t.li,{children:"Mobile wallet security tests"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"guidelines-for-example-quality",children:"Guidelines for Example Quality"}),"\n",(0,s.jsx)(t.p,{children:"When contributing examples, please ensure they:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Focus on a specific, well-defined security concern"}),"\n",(0,s.jsx)(t.li,{children:"Include clear documentation about what's being tested and why"}),"\n",(0,s.jsx)(t.li,{children:"Use realistic but safe testing approaches"}),"\n",(0,s.jsx)(t.li,{children:"Follow best practices for test structure and readability"}),"\n",(0,s.jsx)(t.li,{children:"Include appropriate assertions and verifications"}),"\n",(0,s.jsx)(t.li,{children:"Avoid using real assets or mainnet in test examples"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>o});var n=i(6540);const s={},r=n.createContext(s);function l(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);