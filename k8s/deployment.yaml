
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audityzer
  namespace: audityzer
  labels:
    app: audityzer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audityzer
  template:
    metadata:
      labels:
        app: audityzer
    spec:
      containers:
      - name: audityzer
        image: audityzer:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: reports
          mountPath: /app/reports
      volumes:
      - name: config
        configMap:
          name: audityzer-config
      - name: reports
        persistentVolumeClaim:
          claimName: audityzer-reports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audityzer-mcp
  namespace: audityzer
  labels:
    app: audityzer-mcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audityzer-mcp
  template:
    metadata:
      labels:
        app: audityzer-mcp
    spec:
      containers:
      - name: mcp-server
        image: audityzer-mcp:latest
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "production"
        - name: MCP_PORT
          value: "8080"
        - name: AUDITYZER_URL
          value: "http://audityzer-service:5000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
